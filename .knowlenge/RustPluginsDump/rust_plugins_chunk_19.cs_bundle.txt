9\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049 )
        {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0038\u0035 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0033\u0030  = \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0038\u0038 (\u0074\u0068\u0069\u0073 , \u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049 , \u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049 );
            \u0074\u0072\u0079 
            {
                \u0072\u0065\u0074\u0075\u0072\u006E  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0033\u0030 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0038\u0036 ();
            }
            \u0063\u0061\u0074\u0063\u0068  (\u0053\u0079\u0073\u0074\u0065\u006D .\u0045\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E \u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E )
            {
\u0067\u006C\u006F\u0062\u0061\u006C ::\u004F\u0078\u0069\u0064\u0065 .\u0043\u006F\u0072\u0065 .\u0049\u006E\u0074\u0065\u0072\u0066\u0061\u0063\u0065 .\u004F\u0078\u0069\u0064\u0065 .\u004C\u006F\u0067\u0045\u0072\u0072\u006F\u0072 (\u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E .\u004D\u0065\u0073\u0073\u0061\u0067\u0065 + "\n" + \u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E .\u0053\u0074\u0061\u0063\u006B\u0054\u0072\u0061\u0063\u0065 );
                \u0074\u0068\u0072\u006F\u0077 ;
            }
            \u0066\u0069\u006E\u0061\u006C\u006C\u0079 
            {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0038\u0039 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0033\u0030 );
            }
        }

        \u0063\u006C\u0061\u0073\u0073  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0036\u0035 
        {
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0047\u006F\u006C\u0064\u0065\u006E\u0073\u006B\u0075\u006C\u006C \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0037\u0036 ;
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0049\u0074\u0065\u006D \u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C ;
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0073\u0074\u0072\u0069\u006E\u0067  \u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049 ;
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0042\u0061\u0073\u0065\u0050\u006C\u0061\u0079\u0065\u0072 \u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C ;
            \u0070\u0075\u0062\u006C\u0069\u0063  \u004F\u0078\u0069\u0064\u0065 .\u0050\u006C\u0075\u0067\u0069\u006E\u0073 .\u0047\u006F\u006C\u0064\u0065\u006E\u0073\u006B\u0075\u006C\u006C .\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049 \u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049 ;
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0049\u0074\u0065\u006D \u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049 ;
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0076\u006F\u0069\u0064  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0036\u0037 (\u0047\u006F\u006C\u0064\u0065\u006E\u0073\u006B\u0075\u006C\u006C \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0037\u0036 , \u0049\u0074\u0065\u006D \u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C , \u0073\u0074\u0072\u0069\u006E\u0067  \u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049 , \u0042\u0061\u0073\u0065\u0050\u006C\u0061\u0079\u0065\u0072 \u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C )
            {
                \u0074\u0068\u0069\u0073 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0037\u0036 = (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0037\u0036 );
                \u0074\u0068\u0069\u0073 .\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C = (\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C );
                \u0074\u0068\u0069\u0073 .\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049 = (\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049 );
                \u0074\u0068\u0069\u0073 .\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C = (\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C );
            }

            \u0070\u0075\u0062\u006C\u0069\u0063  \u006F\u0062\u006A\u0065\u0063\u0074  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0035 ()
            {
                \u0072\u0065\u0074\u0075\u0072\u006E  \u006E\u0065\u0077  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0030 ();
            }

            \u0070\u0075\u0062\u006C\u0069\u0063  \u006F\u0062\u006A\u0065\u0063\u0074  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0036 ;
            \u0070\u0075\u0062\u006C\u0069\u0063  \u006F\u0062\u006A\u0065\u0063\u0074  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0037 ()
            {
                \u0069\u0066  (\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C .\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049 [0].\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C == \u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C .\u0069\u006E\u0066\u006F .\u0073\u0068\u006F\u0072\u0074\u006E\u0061\u006D\u0065 )
                {
\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049 = \u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C .\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049 [0];
                    \u0069\u0066  (\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C .\u0073\u006B\u0069\u006E != \u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049 .\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C || \u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049 != "crush")
                        \u0072\u0065\u0074\u0075\u0072\u006E  \u006E\u0065\u0077  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0030 ();
\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049 = \u0049\u0074\u0065\u006D\u004D\u0061\u006E\u0061\u0067\u0065\u0072 .\u0043\u0072\u0065\u0061\u0074\u0065\u0042\u0079\u004E\u0061\u006D\u0065 (\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C .\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049 [0].\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C [\u0055\u006E\u0069\u0074\u0079\u0045\u006E\u0067\u0069\u006E\u0065 .\u0052\u0061\u006E\u0064\u006F\u006D .\u0052\u0061\u006E\u0067\u0065 (0, \u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C .\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049 [0].\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C .\u0043\u006F\u0075\u006E\u0074 - 1)], 1, 0);
\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C .\u0047\u0069\u0076\u0065\u0049\u0074\u0065\u006D (\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049 );
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0037\u0036 .\u004E\u0065\u0078\u0074\u0054\u0069\u0063\u006B (() => \u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C .\u0069\u006E\u0076\u0065\u006E\u0074\u006F\u0072\u0079 .\u0054\u0061\u006B\u0065 (\u006E\u0075\u006C\u006C , \u0049\u0074\u0065\u006D\u004D\u0061\u006E\u0061\u0067\u0065\u0072 .\u0046\u0069\u006E\u0064\u0049\u0074\u0065\u006D\u0044\u0065\u0066\u0069\u006E\u0069\u0074\u0069\u006F\u006E ("bone.fragments").\u0069\u0074\u0065\u006D\u0069\u0064 , 20));
                }

                \u0072\u0065\u0074\u0075\u0072\u006E  \u006E\u0075\u006C\u006C ;
            }

            \u0070\u0075\u0062\u006C\u0069\u0063  \u006F\u0062\u006A\u0065\u0063\u0074  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0036\u0036 ()
            {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0038 = ~-28280705;
                \u0053\u0054\u0041\u0052\u0054 :
                \u0073\u0077\u0069\u0074\u0063\u0068  (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0038 )
                {
                    \u0063\u0061\u0073\u0065  2411010 << 4:
                        \u0069\u0066  (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0036 \u0069\u0073  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0030 )
                            \u0072\u0065\u0074\u0075\u0072\u006E  \u0064\u0065\u0066\u0061\u0075\u006C\u0074 (\u006F\u0062\u006A\u0065\u0063\u0074 );
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0038 = 20606976;
                        \u0067\u006F\u0074\u006F  \u0053\u0054\u0041\u0052\u0054 ;
                    \u0063\u0061\u0073\u0065  -2533876 << 3:
                        \u0062\u0072\u0065\u0061\u006B ;
                    \u0063\u0061\u0073\u0065  -3542930 << 4:
                        \u0072\u0065\u0074\u0075\u0072\u006E  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0036 ;
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0038 = -20271008;
                        \u0067\u006F\u0074\u006F  \u0053\u0054\u0041\u0052\u0054 ;
                    \u0063\u0061\u0073\u0065  12748560 << 1:
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0036 = \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0035 ();
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0038 = -50320864;
                        \u0067\u006F\u0074\u006F  \u0053\u0054\u0041\u0052\u0054 ;
                    \u0063\u0061\u0073\u0065  2575872 << 3:
                        \u0069\u0066  (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0036 != \u006E\u0075\u006C\u006C )
                            \u0072\u0065\u0074\u0075\u0072\u006E  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0036 ;
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0038 = 25497120;
                        \u0067\u006F\u0074\u006F  \u0053\u0054\u0041\u0052\u0054 ;
                    \u0063\u0061\u0073\u0065  -805133824 >> 4:
                        \u0069\u0066  (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0036 \u0069\u0073  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0030 )
                            \u0072\u0065\u0074\u0075\u0072\u006E  \u0064\u0065\u0066\u0061\u0075\u006C\u0074 (\u006F\u0062\u006A\u0065\u0063\u0074 );
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0038 = -56686880;
                        \u0067\u006F\u0074\u006F  \u0053\u0054\u0041\u0052\u0054 ;
                    \u0063\u0061\u0073\u0065  3535088 << 3:
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0036 = \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0037 ();
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0038 = 38576160;
                        \u0067\u006F\u0074\u006F  \u0053\u0054\u0041\u0052\u0054 ;
                }

                \u0074\u0068\u0072\u006F\u0077  \u006E\u0065\u0077  \u0053\u0079\u0073\u0074\u0065\u006D .\u0045\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E ();
            }

            \u0070\u0075\u0062\u006C\u0069\u0063  \u0069\u006E\u0074  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0038 ;
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0069\u006E\u0074  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0036\u0039 ;
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0069\u006E\u0074  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0037\u0030 ;
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0069\u006E\u0074  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0037\u0031 ;
        }

        \u0076\u006F\u0069\u0064  \u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049 (\u0042\u0061\u0073\u0065\u0043\u006F\u006D\u0062\u0061\u0074\u0045\u006E\u0074\u0069\u0074\u0079 \u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C , \u0048\u0069\u0074\u0049\u006E\u0066\u006F \u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C )
        {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0033\u0035 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0032\u0030  = \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0033\u0038 (\u0074\u0068\u0069\u0073 , \u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C , \u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C );
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0032\u0030 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0033\u0036 ();
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0033\u0039 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0032\u0030 );
        }

        \u0070\u0072\u006F\u0074\u0065\u0063\u0074\u0065\u0064  \u006F\u0076\u0065\u0072\u0072\u0069\u0064\u0065  \u0076\u006F\u0069\u0064  \u004C\u006F\u0061\u0064\u0044\u0065\u0066\u0061\u0075\u006C\u0074\u0043\u006F\u006E\u0066\u0069\u0067 ()
        {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0039\u0030 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0031  = \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0039\u0033 (\u0074\u0068\u0069\u0073 );
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0031 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0039\u0031 ();
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0039\u0034 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0031 );
        }

        \u006F\u0062\u006A\u0065\u0063\u0074  \u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049 (\u0049\u0074\u0065\u006D \u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C , \u0073\u0074\u0072\u0069\u006E\u0067  \u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049 , \u0042\u0061\u0073\u0065\u0050\u006C\u0061\u0079\u0065\u0072 \u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C )
        {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0036\u0035 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0032\u0036  = \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0036\u0038 (\u0074\u0068\u0069\u0073 , \u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C , \u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049 , \u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C );
            \u0074\u0072\u0079 
            {
                \u0072\u0065\u0074\u0075\u0072\u006E  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0032\u0036 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0036\u0036 ();
            }
            \u0063\u0061\u0074\u0063\u0068  (\u0053\u0079\u0073\u0074\u0065\u006D .\u0045\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E \u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E )
            {
\u0067\u006C\u006F\u0062\u0061\u006C ::\u004F\u0078\u0069\u0064\u0065 .\u0043\u006F\u0072\u0065 .\u0049\u006E\u0074\u0065\u0072\u0066\u0061\u0063\u0065 .\u004F\u0078\u0069\u0064\u0065 .\u004C\u006F\u0067\u0045\u0072\u0072\u006F\u0072 (\u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E .\u004D\u0065\u0073\u0073\u0061\u0067\u0065 + "\n" + \u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E .\u0053\u0074\u0061\u0063\u006B\u0054\u0072\u0061\u0063\u0065 );
                \u0074\u0068\u0072\u006F\u0077 ;
            }
            \u0066\u0069\u006E\u0061\u006C\u006C\u0079 
            {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0036\u0039 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0032\u0036 );
            }
        }

        \u0063\u006C\u0061\u0073\u0073  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0039\u0035 
        {
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0047\u006F\u006C\u0064\u0065\u006E\u0073\u006B\u0075\u006C\u006C \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0036\u0032 ;
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0076\u006F\u0069\u0064  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0039\u0037 (\u0047\u006F\u006C\u0064\u0065\u006E\u0073\u006B\u0075\u006C\u006C \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0036\u0032 )
            {
                \u0074\u0068\u0069\u0073 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0036\u0032 = (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0036\u0032 );
            }

            \u0070\u0075\u0062\u006C\u0069\u0063  \u006F\u0062\u006A\u0065\u0063\u0074  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0033\u0039 ()
            {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0036\u0032 .\u0043\u006F\u006E\u0066\u0069\u0067 .\u0057\u0072\u0069\u0074\u0065\u004F\u0062\u006A\u0065\u0063\u0074 (\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C );
                \u0072\u0065\u0074\u0075\u0072\u006E  \u006E\u0075\u006C\u006C ;
            }

            \u0070\u0075\u0062\u006C\u0069\u0063  \u0076\u006F\u0069\u0064  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0039\u0036 ()
            {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0034\u0030 = ~42169887;
                \u0053\u0054\u0041\u0052\u0054 :
                \u0073\u0077\u0069\u0074\u0063\u0068  (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0034\u0030 )
                {
                    \u0063\u0061\u0073\u0065  -313439488 >> 3:
                        \u0062\u0072\u0065\u0061\u006B ;
                    \u0063\u0061\u0073\u0065  -21084944 << 1:
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0033\u0039 ();
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0034\u0030 = -39179936;
                        \u0067\u006F\u0074\u006F  \u0053\u0054\u0041\u0052\u0054 ;
                }
            }

            \u0070\u0075\u0062\u006C\u0069\u0063  \u0069\u006E\u0074  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0034\u0030 ;
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0069\u006E\u0074  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0034\u0031 ;
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0069\u006E\u0074  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0034\u0032 ;
        }
        [\u0043\u0068\u0061\u0074\u0043\u006F\u006D\u006D\u0061\u006E\u0064 ("g.give")]
        \u0070\u0072\u0069\u0076\u0061\u0074\u0065  \u0076\u006F\u0069\u0064  \u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C (\u0042\u0061\u0073\u0065\u0050\u006C\u0061\u0079\u0065\u0072 \u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C , \u0073\u0074\u0072\u0069\u006E\u0067  \u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049 , \u0073\u0074\u0072\u0069\u006E\u0067 [] \u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C )
        {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0032\u0030 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0037  = \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0032\u0033 (\u0074\u0068\u0069\u0073 , \u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C , \u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049 , \u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C );
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0037 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0032\u0031 ();
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0032\u0034 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0037 );
        }

        \u0073\u0074\u0061\u0074\u0069\u0063  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0039\u0030 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0039\u0033 (\u0047\u006F\u006C\u0064\u0065\u006E\u0073\u006B\u0075\u006C\u006C \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0038\u0031 , \u0049\u0074\u0065\u006D \u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C , \u0069\u006E\u0074  \u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C )
        {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0039\u0030 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0039\u0031\u0031 ;
            \u0069\u0066  (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0039\u0030\u0039 .\u0043\u006F\u0075\u006E\u0074 > 0)
            {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0039\u0031\u0031 = \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0039\u0030\u0039 [0];
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0039\u0030\u0039 .\u0052\u0065\u006D\u006F\u0076\u0065\u0041\u0074 (0);
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0039\u0031\u0031 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0039\u0032 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0038\u0031 , \u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C , \u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C );
                \u0072\u0065\u0074\u0075\u0072\u006E  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0039\u0031\u0031 ;
            }
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0039\u0031\u0031 = \u006E\u0065\u0077  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0039\u0030 ();
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0039\u0031\u0031 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0039\u0032 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0038\u0031 , \u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C , \u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C );
            \u0072\u0065\u0074\u0075\u0072\u006E  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0039\u0031\u0031 ;
        }

        \u0070\u0075\u0062\u006C\u0069\u0063  \u0063\u006C\u0061\u0073\u0073  \u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049 
        {
            [\u004A\u0073\u006F\u006E\u0050\u0072\u006F\u0070\u0065\u0072\u0074\u0079 ("Отображаемое имя", \u004F\u0072\u0064\u0065\u0072 = 0)]
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0073\u0074\u0072\u0069\u006E\u0067  \u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C ;
            [\u004A\u0073\u006F\u006E\u0050\u0072\u006F\u0070\u0065\u0072\u0074\u0079 ("Этот парамтр менять не нужно", \u004F\u0072\u0064\u0065\u0072 = 1)]
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0073\u0074\u0072\u0069\u006E\u0067  \u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C ;
            [\u004A\u0073\u006F\u006E\u0050\u0072\u006F\u0070\u0065\u0072\u0074\u0079 ("Шанс выпадения", \u004F\u0072\u0064\u0065\u0072 = 2)]
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0069\u006E\u0074  \u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C ;
            [\u004A\u0073\u006F\u006E\u0050\u0072\u006F\u0070\u0065\u0072\u0074\u0079 ("Кол-вл выпадения", \u004F\u0072\u0064\u0065\u0072 = 3)]
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0069\u006E\u0074  \u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C ;
            [\u004A\u0073\u006F\u006E\u0050\u0072\u006F\u0070\u0065\u0072\u0074\u0079 ("Скин ID черепа", \u004F\u0072\u0064\u0065\u0072 = 4)]
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0075\u006C\u006F\u006E\u0067  \u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C ;
            [\u004A\u0073\u006F\u006E\u0050\u0072\u006F\u0070\u0065\u0072\u0074\u0079 ("Включить ли выпадения из бочек ?", \u004F\u0072\u0064\u0065\u0072 = 5)]
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0062\u006F\u006F\u006C  \u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C ;
            [\u004A\u0073\u006F\u006E\u0050\u0072\u006F\u0070\u0065\u0072\u0074\u0079 ("Из каких бочек будет падать и процент выпадения", \u004F\u0072\u0064\u0065\u0072 = 6)]
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0044\u0069\u0063\u0074\u0069\u006F\u006E\u0061\u0072\u0079 <\u0073\u0074\u0072\u0069\u006E\u0067 , \u0069\u006E\u0074 > \u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049  = \u006E\u0065\u0077  \u0044\u0069\u0063\u0074\u0069\u006F\u006E\u0061\u0072\u0079 <\u0073\u0074\u0072\u0069\u006E\u0067 , \u0069\u006E\u0074 >();
            [\u004A\u0073\u006F\u006E\u0050\u0072\u006F\u0070\u0065\u0072\u0074\u0079 ("Призы за переработку", \u004F\u0072\u0064\u0065\u0072 = 7)]
            \u0070\u0075\u0062\u006C\u0069\u0063  \u004C\u0069\u0073\u0074 <\u0073\u0074\u0072\u0069\u006E\u0067 > \u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C  = \u006E\u0065\u0077  \u004C\u0069\u0073\u0074 <\u0073\u0074\u0072\u0069\u006E\u0067 >();
            [\u004A\u0073\u006F\u006E\u0050\u0072\u006F\u0070\u0065\u0072\u0074\u0079 ("Призы за потрошения", \u004F\u0072\u0064\u0065\u0072 = 8)]
            \u0070\u0075\u0062\u006C\u0069\u0063  \u004C\u0069\u0073\u0074 <\u0073\u0074\u0072\u0069\u006E\u0067 > \u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C  = \u006E\u0065\u0077  \u004C\u0069\u0073\u0074 <\u0073\u0074\u0072\u0069\u006E\u0067 >();
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0069\u006E\u0074  \u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C ()
            {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0030\u0030 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0033  = \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0030\u0033 (\u0074\u0068\u0069\u0073 );
                \u0074\u0072\u0079 
                {
                    \u0072\u0065\u0074\u0075\u0072\u006E  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0033 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0030\u0031 ();
                }
                \u0063\u0061\u0074\u0063\u0068  (\u0053\u0079\u0073\u0074\u0065\u006D .\u0045\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E \u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E )
                {
\u0067\u006C\u006F\u0062\u0061\u006C ::\u004F\u0078\u0069\u0064\u0065 .\u0043\u006F\u0072\u0065 .\u0049\u006E\u0074\u0065\u0072\u0066\u0061\u0063\u0065 .\u004F\u0078\u0069\u0064\u0065 .\u004C\u006F\u0067\u0045\u0072\u0072\u006F\u0072 (\u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E .\u004D\u0065\u0073\u0073\u0061\u0067\u0065 + "\n" + \u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E .\u0053\u0074\u0061\u0063\u006B\u0054\u0072\u0061\u0063\u0065 );
                    \u0074\u0068\u0072\u006F\u0077 ;
                }
                \u0066\u0069\u006E\u0061\u006C\u006C\u0079 
                {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0030\u0034 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0033 );
                }
            }

            \u0070\u0075\u0062\u006C\u0069\u0063  \u0069\u006E\u0074  \u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049 (\u0042\u0061\u0073\u0065\u0050\u006C\u0061\u0079\u0065\u0072 \u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049 )
            {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0030\u0035 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0034  = \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0030\u0038 (\u0074\u0068\u0069\u0073 , \u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049 );
                \u0074\u0072\u0079 
                {
                    \u0072\u0065\u0074\u0075\u0072\u006E  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0034 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0030\u0036 ();
                }
                \u0063\u0061\u0074\u0063\u0068  (\u0053\u0079\u0073\u0074\u0065\u006D .\u0045\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E \u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E )
                {
\u0067\u006C\u006F\u0062\u0061\u006C ::\u004F\u0078\u0069\u0064\u0065 .\u0043\u006F\u0072\u0065 .\u0049\u006E\u0074\u0065\u0072\u0066\u0061\u0063\u0065 .\u004F\u0078\u0069\u0064\u0065 .\u004C\u006F\u0067\u0045\u0072\u0072\u006F\u0072 (\u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E .\u004D\u0065\u0073\u0073\u0061\u0067\u0065 + "\n" + \u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E .\u0053\u0074\u0061\u0063\u006B\u0054\u0072\u0061\u0063\u0065 );
                    \u0074\u0068\u0072\u006F\u0077 ;
                }
                \u0066\u0069\u006E\u0061\u006C\u006C\u0079 
                {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0030\u0039 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0034 );
                }
            }

            \u0070\u0075\u0062\u006C\u0069\u0063  \u0049\u0074\u0065\u006D \u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C (\u0069\u006E\u0074  \u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C  = 1)
            {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0031\u0030 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0035  = \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0031\u0033 (\u0074\u0068\u0069\u0073 , \u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C );
                \u0074\u0072\u0079 
                {
                    \u0072\u0065\u0074\u0075\u0072\u006E  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0035 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0031\u0031 ();
                }
                \u0063\u0061\u0074\u0063\u0068  (\u0053\u0079\u0073\u0074\u0065\u006D .\u0045\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E \u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E )
                {
\u0067\u006C\u006F\u0062\u0061\u006C ::\u004F\u0078\u0069\u0064\u0065 .\u0043\u006F\u0072\u0065 .\u0049\u006E\u0074\u0065\u0072\u0066\u0061\u0063\u0065 .\u004F\u0078\u0069\u0064\u0065 .\u004C\u006F\u0067\u0045\u0072\u0072\u006F\u0072 (\u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E .\u004D\u0065\u0073\u0073\u0061\u0067\u0065 + "\n" + \u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E .\u0053\u0074\u0061\u0063\u006B\u0054\u0072\u0061\u0063\u0065 );
                    \u0074\u0068\u0072\u006F\u0077 ;
                }
                \u0066\u0069\u006E\u0061\u006C\u006C\u0079 
                {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0031\u0034 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0035 );
                }
            }

            \u0070\u0075\u0062\u006C\u0069\u0063  \u0076\u006F\u0069\u0064  \u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C (\u0042\u0061\u0073\u0065\u0050\u006C\u0061\u0079\u0065\u0072 \u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C , \u0056\u0065\u0063\u0074\u006F\u0072\u0033 \u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049 , \u0069\u006E\u0074  \u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049 )
            {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0031\u0035 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0036  = \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0031\u0038 (\u0074\u0068\u0069\u0073 , \u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C , \u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049 , \u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049 );
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0036 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0031\u0036 ();
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0031\u0039 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0036 );
            }
        }

        \u0073\u0074\u0061\u0074\u0069\u0063  \u0053\u0079\u0073\u0074\u0065\u006D .\u0043\u006F\u006C\u006C\u0065\u0063\u0074\u0069\u006F\u006E\u0073 .\u0047\u0065\u006E\u0065\u0072\u0069\u0063 .\u004C\u0069\u0073\u0074 <\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0034\u0030 > \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0037\u0039  = \u006E\u0065\u0077  \u0053\u0079\u0073\u0074\u0065\u006D .\u0043\u006F\u006C\u006C\u0065\u0063\u0074\u0069\u006F\u006E\u0073 .\u0047\u0065\u006E\u0065\u0072\u0069\u0063 .\u004C\u0069\u0073\u0074 <\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0034\u0030 >();

        \u0073\u0074\u0061\u0074\u0069\u0063  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0032\u0030 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0032\u0033 (\u0047\u006F\u006C\u0064\u0065\u006E\u0073\u006B\u0075\u006C\u006C \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0036\u0037 , \u0042\u0061\u0073\u0065\u0050\u006C\u0061\u0079\u0065\u0072 \u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C , \u0073\u0074\u0072\u0069\u006E\u0067  \u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049 , \u0073\u0074\u0072\u0069\u006E\u0067 [] \u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C )
        {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0032\u0030 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0036\u0039 ;
            \u0069\u0066  (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0036\u0037 .\u0043\u006F\u0075\u006E\u0074 > 0)
            {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0036\u0039 = \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0036\u0037 [0];
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0036\u0037 .\u0052\u0065\u006D\u006F\u0076\u0065\u0041\u0074 (0);
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0036\u0039 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0032\u0032 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0036\u0037 , \u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C , \u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049 , \u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C );
                \u0072\u0065\u0074\u0075\u0072\u006E  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0036\u0039 ;
            }
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0036\u0039 = \u006E\u0065\u0077  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0032\u0030 ();
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0036\u0039 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0032\u0032 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0036\u0037 , \u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C , \u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049 , \u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C );
            \u0072\u0065\u0074\u0075\u0072\u006E  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0036\u0039 ;
        }

        [\u004F\u0078\u0069\u0064\u0065 .\u0043\u006F\u0072\u0065 .\u0050\u006C\u0075\u0067\u0069\u006E\u0073 .\u0048\u006F\u006F\u006B\u004D\u0065\u0074\u0068\u006F\u0064 ("OnItemSplit")]
        \u006F\u0062\u006A\u0065\u0063\u0074  \u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C (\u0049\u0074\u0065\u006D \u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C , \u0069\u006E\u0074  \u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C )
        {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0039\u0030 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0033\u0031  = \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0039\u0033 (\u0074\u0068\u0069\u0073 , \u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C , \u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C );
            \u0074\u0072\u0079 
            {
                \u0072\u0065\u0074\u0075\u0072\u006E  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0033\u0031 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0039\u0031 ();
            }
            \u0063\u0061\u0074\u0063\u0068  (\u0053\u0079\u0073\u0074\u0065\u006D .\u0045\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E \u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E )
            {
\u0067\u006C\u006F\u0062\u0061\u006C ::\u004F\u0078\u0069\u0064\u0065 .\u0043\u006F\u0072\u0065 .\u0049\u006E\u0074\u0065\u0072\u0066\u0061\u0063\u0065 .\u004F\u0078\u0069\u0064\u0065 .\u004C\u006F\u0067\u0045\u0072\u0072\u006F\u0072 (\u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E .\u004D\u0065\u0073\u0073\u0061\u0067\u0065 + "\n" + \u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E .\u0053\u0074\u0061\u0063\u006B\u0054\u0072\u0061\u0063\u0065 );
                \u0074\u0068\u0072\u006F\u0077 ;
            }
            \u0066\u0069\u006E\u0061\u006C\u006C\u0079 
            {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0039\u0034 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0033\u0031 );
            }
        }

        \u0073\u0074\u0061\u0074\u0069\u0063  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0033\u0030 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0033\u0033 (\u0047\u006F\u006C\u0064\u0065\u006E\u0073\u006B\u0075\u006C\u006C \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0036\u0039 , \u0042\u0061\u0073\u0065\u004E\u0065\u0074\u0077\u006F\u0072\u006B\u0061\u0062\u006C\u0065 \u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C )
        {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0033\u0030 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0037\u0035 ;
            \u0069\u0066  (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0037\u0033 .\u0043\u006F\u0075\u006E\u0074 > 0)
            {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0037\u0035 = \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0037\u0033 [0];
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0037\u0033 .\u0052\u0065\u006D\u006F\u0076\u0065\u0041\u0074 (0);
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0037\u0035 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0033\u0032 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0036\u0039 , \u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C );
                \u0072\u0065\u0074\u0075\u0072\u006E  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0037\u0035 ;
            }
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0037\u0035 = \u006E\u0065\u0077  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0033\u0030 ();
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0037\u0035 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0033\u0032 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0036\u0039 , \u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C );
            \u0072\u0065\u0074\u0075\u0072\u006E  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0037\u0035 ;
        }

        \u0073\u0074\u0061\u0074\u0069\u0063  \u0053\u0079\u0073\u0074\u0065\u006D .\u0043\u006F\u006C\u006C\u0065\u0063\u0074\u0069\u006F\u006E\u0073 .\u0047\u0065\u006E\u0065\u0072\u0069\u0063 .\u004C\u0069\u0073\u0074 <\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0037\u0035 > \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0039\u0030\u0030  = \u006E\u0065\u0077  \u0053\u0079\u0073\u0074\u0065\u006D .\u0043\u006F\u006C\u006C\u0065\u0063\u0074\u0069\u006F\u006E\u0073 .\u0047\u0065\u006E\u0065\u0072\u0069\u0063 .\u004C\u0069\u0073\u0074 <\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0037\u0035 >();
        \u0073\u0074\u0061\u0074\u0069\u0063  \u0076\u006F\u0069\u0064  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0030\u0039 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0030\u0035 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0035\u0039 )
        {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0035\u0038 .\u0041\u0064\u0064 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0035\u0039 );
        }

        \u0063\u006C\u0061\u0073\u0073  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0035\u0035 
        {
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0047\u006F\u006C\u0064\u0065\u006E\u0073\u006B\u0075\u006C\u006C \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0037\u0034 ;
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0044\u0072\u006F\u0070\u0070\u0065\u0064\u0049\u0074\u0065\u006D \u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049 ;
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0044\u0072\u006F\u0070\u0070\u0065\u0064\u0049\u0074\u0065\u006D \u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C ;
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0076\u006F\u0069\u0064  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0035\u0037 (\u0047\u006F\u006C\u0064\u0065\u006E\u0073\u006B\u0075\u006C\u006C \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0037\u0034 , \u0044\u0072\u006F\u0070\u0070\u0065\u0064\u0049\u0074\u0065\u006D \u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049 , \u0044\u0072\u006F\u0070\u0070\u0065\u0064\u0049\u0074\u0065\u006D \u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C )
            {
                \u0074\u0068\u0069\u0073 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0037\u0034 = (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0037\u0034 );
                \u0074\u0068\u0069\u0073 .\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049 = (\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049 );
                \u0074\u0068\u0069\u0073 .\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C = (\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C );
            }

            \u0070\u0075\u0062\u006C\u0069\u0063  \u006F\u0062\u006A\u0065\u0063\u0074  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0031 ()
            {
                \u0072\u0065\u0074\u0075\u0072\u006E  \u006E\u0065\u0077  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0030 ();
            }

            \u0070\u0075\u0062\u006C\u0069\u0063  \u006F\u0062\u006A\u0065\u0063\u0074  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0032 ;
            \u0070\u0075\u0062\u006C\u0069\u0063  \u006F\u0062\u006A\u0065\u0063\u0074  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0033 ()
            {
                \u0069\u0066  (\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049 .\u0047\u0065\u0074\u0049\u0074\u0065\u006D ().\u0073\u006B\u0069\u006E != \u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C .\u0047\u0065\u0074\u0049\u0074\u0065\u006D ().\u0073\u006B\u0069\u006E )
                    \u0069\u0066  (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0037\u0034 .\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C .\u0043\u006F\u006E\u0074\u0061\u0069\u006E\u0073\u0056\u0061\u006C\u0075\u0065 (\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049 .\u0047\u0065\u0074\u0049\u0074\u0065\u006D ().\u0073\u006B\u0069\u006E ) || \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0037\u0034 .\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C .\u0043\u006F\u006E\u0074\u0061\u0069\u006E\u0073\u0056\u0061\u006C\u0075\u0065 (\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C .\u0047\u0065\u0074\u0049\u0074\u0065\u006D ().\u0073\u006B\u0069\u006E ))
                        \u0072\u0065\u0074\u0075\u0072\u006E  \u0066\u0061\u006C\u0073\u0065 ;
                \u0072\u0065\u0074\u0075\u0072\u006E  \u006E\u0075\u006C\u006C ;
            }

            \u0070\u0075\u0062\u006C\u0069\u0063  \u006F\u0062\u006A\u0065\u0063\u0074  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0035\u0036 ()
            {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0034 = ~9059551;
                \u0053\u0054\u0041\u0052\u0054 :
                \u0073\u0077\u0069\u0074\u0063\u0068  (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0034 )
                {
                    \u0063\u0061\u0073\u0065  -18119104 >> 1:
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0032 = \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0033 ();
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0034 = 4151264;
                        \u0067\u006F\u0074\u006F  \u0053\u0054\u0041\u0052\u0054 ;
                    \u0063\u0061\u0073\u0065  518908 << 3:
                        \u0069\u0066  (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0032 \u0069\u0073  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0030 )
                            \u0072\u0065\u0074\u0075\u0072\u006E  \u0064\u0065\u0066\u0061\u0075\u006C\u0074 (\u006F\u0062\u006A\u0065\u0063\u0074 );
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0034 = -3635744;
                        \u0067\u006F\u0074\u006F  \u0053\u0054\u0041\u0052\u0054 ;
                    \u0063\u0061\u0073\u0065  -741171200 >> 4:
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0032 = \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0031 ();
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0034 = 23103808;
                        \u0067\u006F\u0074\u006F  \u0053\u0054\u0041\u0052\u0054 ;
                    \u0063\u0061\u0073\u0065  2887976 << 3:
                        \u0069\u0066  (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0032 \u0069\u0073  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0030 )
                            \u0072\u0065\u0074\u0075\u0072\u006E  \u0064\u0065\u0066\u0061\u0075\u006C\u0074 (\u006F\u0062\u006A\u0065\u0063\u0074 );
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0034 = 44390304;
                        \u0067\u006F\u0074\u006F  \u0053\u0054\u0041\u0052\u0054 ;
                    \u0063\u0061\u0073\u0065  5548788 << 3:
                        \u0072\u0065\u0074\u0075\u0072\u006E  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0032 ;
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0034 = 2471872;
                        \u0067\u006F\u0074\u006F  \u0053\u0054\u0041\u0052\u0054 ;
                    \u0063\u0061\u0073\u0065  -1817872 << 1:
                        \u0069\u0066  (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0032 != \u006E\u0075\u006C\u006C )
                            \u0072\u0065\u0074\u0075\u0072\u006E  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0032 ;
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0034 = -46323200;
                        \u0067\u006F\u0074\u006F  \u0053\u0054\u0041\u0052\u0054 ;
                    \u0063\u0061\u0073\u0065  19774976 >> 3:
                        \u0062\u0072\u0065\u0061\u006B ;
                }

                \u0074\u0068\u0072\u006F\u0077  \u006E\u0065\u0077  \u0053\u0079\u0073\u0074\u0065\u006D .\u0045\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E ();
            }

            \u0070\u0075\u0062\u006C\u0069\u0063  \u0069\u006E\u0074  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0034 ;
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0069\u006E\u0074  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0035 ;
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0069\u006E\u0074  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0036 ;
            \u0070\u0075\u0062\u006C\u0069\u0063  \u0069\u006E\u0074  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0037\u0035\u0037 ;
        }
        \u0073\u0074\u0061\u0074\u0069\u0063  \u0076\u006F\u0069\u0064  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0036\u0039 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0036\u0035 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0039\u0035 )
        {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0039\u0034 .\u0041\u0064\u0064 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0039\u0035 );
        }

        [\u004F\u0078\u0069\u0064\u0065 .\u0043\u006F\u0072\u0065 .\u0050\u006C\u0075\u0067\u0069\u006E\u0073 .\u0048\u006F\u006F\u006B\u004D\u0065\u0074\u0068\u006F\u0064 ("OnEntityDeath")]
        \u0076\u006F\u0069\u0064  \u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C (\u0042\u0061\u0073\u0065\u0043\u006F\u006D\u0062\u0061\u0074\u0045\u006E\u0074\u0069\u0074\u0079 \u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049 , \u0048\u0069\u0074\u0049\u006E\u0066\u006F \u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C )
        {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0037\u0035 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0032\u0038  = \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0037\u0038 (\u0074\u0068\u0069\u0073 , \u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049 , \u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C );
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0032\u0038 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0037\u0036 ();
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0037\u0039 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0032\u0038 );
        }

        \u0070\u0072\u006F\u0074\u0065\u0063\u0074\u0065\u0064  \u006F\u0076\u0065\u0072\u0072\u0069\u0064\u0065  \u0076\u006F\u0069\u0064  \u0053\u0061\u0076\u0065\u0043\u006F\u006E\u0066\u0069\u0067 ()
        {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0039\u0035 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0032  = \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0039\u0038 (\u0074\u0068\u0069\u0073 );
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0032 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0039\u0036 ();
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0034\u0039\u0039 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0031\u0032 );
        }

        \u006F\u0062\u006A\u0065\u0063\u0074  \u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049 (\u0044\u0072\u006F\u0070\u0070\u0065\u0064\u0049\u0074\u0065\u006D \u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049 , \u0044\u0072\u006F\u0070\u0070\u0065\u0064\u0049\u0074\u0065\u006D \u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C )
        {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0035\u0035 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0032\u0034  = \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0035\u0038 (\u0074\u0068\u0069\u0073 , \u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049 , \u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u0049\u006C\u006C\u0049\u006C\u006C\u0049\u006C\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u0049\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u006C\u0049\u006C\u006C\u006C\u006C\u006C\u006C\u006C\u0049\u0049\u0049\u006C\u0049\u006C\u006C\u0049\u0049\u0049\u0049\u006C\u0049\u0049\u0049\u006C\u006C );
            \u0074\u0072\u0079 
            {
                \u0072\u0065\u0074\u0075\u0072\u006E  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0032\u0034 .\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0035\u0036 ();
            }
            \u0063\u0061\u0074\u0063\u0068  (\u0053\u0079\u0073\u0074\u0065\u006D .\u0045\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E \u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E )
            {
\u0067\u006C\u006F\u0062\u0061\u006C ::\u004F\u0078\u0069\u0064\u0065 .\u0043\u006F\u0072\u0065 .\u0049\u006E\u0074\u0065\u0072\u0066\u0061\u0063\u0065 .\u004F\u0078\u0069\u0064\u0065 .\u004C\u006F\u0067\u0045\u0072\u0072\u006F\u0072 (\u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E .\u004D\u0065\u0073\u0073\u0061\u0067\u0065 + "\n" + \u005F\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006F\u006E .\u0053\u0074\u0061\u0063\u006B\u0054\u0072\u0061\u0063\u0065 );
                \u0074\u0068\u0072\u006F\u0077 ;
            }
            \u0066\u0069\u006E\u0061\u006C\u006C\u0079 
            {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0035\u0039 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0036\u0032\u0034 );
            }
        }

        \u0073\u0074\u0061\u0074\u0069\u0063  \u0053\u0079\u0073\u0074\u0065\u006D .\u0043\u006F\u006C\u006C\u0065\u0063\u0074\u0069\u006F\u006E\u0073 .\u0047\u0065\u006E\u0065\u0072\u0069\u0063 .\u004C\u0069\u0073\u0074 <\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0032\u0030 > \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0036\u0037  = \u006E\u0065\u0077  \u0053\u0079\u0073\u0074\u0065\u006D .\u0043\u006F\u006C\u006C\u0065\u0063\u0074\u0069\u006F\u006E\u0073 .\u0047\u0065\u006E\u0065\u0072\u0069\u0063 .\u004C\u0069\u0073\u0074 <\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0032\u0030 >();

        \u0073\u0074\u0061\u0074\u0069\u0063  \u0053\u0079\u0073\u0074\u0065\u006D .\u0043\u006F\u006C\u006C\u0065\u0063\u0074\u0069\u006F\u006E\u0073 .\u0047\u0065\u006E\u0065\u0072\u0069\u0063 .\u004C\u0069\u0073\u0074 <\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0033\u0035 > \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0037\u0036  = \u006E\u0065\u0077  \u0053\u0079\u0073\u0074\u0065\u006D .\u0043\u006F\u006C\u006C\u0065\u0063\u0074\u0069\u006F\u006E\u0073 .\u0047\u0065\u006E\u0065\u0072\u0069\u0063 .\u004C\u0069\u0073\u0074 <\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0033\u0035 >();

        \u0073\u0074\u0061\u0074\u0069\u0063  \u0053\u0079\u0073\u0074\u0065\u006D .\u0043\u006F\u006C\u006C\u0065\u0063\u0074\u0069\u006F\u006E\u0073 .\u0047\u0065\u006E\u0065\u0072\u0069\u0063 .\u004C\u0069\u0073\u0074 <\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0032\u0035 > \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0037\u0030  = \u006E\u0065\u0077  \u0053\u0079\u0073\u0074\u0065\u006D .\u0043\u006F\u006C\u006C\u0065\u0063\u0074\u0069\u006F\u006E\u0073 .\u0047\u0065\u006E\u0065\u0072\u0069\u0063 .\u004C\u0069\u0073\u0074 <\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0032\u0035 >();
        \u0073\u0074\u0061\u0074\u0069\u0063  \u0076\u006F\u0069\u0064  \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0032\u0039 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0035\u0032\u0035 \u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0037\u0031 )
        {
\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0037\u0030 .\u0041\u0064\u0064 (\u0067\u0065\u006E\u0065\u0072\u0061\u0074\u0065\u0064\u005F\u0035\u0033\u0038\u0037\u0031 );
        }
    }
}

// --- End of file: Goldenskull.cs ---
// --- Next file ---

// --- GitHub Source URL: https://github.com/RustyyTown/plugins/blob/main/DeathMessages.cs ---
// --- Original Local Path: DeathMessages.cs ---

using Oxide.Game.Rust.Cui;
using System;
using System.Collections.Generic;
using System.Linq;
using Newtonsoft.Json;


namespace Oxide.Plugins
{
    [Info("Death Messages", "Skrip|Tal", "2.1.55")]
    class DeathMessages : RustPlugin
    {
        private static PluginConfig _config;
        private string version = "2.1.55";
        private List<DeathMessage> _notes = new List<DeathMessage>();
        private Dictionary<ulong, HitInfo> _lastHits = new Dictionary<ulong, HitInfo>();

        #region Classes / Enums

        class PluginConfig
        {

            [JsonProperty("A. Время показа сообщения (сек)")]
            public int Cooldown { get; set; }
            [JsonProperty("B. Размер текста")]
            public int FontSize { get; set; }
            [JsonProperty("C. Показывать убиства животных")]
            public bool ShowDeathAnimals { get; set; }
            [JsonProperty("D. Показывать убийства спящих")]
            public bool ShowDeathSleepers { get; set; }
            [JsonProperty("E. Хранение логов")]
            public bool Log { get; set; }
            [JsonProperty("F. Цвет атакующего")]
            public string ColorAttacker { get; set; }
            [JsonProperty("G. Цвет убитого")]
            public string ColorVictim { get; set; }
            [JsonProperty("H. Цвет оружия")]
            public string ColorWeapon { get; set; }
            [JsonProperty("I. Цвет дистанции")]
            public string ColorDistance { get; set; }
            [JsonProperty("J. Цвет части тела")]
            public string ColorBodyPart { get; set; }
            [JsonProperty("K. Дистанция")]
            public double Distance { get; set; }
            [JsonProperty("L. Название вертолета")]
            public string HelicopterName { get; set; }
            [JsonProperty("M. Название Bradlay (Танк)")]
            public string BradleyAPCName { get; set; }
            [JsonProperty("N. Имя NPC")]
            public string NPCName { get; set; }
            [JsonProperty("O. Имя Zombie")]
            public string ZombieName { get; set; }

            [JsonProperty("Оружие")]
            public Dictionary<string, string> Weapons { get; set; }
            [JsonProperty("Конструкции")]
            public Dictionary<string, string> Structures { get; set; }
            [JsonProperty("Ловушки")]
            public Dictionary<string, string> Traps { get; set; }
            [JsonProperty("Турели")]
            public Dictionary<string, string> Turrets { get; set; }
            [JsonProperty("Животные")]
            public Dictionary<string, string> Animals { get; set; }
            [JsonProperty("Сообщения")]
            public Dictionary<string, string> Messages { get; set; }
            [JsonProperty("Части тела")]
            public Dictionary<string, string> BodyParts { get; set; }
        }

        enum AttackerType
        {
            Player,
            Helicopter,
            Animal,
            Turret,
            Guntrap,
            Structure,
            Trap,
            Invalid,
            NPC,
            BradleyAPC,
            Zombie,
            ZombieDeath
        }

        enum VictimType
        {
            Player,
            Helicopter,
            Animal,
            Invalid,
            NPC,
            BradleyAPC,
            Zombie,
            ZombieDeath
        }

        enum DeathReason
        {
            Turret,
            Guntrap,
            Helicopter,
            HelicopterDeath,
            BradleyAPC,
            BradleyAPCDeath,
            Structure,
            Trap,
            Animal,
            AnimalDeath,
            Generic,
            Zombie,
            ZombieDeath,
            Hunger,
            Thirst,
            Cold,
            Drowned,
            Heat,
            Bleeding,
            Poison,
            Suicide,
            Bullet,
            Arrow,
            Flamethrower,
            Slash,
            Blunt,
            Fall,
            Radiation,
            Stab,
            Explosion,
            Unknown
        }

        class Attacker
        {
            public Attacker(BaseEntity entity)
            {
                Entity = entity;
                Type = InitializeType();
                Name = InitializeName();
            }

            public BaseEntity Entity { get; }

            public string Name { get; }

            public AttackerType Type { get; }

            private AttackerType InitializeType()
            {
                if (Entity == null)
                    return AttackerType.Invalid;

                if (Entity.name.Contains("machete.weapon"))
                    return AttackerType.Zombie;

                if (Entity is NPCMurderer)
                    return AttackerType.ZombieDeath;

                if (Entity is NPCPlayer)
                    return AttackerType.NPC;            

                if (Entity is BasePlayer)
                    return AttackerType.Player;

                if (Entity is BaseHelicopter)   
                    return AttackerType.Helicopter;				

                if (Entity is BradleyAPC)                
                    return AttackerType.BradleyAPC;

                if (Entity.name.Contains("agents/"))
                    return AttackerType.Animal;

                if (Entity.name.Contains("barricades/") || Entity.name.Contains("wall.external.high"))
                    return AttackerType.Structure;

                if (Entity.name.Contains("beartrap.prefab") || Entity.name.Contains("landmine.prefab") || Entity.name.Contains("spikes.floor.prefab"))
                    return AttackerType.Trap;

                if (Entity.name.Contains("autoturret_deployed.prefab") || Entity.name.Contains("flameturret.deployed.prefab"))
                    return AttackerType.Turret;
                if (Entity.name.Contains("guntrap_deployed.prefab") || Entity.name.Contains("guntrap.deployed.prefab"))
                    return AttackerType.Guntrap;

                return AttackerType.Invalid;
            }

            private string InitializeName()
            {

                if (Entity == null)
                    return null;

                switch (Type)
                {


                    case AttackerType.Player:
                        return Entity.ToPlayer().displayName;

                    case AttackerType.NPC:
                        return string.IsNullOrEmpty(Entity.ToPlayer()?.displayName) ? _config.NPCName : Entity.ToPlayer()?.displayName;

                    case AttackerType.Helicopter:
                        return "Patrol Helicopter";
						
                    case AttackerType.BradleyAPC:  
                    case AttackerType.Turret: 
                    case AttackerType.Guntrap:
                    case AttackerType.Trap:
                    case AttackerType.Animal:
                    case AttackerType.Structure:
                        return FormatName(Entity.name);
                }

                return string.Empty;
            }
        }

        class Victim
        {
            public Victim(BaseCombatEntity entity)
            {
                Entity = entity;
                Type = InitializeType();
                Name = InitializeName();
            }

            public BaseCombatEntity Entity { get; }

            public string Name { get; }

            public VictimType Type { get; }

            private VictimType InitializeType()
            {
                if (Entity is NPCMurderer)
                    return VictimType.Zombie;

                if (Entity.name.Contains("machete.weapon"))
                    return VictimType.Zombie;

                if (Entity == null)
                    return VictimType.Invalid;


                if (Entity is NPCPlayer)
                    return VictimType.NPC;

                if (Entity is BasePlayer)
                    return VictimType.Player;

                if (Entity is BaseHelicopter)
                    return VictimType.Helicopter;				

                if (Entity is BradleyAPC)
                    return VictimType.BradleyAPC;

                if (Entity.name.Contains("agents/"))
                    return VictimType.Animal;

                return VictimType.Invalid;
            }

            private string InitializeName()
            {
                switch (Type)
                {
                    case VictimType.Zombie:
                        return "ZombieName";

                    case VictimType.Player:
                        return Entity.ToPlayer().displayName;


                    case VictimType.NPC:
                        return string.IsNullOrEmpty(Entity.ToPlayer()?.displayName) ? _config.NPCName : Entity.ToPlayer()?.displayName;

                    case VictimType.Helicopter:
                        return "Patrol Helicopter";						

                    case VictimType.BradleyAPC:
                        return "BradleyAPCName";   

                    case VictimType.Animal:
                        return FormatName(Entity.name);
                }

                return string.Empty;
            }
        }

        class DeathMessage
        {
            public DeathMessage(Attacker attacker, Victim victim, string weapon, string damageType, string bodyPart, double distance)
            {
                Attacker = attacker;
                Victim = victim;
                Weapon = weapon;
                DamageType = damageType;
                BodyPart = bodyPart;
                Distance = distance;

                Reason = InitializeReason();
                Message = InitializeDeathMessage();

                if (_config.Distance <= 0)
                {
                    Players = BasePlayer.activePlayerList;
                }
                else
                {
                    var position = attacker?.Entity?.transform?.position;
                    if (position == null)
                        position = victim?.Entity?.transform?.position;

                    if (position != null)
                        Players = BasePlayer.activePlayerList.Where(x => x.Distance((UnityEngine.Vector3)position) <= _config.Distance).ToList();
                    else
                        Players = new List<BasePlayer>();
                }

                if (victim.Type == VictimType.Player && !Players.Contains(victim.Entity.ToPlayer()))
                    Players.Add(victim.Entity.ToPlayer());

                if (attacker.Type == AttackerType.Player && !Players.Contains(attacker.Entity.ToPlayer()))
                    Players.Add(attacker.Entity.ToPlayer());
            }

            public List<BasePlayer> Players { get; }

            public Attacker Attacker { get; }

            public Victim Victim { get; }

            public string Weapon { get; }

            public string BodyPart { get; }

            public string DamageType { get; }

            public double Distance { get; }

            public DeathReason Reason { get; }

            public string Message { get; }

            private DeathReason InitializeReason()
            {

                if (Attacker.Type == AttackerType.Turret)
                    return DeathReason.Turret;

                if (Attacker.Type == AttackerType.Guntrap)
                    return DeathReason.Guntrap;

                if (Attacker.Type == AttackerType.Zombie)
                    return DeathReason.Zombie;

                else if (Attacker.Type == AttackerType.Helicopter)
                    return DeathReason.Helicopter;

                else if (Attacker.Type == AttackerType.BradleyAPC)  
                    return DeathReason.BradleyAPC;

                else if (Victim.Type == VictimType.Helicopter)
                    return DeathReason.HelicopterDeath;

                else if (Victim.Type == VictimType.BradleyAPC)
                    return DeathReason.BradleyAPCDeath;

                else if (Attacker.Type == AttackerType.Structure)
                    return DeathReason.Structure;

                else if (Attacker.Type == AttackerType.Trap)
                    return DeathReason.Trap;

                else if (Attacker.Type == AttackerType.Animal)
                    return DeathReason.Animal;

                else if (Victim.Type == VictimType.Animal)
                    return DeathReason.AnimalDeath;

                else if (Weapon == "F1 Grenade" || Weapon == "Survey Charge" || Weapon == "Timed Explosive Charge" || Weapon == "Satchel Charge" || Weapon == "Beancan Grenade")
                    return DeathReason.Explosion;


                else if (Weapon == "Flamethrower")
                    return DeathReason.Flamethrower;

                else if (Victim.Type == VictimType.Player || Victim.Type == VictimType.NPC)
                    return GetDeathReason(DamageType);

                if (Victim.Type == VictimType.Zombie)
                    return DeathReason.ZombieDeath;

                return DeathReason.Unknown;


            }

            private DeathReason GetDeathReason(string damage)
            {
                var reasons = (Enum.GetValues(typeof(DeathReason)) as DeathReason[]).Where(x => x.ToString().Contains(damage));

                if (reasons.Count() == 0)
                    return DeathReason.Unknown;

                return reasons.First();
            }

            private string InitializeDeathMessage()
            {
                string message = string.Empty;
                string reason = string.Empty;

                if (Victim.Type == VictimType.Player && Victim.Entity.ToPlayer().IsSleeping() && _config.Messages.ContainsKey(Reason + " Sleeping"))
                    reason = Reason + " Sleeping";
                else
                    reason = Reason.ToString();

                message = GetMessage(reason, _config.Messages);

                var attackerName = Attacker.Name;
                if (string.IsNullOrEmpty(attackerName) && Attacker.Entity == null && Weapon.Contains("Heli"))
                    attackerName = _config.HelicopterName;				

                if (string.IsNullOrEmpty(attackerName) && Attacker.Entity == null && Weapon.Contains("Bradl"))
                    attackerName = _config.BradleyAPCName;   

                switch (Attacker.Type)
                {
                    case AttackerType.ZombieDeath:
                        attackerName = _config.ZombieName;
                        break;

                    case AttackerType.Zombie:
                        attackerName = _config.ZombieName;
                        break;

                    case AttackerType.Helicopter:
                        attackerName = _config.HelicopterName;
                        break;

                    case AttackerType.BradleyAPC:
                        attackerName = _config.BradleyAPCName; 
                        break;

                    case AttackerType.NPC:
                        attackerName = _config.NPCName;
                        break;

                    case AttackerType.Turret:
                        attackerName = GetMessage(attackerName, _config.Turrets);
                        break;
                    case AttackerType.Guntrap:
                        attackerName = GetMessage(attackerName, _config.Turrets);
                        break;

                    case AttackerType.Trap:
                        attackerName = GetMessage(attackerName, _config.Traps);
                        break;

                    case AttackerType.Animal:
                        attackerName = GetMessage(attackerName, _config.Animals);
                        break;

                    case AttackerType.Structure:
                        attackerName = GetMessage(attackerName, _config.Structures);
                        break;
                }

                var victimName = Victim.Name;

                switch (Victim.Type)
                {
                    case VictimType.Helicopter:
                        victimName = _config.HelicopterName;
                        break;						

                    case VictimType.BradleyAPC:
                        victimName = _config.BradleyAPCName;  
                        break;

                    case VictimType.NPC:
                        victimName = _config.NPCName;



                        break;

                    case VictimType.Zombie:
                        victimName = _config.ZombieName;
                        break;

                    case VictimType.Animal:
                        victimName = GetMessage(victimName, _config.Animals);
                        break;
                }

                message = message.Replace("{attacker}", $"<color={_config.ColorAttacker}>{attackerName}</color>");
                message = message.Replace("{victim}", $"<color={_config.ColorVictim}>{victimName}</color>");
                message = message.Replace("{distance}", $"<color={_config.ColorDistance}>{Math.Round(Distance, 0)}</color>");
                message = message.Replace("{weapon}", $"<color={_config.ColorWeapon}>{GetMessage(Weapon, _config.Weapons)}</color>");
                message = message.Replace("{bodypart}", $"<color={_config.ColorBodyPart}>{GetMessage(BodyPart, _config.BodyParts)}</color>");

                return message;
            }
        }

        #endregion

        #region Oxide Hooks

        protected override void LoadDefaultConfig()
        {
            Config.Clear();
            Config.WriteObject(new PluginConfig
            {
                Cooldown = 7,
                FontSize = 15,
                Distance = -1,
                Log = true,
                ShowDeathAnimals = true,
                ShowDeathSleepers = true,

                ColorAttacker = "#f0f223",
                ColorVictim = "#f0f223",
                ColorDistance = "#006ca9",
                ColorWeapon = "#006ca9",
                ColorBodyPart = "#006ca9",

                HelicopterName = "Вертолет",
                BradleyAPCName = "Танк",  
                NPCName = "НПЦ",
                ZombieName = "Зомби",

                Weapons = new Dictionary<string, string>
                {
                    { "Assault Rifle", "AKA-47" },
                    { "Beancan Grenade", "Бобовая граната" },
                    { "Nailgun", "Гвоздострел" },
                    { "Bolt Action Rifle", "Снайперская винтовка" },
                    { "Bone Club", "Костяная дубина" },
                    { "Bone Knife", "Костяной нож" },
                    { "Crossbow", "Арбалет" },
					{ "Chainsaw", "Бензопила" },
					{ "Compound Bow", "Блочный лук" },
					{ "Flamethrower", "Огнемёт" },
   					{ "Explosivesatchel", "Сумка с зарядом" },
                    { "Custom SMG", "SMG" },
                    { "Double Barrel Shotgun", "Двухстволка" },
                    { "Eoka Pistol", "Самодельный пистолет" },
                    { "F1 Grenade", "F1-граната" },
                    { "Hunting Bow", "Охотничий лук" },
                    { "Longsword", "Длинный меч" },
                    { "LR-300 Assault Rifle", "LR-300" },
                    { "M249", "Пулемёт М249" },
                    { "M92 Pistol", "Беретта M92" },
                    { "Mace", "Булава" },
                    { "Machete", "Мачете" },
                    { "MP5A4", "MP5A4" },
					{ "Jackhammer", "Отбойник" },
                    { "Pump Shotgun", "Помповый дробовик" },
                    { "Python Revolver", "Питон револьвер" },
                    { "Revolver", "Револьвер" },
                    { "Salvaged Cleaver", "Самодельный тесак" },
                    { "Salvaged Sword", "Самодельный меч" },
                    { "Semi-Automatic Pistol", "Полуавтоматический пистолет" },
                    { "Semi-Automatic Rifle", "Полуавтоматическая винтовка" },
                    { "Stone Spear", "Каменное копьё" },
					{ "Spas-12 Shotgun", "Дробовик Spas-12" },
                    { "Thompson", "Томпсон" },
                    { "Waterpipe Shotgun", "Самодельный дробовик" },
                    { "Wooden Spear", "Деревянное копьё" },
                    { "Hatchet", "Топор" },
                    { "Pick Axe", "Кирка" },
                    { "Salvaged Axe", "Самодельный топор" },
                    { "Salvaged Hammer", "Самодельный молот" },
                    { "Salvaged Icepick", "Самодельный ледоруб" },
                    { "Satchel Charge", "Сумка с зарядом" },
                    { "Stone Hatchet", "Каменный топор" },
                    { "Stone Pick Axe", "Каменная кирка" },
                    { "Survey Charge", "Геологический заряд" },
                    { "Timed Explosive Charge", "С4" },
                    { "Torch", "Факел" },
                    { "RocketSpeed", "Скоростная ракета" },
                    { "Incendiary Rocket", "Зажигательная ракета" },
                    { "Rocket", "Обычная ракета" },
                    { "RocketHeli", "Напалм вертолёта" },
                    { "RocketBradley", "Напалм танка" }

                },

                Structures = new Dictionary<string, string>
                {
                    { "Wooden Barricade", "Деревянная баррикада" },
                    { "Barbed Wooden Barricade", "Колючая деревянная баррикада" },
                    { "Metal Barricade", "Металлическая баррикада" },
                    { "High External Wooden Wall", "Высокая внешняя деревянная стена" },
                    { "High External Stone Wall", "Высокая внешняя каменная стена" },
                    { "High External Wooden Gate", "Высокие внешние деревянные ворота" },
                    { "High External Stone Gate", "Высокие внешние каменные ворота" }
                },

                Traps = new Dictionary<string, string>
                {
                    { "Snap Trap", "Капкан" },
                    { "Land Mine", "Мина" },
                    { "Wooden Floor Spikes", "Деревянные колья" }
                },

                Turrets = new Dictionary<string, string>
                {
                    { "Flame Turret", "Огнеметная турель" },
                    { "Auto Turret", "Автотурель" },
                    { "Guntrap", "Автодробовик" }
                },

                Animals = new Dictionary<string, string>
                {
                    { "Boar", "Кабан" },
                    { "Horse", "Лошадь" },
                    { "Wolf", "Волк" },
                    { "Stag", "Олень" },
                    { "Chicken", "Курица" },
                    { "Bear", "Медведь" }
                },

                BodyParts = new Dictionary<string, string>
                {
                    { "body", "Тело" },
                    { "pelvis", "Таз" },
                    { "hip", "Бедро" },
                    { "left knee", "Левое колено" },
                    { "right knee", "Правое колено" },
                    { "left foot", "Левая стопа" },
                    { "right foot", "Правая стопа" },
                    { "left toe", "Левый палец" },
                    { "right toe", "Правый палец" },
                    { "groin", "Пах" },
                    { "lower spine", "Нижний позвоночник" },
                    { "stomach", "Желудок" },
                    { "chest", "Грудь" },
                    { "neck", "Шея" },
                    { "left shoulder", "Левое плечо" },
                    { "right shoulder", "Правое плечо" },
                    { "left arm", "Левая рука" },
                    { "right arm", "Правая рука" },
                    { "left forearm", "Левое предплечье" },
                    { "right forearm", "Правое предплечье" },
                    { "left hand", "Левая ладонь" },
                    { "right hand", "Правая ладонь" },
                    { "left ring finger", "Левый безымянный палец" },
                    { "right ring finger", "Правый безымянный палец" },
                    { "left thumb", "Левый большой палец" },
                    { "right thumb", "Правый большой палец" },
                    { "left wrist", "Левое запястье" },
                    { "right wrist", "Правое запястье" },
                    { "head", "Голова" },
                    { "jaw", "Челюсть" },
                    { "left eye", "Левый глаз" },
                    { "right eye", "Правый глаз" }
                },

                Messages = new Dictionary<string, string>
                {
                    { "Arrow", "{attacker} убил {victim} ({weapon}, {distance} м.)" },
                    { "Blunt",  "{attacker} убил {victim} ({weapon})" },
                    { "Bullet", "{attacker} убил {victim} ({weapon}, {distance} м.)" },
                    { "Flamethrower", "{attacker} сжег заживо игрока {victim} ({weapon})" },
                    { "Drowned", "{victim} утонул." },
                    { "Explosion", "{attacker} взорвал игрока {victim} ({weapon})" },
                    { "Fall", "{victim} разбился." },
                    { "Generic", "Смерть забрала {victim} с собой." },
                    { "Heat", "{victim} сгорел заживо." },
                    { "Helicopter", "{attacker} прямым попаданием убил {victim}." },
                    { "BradleyAPC", "{attacker} прямым попаданием убил {victim}." },
                    { "BradleyAPCDeath", "{victim} был уничтожен игроком {attacker} ({weapon})" },
                    { "HelicopterDeath", "{victim} был сбит игроком {attacker} ({weapon})" },
                    { "Animal", "{attacker} добрался до {victim}" },
                    { "ZombieDeath", "{attacker} убил {victim} ({weapon}, {distance} м.)" },
                    { "Zombie", "{attacker} приследовал {victim}." },
                    { "AnimalDeath", "{attacker} убил {victim} ({weapon}, {distance} м.)" },
                    { "Hunger", "{victim} умер от голода." },
                    { "Poison", "{victim} умер от отравления." },
                    { "Radiation", "{victim} умер от радиационного отравления" },
                    { "Slash", "{attacker} убил {victim} ({weapon})" },
                    { "Stab", "{attacker} убил {victim} ({weapon})" },
                    { "Structure", "{victim} умер от сближения с {attacker}" },
                    { "Suicide", "{victim} совершил самоубийство." },
                    { "Thirst", "{victim} умер от обезвоживания" },
                    { "Trap", "{victim} попался на ловушку {attacker}" },
                    { "Cold", "{victim} умер от холода" },
                    { "Turret", "{victim} был убит автоматической турелью" },
                    { "Guntrap", "{victim} был убит ловушкой-дробовиком" },
                    { "Unknown", "У {victim} что-то пошло не так." },
                    { "Bleeding", "{victim} умер от кровотечения" },

                    //  Sleeping
                    { "Blunt Sleeping", "{attacker} убил {victim} ({weapon})" },
                    { "Bullet Sleeping", "{attacker} убил {victim} с ({weapon},  с {distance} метров)" },
                    { "Flamethrower Sleeping", "{attacker} сжег игрока {victim} ({weapon})" },
                    { "Explosion Sleeping", "{attacker} убил {victim} ({weapon})" },
                    { "Generic Sleeping", "Смерть забрала {victim} с собой пока он спал." },
                    { "Helicopter Sleeping", "{victim} был убит {attacker} пока он спал." },
                    { "BradleyAPC Sleeping", "{victim} был убит {attacker} пока он спал." },
                    { "Animal Sleeping", "{victim} убил {attacker} пока он спал." },
                    { "Slash Sleeping", "{attacker} убил {victim} ({weapon})" },
                    { "Stab Sleeping", "{attacker} убил {victim} ({weapon})" },
                    { "Unknown Sleeping", "У игрока {victim} что-то пошло не так." },
                    { "Turret Sleeping", "{attacker} был убит автоматической турелью." }
                }
            }, true);

            //PrintWarning("Благодарим за приобритение плагина на сайте RustPlugin.ru. Если вы приобрели этот плагин на другом ресурсе знайте - это лишает вас гарантированных обновлений!");
        }

        private void OnServerInitialized()
        {
            _config = Config.ReadObject<PluginConfig>();
        }

        private Dictionary<uint, BasePlayer> LastHeli = new Dictionary<uint, BasePlayer>();

        private void OnEntityTakeDamage(BaseCombatEntity entity, HitInfo info)
        {
            if (entity is BasePlayer)
                _lastHits[entity.ToPlayer().userID] = info;
            if (entity is BaseHelicopter && info.InitiatorPlayer != null)
                LastHeli[entity.net.ID] = info.InitiatorPlayer;
        }

        private void OnEntityDeath(BaseCombatEntity victim, HitInfo info)
        {
            var _weapon = FirstUpper(info?.Weapon?.GetItem()?.info?.displayName?.english) ?? FormatName(info?.WeaponPrefab?.name);
            var _damageType = FirstUpper(victim.lastDamage.ToString());
            if (info == null)
                if (!(victim is BasePlayer) || !victim.ToPlayer().IsWounded() || !_lastHits.TryGetValue(victim.ToPlayer().userID, out info))
            return;
            if (victim as BaseCorpse != null) return;
            var _victim = new Victim(victim);
            var _attacker = new Attacker(info.Initiator);
            if (_victim == null)
                return;
            if (_attacker == null)
                return;
            if (_victim.Type == VictimType.Invalid)
                return;
            if (_attacker.Type == AttackerType.Invalid)
                return;
            if (_victim.Type == VictimType.Helicopter)
            {
                if (LastHeli.ContainsKey(victim.net.ID))
                {
                    _attacker = new Attacker(LastHeli[victim.net.ID]);
                }
            }
            if ((_victim.Type == VictimType.Zombie && _attacker.Type == AttackerType.NPC))
                return;
            if (!_config.ShowDeathAnimals && _victim.Type == VictimType.Animal)
            {
                return;
            }
            if (!_config.ShowDeathAnimals && _attacker.Type == AttackerType.Animal)
            {
                return;
            }
            if (_victim.Type == VictimType.Player && _victim.Entity.ToPlayer().IsSleeping() && !_config.ShowDeathSleepers)
                return;
            var _bodyPart = victim?.skeletonProperties?.FindBone(info.HitBone)?.name?.english ?? "";
            var _distance = info.ProjectileDistance;
            if (_config.Log && _victim.Type == VictimType.Player && _attacker.Type == AttackerType.Player)
            {

                LogToFile("log", $"[{DateTime.Now.ToShortTimeString()}] {info.Initiator} убил {victim} ({_weapon} [{_bodyPart}] с дистанции {_distance})", this, true);
            }
            AddNote(new DeathMessage(_attacker, _victim, _weapon, _damageType, _bodyPart, _distance));
        }

        private void Unload()
        {
            foreach (var player in BasePlayer.activePlayerList)
                DestroyUI(player);
        }

        #endregion

        #region Core

        private void AddNote(DeathMessage note)
        {
            _notes.Insert(0, note);
            if (_notes.Count > 8)
                _notes.RemoveRange(7, _notes.Count - 8);

            RefreshUI(note);
            timer.Once(_config.Cooldown, () =>
            {
                _notes.Remove(note);
                RefreshUI(note);
            });
        }

        #endregion

        #region UI

        private void RefreshUI(DeathMessage note)
        {
            foreach (var player in note.Players)
            {
                DestroyUI(player);
                InitilizeUI(player);
            }
        }

        private void DestroyUI(BasePlayer player)
        {
            CuiHelper.DestroyUi(player, "ui.deathmessages");
        }

        private void InitilizeUI(BasePlayer player)
        {
            var notes = _notes.Where(x => x.Players.Contains(player)).Take(8);

            if (notes.Count() == 0)
                return;

            var container = new CuiElementContainer();

            container.Add(new CuiPanel
            {
                Image = { Color = "0 0 0 0" },
                RectTransform = { AnchorMin = "0.5 0.8", AnchorMax = "0.99 0.995" }
            }, name: "ui.deathmessages");

            double index = 1;
            foreach (var note in notes)
            {
                InitilizeLabel(container, note.Message, $"0 {index - 0.2}", $"0.99 {index}");
                index -= 0.14;
            }

            CuiHelper.AddUi(player, container);
        }

        private string InitilizeLabel(CuiElementContainer container, string text, string anchorMin, string anchorMax)
        {
            string Name = CuiHelper.GetGuid();
            container.Add(new CuiElement
            {
                Name = Name,
                Parent = "ui.deathmessages",
                Components =
                {
                    new CuiTextComponent { Align = UnityEngine.TextAnchor.MiddleRight, FontSize = _config.FontSize, Text = text },
                    new CuiRectTransformComponent { AnchorMin = anchorMin, AnchorMax = anchorMax },
                    new CuiOutlineComponent { Color = "0 0 0 1", Distance = "1.0 -0.5" }
                }
            });
            return Name;
        }

        #endregion

        #region Helpers

        private static string FirstUpper(string str)
        {
            if (string.IsNullOrEmpty(str))
                return str;

            return string.Join(" ", str.Split(' ').Select(x => x.Substring(0, 1).ToUpper() + x.Substring(1, x.Length - 1)).ToArray());
        }

        private static string FormatName(string prefab)
        {
            if (string.IsNullOrEmpty(prefab))
                return string.Empty;

            var formatedPrefab = FirstUpper(prefab.Split('/').Last().Replace(".prefab", "").Replace(".entity", "").Replace(".weapon", "").Replace(".deployed", "").Replace("_", "."));

            switch (formatedPrefab)
            {
                case "Autoturret.deployed": return "Auto Turret";
                case "Flameturret": return "Flame Turret";
                case "Guntrap.deployed": return "Guntrap";
                case "Beartrap": return "Snap Trap";
                case "Landmine": return "Land Mine";
                case "Spikes.floor": return "Wooden Floor Spikes";

                case "Barricade.wood": return "Wooden Barricade";
                case "Barricade.woodwire": return "Barbed Wooden Barricade";
                case "Barricade.metal": return "Metal Barricade";
                case "Wall.external.high.wood": return "High External Wooden Wall";
                case "Wall.external.high.stone": return "High External Stone Wall";
                case "Gates.external.high.stone": return "High External Wooden Gate";
                case "Gates.external.high.wood": return "High External Stone Gate";

                case "Stone.hatchet": return "Stone Hatchet";
				case "Stone.pickaxe": return "Stone Pickaxe";
                case "Survey.charge": return "Survey Charge";
                case "Explosive.satchel": return "Satchel Charge";
                case "Explosive.timed": return "Timed Explosive Charge";
                case "Grenade.beancan": return "Beancan Grenade";
                case "Grenade.f1": return "F1 Grenade";
                case "Hammer.salvaged": return "Salvaged Hammer";
                case "Axe.salvaged": return "Salvaged Axe";
                case "Icepick.salvaged": return "Salvaged Icepick";
                case "Spear.stone": return "Stone Spear";
                case "Spear.wooden": return "Wooden Spear";
                case "Knife.bone": return "Bone Knife";
                case "Rocket.basic": return "Rocket";    
                case "Flamethrower": return "Flamethrower";
                case "Rocket.hv": return "RocketSpeed";
                case "Rocket.heli": return "RocketHeli";
                case "Rocket.bradley": return "RocketBradley";


                default: return formatedPrefab;
            }
        }

        private static string GetMessage(string name, Dictionary<string, string> source)
        {
            if (source.ContainsKey(name))
                return source[name];

            return name;
        }

        #endregion
    }
}
                                                                                                     

// --- End of file: DeathMessages.cs ---
// --- Next file ---

// --- GitHub Source URL: https://github.com/RustyyTown/plugins/blob/main/AProtection.cs ---
// --- Original Local Path: AProtection.cs ---

using System;
using System.Collections.Generic;
using System.Globalization;
using Newtonsoft.Json;
using Oxide.Core;
using Oxide.Game.Rust.Cui;
using UnityEngine;

namespace Oxide.Plugins
{
    [Info("AProtection", "Seckret", "1.5.0")]
    public class AProtection : RustPlugin
    {
        #region Variables

        private class IAuthorize
        {
            [JsonIgnore] public bool IsAuthed;
            [JsonIgnore] public Vector3 LastPosition;
            [JsonIgnore] public Timer Timer;
            
            [JsonProperty("Пароль пользователя")]
            public string Password;
            [JsonProperty("Авторизованные IP адреса")]
            public List<string> AuthedIP;

            public void Authed(BasePlayer player, string ip)
            {
                if (Timer != null && !Timer.Destroyed)
                    Timer.Destroy();
                
                if (!AuthedIP.Contains(ip))
                    AuthedIP.Add(ip);
                CuiHelper.DestroyUi(player, Layer + ".Hide2");
                CuiHelper.DestroyUi(player, Layer + ".Hide1");
                CuiHelper.DestroyUi(player, Layer + ".Hide");
                CuiHelper.DestroyUi(player, Layer);
            }
        }
        
        [JsonProperty("Информация об игроках")]
        private Dictionary<ulong, IAuthorize> StoredData = new Dictionary<ulong,IAuthorize>();
        [JsonProperty("Слой с интерфейсом")] private static string Layer = "UI.Login";

        #endregion

        #region Initialization

        private void OnServerInitialized()
        {
            lang.RegisterMessages(new Dictionary<string, string>()
            {
                ["АВТОРИЗОВАН.IP"] =           "<size=16>Вы автоматически <color=#4286f4>авторизовались</color>:</size>" +
                                               "\n<size=10>Вы уже авторизовались с IP: {0}</size>",
                
                ["ПОМОЩЬ.ЗАРЕГИСТРИРУЙТЕСЬ"] = "<size=16>Ваша учётная запись в <color=#4286f4>опасности</color>!</size>" +
                                               "\nЗагляните в консоль (<color=#4286f4>F1</color>) для устранения проблемы!",
                
                
                
                ["РЕГИСТРАЦИЯ. НЕ ВВЁЛ ПАРОЛЬ"] = "Вы не ввели пароль, либо его длина слишком мала!",
                
                ["РЕГИСТРАЦИЯ.УСПЕШНО"] = "Вы успешно зарегистрировались на сервере!\n" +
                                          "Выбранный пароль: {0}",
                
                ["АВТОРИЗАЦИЯ.УСПЕШНО"] = "Вы успешно авторизовались на сервере!",
                
                ["НЕВЕРНЫЙ ПАРОЛЬ"] = $"Вы ввели неверный пароль, попробуйте ещё раз!" +
                                      $"Команда авторизации: auth <ваш пароль>",
                ["ЗАРЕГИСТРИРУЙТЕСЬ"] = "ЗАРЕГИСТРИРУЙТЕСЬ",
                ["АВТОРИЗУЙТЕСЬ"] = "АВТОРИЗУЙТЕСЬ",
                ["ИНФО"] = "Вся информация находится в консоле",
                
                ["ПОДСКАЗКА.РЕГИСТРАЦИЯ"] = "Приветствую! Чтобы зарегистрироваться - придумай и впиши пароль в консоль!\n" +
                                            "Вам больше не придётся вводить пароль c IP: {0}\n" +
                                            $"Команда: auth <придуманный пароль>",
                ["ПОДСКАЗКА.АВТОРИЗАЦИЯ"] = "Приветствую! Вы зарегистрированы - впиши свой пароль в консоль!\n" +
                                            "Вам больше не придётся вводить пароль c IP: {0}\n" +
                                            $"Команда: auth <придуманный пароль>"
            }, this, "ru");
            lang.RegisterMessages(new Dictionary<string, string>()
            {
                ["АВТОРИЗОВАН.IP"] =           "<size=16>You successful <color=#4286f4>authorized</color>:</size>" +
                                               "\n<size=10>You already authorized from IP: {0}</size>",
                
                ["ПОМОЩЬ.ЗАРЕГИСТРИРУЙТЕСЬ"] = "<size=16>Your account is <color=#4286f4>not protected</color>!</size>" +
                                               "\nCheck Console (<color=#4286f4>F1</color>) to fix trouble!",
                
                
                
                ["РЕГИСТРАЦИЯ. НЕ ВВЁЛ ПАРОЛЬ"] = "Password is empty!",
                
                ["РЕГИСТРАЦИЯ.УСПЕШНО"] = "You successful registered on server!\n" +
                                          "Your password: {0}",
                
                ["АВТОРИЗАЦИЯ.УСПЕШНО"] = "You successful authorized!",
                
                ["НЕВЕРНЫЙ ПАРОЛЬ"] = $"You entered wrong password!" +
                                      $"Command to authorize: auth <your password>",
                ["ЗАРЕГИСТРИРУЙТЕСЬ"] = "SIGN UP",
                ["АВТОРИЗУЙТЕСЬ"] = "LOG IN",
                ["ИНФО"] = "All information in console",
                
                ["ПОДСКАЗКА.РЕГИСТРАЦИЯ"] = "Hello! To sign up, enter auth <your password> in console !\n" +
                                            "You will not need to enter password from IP: {0}\n" +
                                            $"Command: auth <your password>",
                ["ПОДСКАЗКА.АВТОРИЗАЦИЯ"] = "Hello! To log in, enter auth <your password> in console!\n" +
                                            "You will not need to enter password from IP: {0}\n" +
                                            $"Command: auth <your password>"
            }, this, "en");
            
            if (Interface.Oxide.DataFileSystem.ExistsDatafile("AProtection"))
                StoredData = Interface.Oxide.DataFileSystem.ReadObject<Dictionary<ulong, IAuthorize>>("AProtection");
            
            BasePlayer.activePlayerList.ForEach(OnPlayerInit);
        }

        private void Unload() =>
            Interface.Oxide.DataFileSystem.WriteObject("AProtection", StoredData);

        #endregion

        #region Hooks
        
        private object OnServerCommand(ConsoleSystem.Arg arg)
        {
            BasePlayer player = arg.Player();
            if (player == null || !StoredData.ContainsKey(player.userID))
                return null;

            IAuthorize buffer = StoredData[player.userID];
            if (!buffer.IsAuthed && arg.cmd.FullName.ToLower() != "global.auth")
                return false;
            
            return null;
        }

        private void OnPlayerInit(BasePlayer player)
        {
            if (player.IsReceivingSnapshot)
            {
                NextTick(() => OnPlayerInit(player));
                return;
            }

            string IP = GetIP(player.net.connection.ipaddress);
            
            if (!StoredData.ContainsKey(player.userID))
            {
                IAuthorize buffer = new IAuthorize();
                buffer.AuthedIP = new List<string>() /*{ IP }*/;
                buffer.LastPosition = player.transform.position;
                buffer.IsAuthed = false;
                StoredData.Add(player.userID, buffer);
            }
            else
            {
                IAuthorize buffer = StoredData[player.userID];
                buffer.LastPosition = player.transform.position;
                buffer.IsAuthed = false;
                
                if (buffer.AuthedIP.Contains(IP))
                {
                    buffer.IsAuthed = true;
                    player.ChatMessage(FL("АВТОРИЗОВАН.IP").Replace("{0}", IP));
                    return;
                }
            }

            ForceAuthorization(player);
            DrawInterface(player);
        }

        #endregion

        #region Commands

        [ConsoleCommand("auth")]
        private void cmdAuthConsole(ConsoleSystem.Arg args)
        {
            BasePlayer player = args.Player();
            if (player == null)
                return;
            
            if (!StoredData.ContainsKey(player.userID))
                OnPlayerInit(player);

            if (!args.HasArgs(1) || args.FullString.Length == 0)
            {
                args.ReplyWithObject(FL("РЕГИСТРАЦИЯ. НЕ ВВЁЛ ПАРОЛЬ"));
                return;
            }

            string ip = GetIP(player.net.connection.ipaddress);
            string password = args.FullString;
            IAuthorize buffer = StoredData[player.userID];
            if (buffer.IsAuthed)
                return;

            if (string.IsNullOrEmpty(buffer.Password))
            {
                args.ReplyWithObject(FL("РЕГИСТРАЦИЯ.УСПЕШНО").Replace("{0}", password));
                buffer.Password = password;
                buffer.IsAuthed = true;
                buffer.Authed(player, ip);
            }
            else if (password == buffer.Password)
            {
                args.ReplyWithObject(FL("АВТОРИЗАЦИЯ.УСПЕШНО"));
                player.SetPlayerFlag(BasePlayer.PlayerFlags.ChatMute, false);
                buffer.IsAuthed = true;
                buffer.Authed(player, ip);
            }
            else
            {
                args.ReplyWithObject(FL("НЕВЕРНЫЙ ПАРОЛЬ"));
                return;
            }
        }

        #endregion

        #region Functions

        private void ForceAuthorization(BasePlayer player)
        {
            IAuthorize buffer = StoredData[player.userID];
            if (buffer.IsAuthed)
                return;
            
            if (string.IsNullOrEmpty(buffer.Password))
            {
                player.ChatMessage(FL("ПОМОЩЬ.ЗАРЕГИСТРИРУЙТЕСЬ"));
                player.SendConsoleCommand($"echo {FL("ПОДСКАЗКА.РЕГИСТРАЦИЯ").Replace("{0}", GetIP(player.net.connection.ipaddress))}");
                buffer.Timer = timer.Once(10, () => ForceAuthorization(player));
                return;
            }
            
            player.SetPlayerFlag(BasePlayer.PlayerFlags.ChatMute, true);
            player.SendConsoleCommand($"echo {FL("ПОДСКАЗКА.АВТОРИЗАЦИЯ").Replace("{0}", GetIP(player.net.connection.ipaddress))}");
            player.Teleport(buffer.LastPosition);
            buffer.Timer = timer.Once(2, () => ForceAuthorization(player));
        }

        #endregion

        #region Helpers

        private string GetIP(string input)
        {
            if (input.Contains(":"))
                return input.Split(':')[0];

            return input;
        }

        private string FL(string key) => lang.GetMessage(key, this);

        #endregion

        #region GUI
        
        private static string HexToRustFormat(string hex)
        {
            if (string.IsNullOrEmpty(hex))
            {
                hex = "#FFFFFFFF";
            }

            var str = hex.Trim('#');

            if (str.Length == 6)
                str += "FF";

            if (str.Length != 8)
            {
                throw new Exception(hex);
                throw new InvalidOperationException("Cannot convert a wrong format.");
            }

            var r = byte.Parse(str.Substring(0, 2), NumberStyles.HexNumber);
            var g = byte.Parse(str.Substring(2, 2), NumberStyles.HexNumber);
            var b = byte.Parse(str.Substring(4, 2), NumberStyles.HexNumber);
            var a = byte.Parse(str.Substring(6, 2), NumberStyles.HexNumber);

            Color color = new Color32(r, g, b, a);

            return string.Format("{0:F2} {1:F2} {2:F2} {3:F2}", color.r, color.g, color.b, color.a);
        }

        private void DrawInterface(BasePlayer player)
        {
            CuiHelper.DestroyUi(player, Layer);
            CuiElementContainer container = new CuiElementContainer();

            string action = string.IsNullOrEmpty(StoredData[player.userID].Password) ? FL("ЗАРЕГИСТРИРУЙТЕСЬ") : FL("АВТОРИЗУЙТЕСЬ");

            container.Add(new CuiPanel
            {
                FadeOut = 2f,
                CursorEnabled = true,
                RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1", OffsetMax = "0 0" },
                Image = { FadeIn = 2f, Color = HexToRustFormat("#51514E47") }
            }, "Overlay", Layer);

            container.Add(new CuiButton
            {
                FadeOut = 2f,
                RectTransform = { AnchorMin = "0.3347656 0.4388889", AnchorMax = "0.6652344 0.5611111" },
                Text = { FadeIn = 2f, Text = "", FontSize = 32, Font = "robotocondensed-bold.ttf", Align = TextAnchor.MiddleCenter},
                Button = { FadeIn = 2f, Color = HexToRustFormat("#8484844A") },
            }, Layer, Layer + ".Hide");

            container.Add(new CuiLabel
            {
                FadeOut = 2f,
                RectTransform = { AnchorMin = "0 0.3", AnchorMax = "1 1" },
                Text = { FadeIn = 2f, Text = action, FontSize = 38, Font = "robotocondensed-bold.ttf", Align = TextAnchor.MiddleCenter},
            }, Layer + ".Hide", Layer + ".Hide1");

            container.Add(new CuiLabel
            {
                FadeOut = 2f,
                RectTransform = { AnchorMin = "0 0", AnchorMax = "1 0.5" },
                Text = { FadeIn = 2f, Text = FL("ИНФО"), FontSize = 22, Font = "robotocondensed-regular.ttf", Align = TextAnchor.MiddleCenter},
            }, Layer + ".Hide", Layer + ".Hide2");

            CuiHelper.AddUi(player, container);
        }

        #endregion
    }
}

// --- End of file: AProtection.cs ---
// --- Next file ---

// --- GitHub Source URL: https://github.com/RustyyTown/plugins/blob/main/CustomBackpacks-2.1.4.cs ---
// --- Original Local Path: CustomBackpacks-2.1.4.cs ---

using System.Collections.Generic;
using Newtonsoft.Json;
using Oxide.Core;
using UnityEngine;
using Array = System.Array;

namespace Oxide.Plugins;

[Info("CustomBackpacks", "misty.dev (Cobalt Studios)", "2.1.4")]
[Description("Allows you to create custom backpacks and add them to the loot tables.")]
public class CustomBackpacks : RustPlugin
{
    #region Private Fields

    private Configuration _config;
    private Dictionary<ulong, Item> _backpacks = new();
    private static VersionNumber _configVersion = new(2, 1, 4);
    private const GameTip.Styles Error = GameTip.Styles.Error;

    #endregion

    #region Hooks

    private void Init()
    {

        _config.Commands.TryAdd("give", "cb.give");
        
        cmd.AddChatCommand(_config.Commands["give"], this, nameof(GivePlayerBackpack));
        cmd.AddConsoleCommand(_config.Commands["give"], this, nameof(ConsoleGivePlayerBackpack));
        permission.RegisterPermission("custombackpacks.give", this);
        
        if(!_config.RemoveDefaultBackpacks) Unsubscribe("OnLootSpawn");
    }
    
    private object OnBackpackDrop(Item backpack, PlayerInventory inv)
    {
        var player = inv._baseEntity;
        
        if (player == null || player.health > 0) return null!;
        
        if (!_config.Backpacks.TryGetValue(backpack.name, out BackpackInfo backpackInfo)) return null!;
        
        if (!backpackInfo.SaveContentsOnDeath) return null!;
        
        _backpacks.Add(player.userID.Get(), backpack);
        
        backpack.RemoveFromContainer();
        backpack.RemoveFromWorld();

        return null!;
    }

    private void OnPlayerRespawn(BasePlayer player, BasePlayer.SpawnPoint _)
    {
        var playerId = player.userID.Get();
        timer.Once(0.2f, () =>
        {
            GiveBackpack(player);
            _backpacks.Remove(playerId);
        });
    }

    private void OnLootSpawn(LootContainer container)
    {
        if (_config.RemoveDefaultBackpacks) RemoveBackpacks(container);

        foreach (var kvp in _config.LootSpawns)
        {
            if(kvp.Key != container.PrefabName) continue;

            foreach (var backpack in kvp.Value)
            {
                var rndm = UnityEngine.Random.Range(0f, 100.1f);

                if (!_config.Backpacks.TryGetValue(backpack.Key, out BackpackInfo info)) continue;

                if (!(backpack.Value > rndm)) continue;

                container.inventory.capacity++;
                container.inventory.GiveItem(GetBackpack(info.Shortname, info.Capacity, backpack.Key));
            }
        }
    }

    #endregion

    #region Commands
    private void ConsoleGivePlayerBackpack(ConsoleSystem.Arg arg) => GivePlayerBackpack(arg.Player(), null!, arg.Args);

    private void GivePlayerBackpack(BasePlayer player, string command, string[] args)
    {
        BasePlayer target;
        string name;
        if (player == null)
        {
            if (args.IsEmpty() || args.Length < 2)
            {
                SendMessage(null, "InvalidUsage", Error, _config.Commands["give"]);
                return;
            }

            name = args[0];

            if (!_config.Backpacks.TryGetValue(name, out BackpackInfo backpackInfo))
            {
                SendMessage(null, "InvalidBackpack", Error);
                return;
            }

            target = BasePlayer.Find(args[1]);

            if (target == null)
            {
                SendMessage(null, "InvalidTarget", Error);
                return;
            }

            GiveBackpack(target, name);

            SendMessage(null, "GaveBackpack", args: new object[] { target.displayName, name });
            return;
        }
        
        if (!permission.UserHasPermission(player.UserIDString, "custombackpacks.give"))
        {
            SendMessage(player, "MissingPermission", Error);
            return;
        }

        if (args.IsEmpty() || args.Length < 2)
        {
            // SendError(player, "Invalid usage, /cb.give <backpack> <steamIdOrName>");
            SendMessage(player, "InvalidUsage", Error, _config.Commands["give"]);
            return;
        }

        name = args[0];

        if (!_config.Backpacks.TryGetValue(name, out BackpackInfo backpack))
        {
            SendMessage(player, "InvalidBackpack", Error);
            return;
        }

        target = BasePlayer.Find(args[1]);

        if (target == null)
        {
            // SendError(player, "Invalid steam id or name provided.");
            SendMessage(player, "InvalidTarget", Error);
            return;
        }

        GiveBackpack(target, name);

        // player.ShowToast(GameTip.Styles.Blue_Normal, new Translate.Phrase(eng: $"Gave {target.displayName} {name}"),
        //     false, Array.Empty<string>());
        SendMessage(player, "GaveBackpack", args: new object[] { target.displayName, name });
    }

    #endregion

    #region Helper Functions
    private void RemoveBackpacks(LootContainer container)
    {
        for (var index = container.inventory.itemList.Count - 1; index >= 0; index--)
        {
            var backpack = container.inventory.itemList[index];

            if (backpack.info.itemid is -907422733 or 2068884361)
            {
                backpack.Remove();
            }
        }
    }

    private Item GetBackpack(string shortname, int capacity, string name)
    {
        var item = ItemManager.CreateByName(shortname);

        if (!item.IsBackpack()) return item;
        
        item.contents.capacity = capacity;
        item.name = name;

        item.contents.canAcceptItem = CanAccept;

        return item;
    }

    private void GiveBackpack(BasePlayer player, string? name = null)
    {
        var playerId = player.userID.Get();
        if (!_backpacks.TryGetValue(playerId, out Item backpack))
        {
            // If name is null, we know its when we are doing so on respawn.
            if (name == null) return;
            
            if (!_config.Backpacks.TryGetValue(name, out BackpackInfo bp)) return;
            backpack = GetBackpack(bp.Shortname, bp.Capacity, name);
        }

        if (player.inventory.containerWear.GetSlot(ItemContainer.BackpackSlotIndex) != null)
        {
            player.inventory.GiveItem(backpack);
            return;
        }

        backpack.MoveToContainer(player.inventory.containerWear, ItemContainer.BackpackSlotIndex);
    }

    private bool CanAccept(Item item, int _)
    {
        var player = item.GetOwnerPlayer();

        if (player == null) return true;

        var backpack = player.inventory.GetBackpackWithInventory();

        if (backpack == null) return true;

        if (!_config.Backpacks.TryGetValue(backpack.name, out BackpackInfo info)) return true;
        
        if (info.ItemBlackList.Contains(item.info.shortname))
        {
            // SendError(player, $"{backpack.name} cannot accept {item.info.displayName.translated}");
            SendMessage(player, "CannotAcceptItem", GameTip.Styles.Error, backpack.name,
                item.info.displayName.translated);
            return false;
        };
        
        return true;
    }

    #endregion

    #region Localization

    protected override void LoadDefaultMessages()
    {
        lang.RegisterMessages(new Dictionary<string, string>
        {
            ["CannotAcceptItem"] = "{0} cannot accept {1}",
            ["InvalidTarget"] = "Invalid steam id or name provided.",
            ["InvalidBackpack"] = "Invalid backpack name provided.",
            ["MissingPermission"] = "Missing permissions to run this command",
            ["GaveBackpack"] = "Gave {0} {1}",
            ["InvalidUsage"] = "Invalid usage, {0} <backpack> <steamIdOrName>"
        }, this);
    }
    
    private void SendMessage(BasePlayer? player, string key, GameTip.Styles style = GameTip.Styles.Blue_Normal, params object[] args)
    {
        var message = string.Format(lang.GetMessage(key, this, player?.UserIDString), args);
        if (player == null)
        {
            Puts(message);
            return;
        }
        Translate.Phrase phrase =
            new Translate.Phrase(eng: message);

        player.ShowToast(style, phrase, false, Array.Empty<string>());
    }

    #endregion
    
    #region Configuration

    private class Configuration
    {
        [JsonProperty("RemoveDefaultBackpacks", ObjectCreationHandling = ObjectCreationHandling.Replace)]
        public bool RemoveDefaultBackpacks = false;
        [JsonProperty("Backpacks", ObjectCreationHandling = ObjectCreationHandling.Replace)]
        public Dictionary<string, BackpackInfo> Backpacks = new Dictionary<string, BackpackInfo>
        {
            ["rucksack"] = new BackpackInfo()
            {
                Shortname = "largebackpack",
                SaveContentsOnDeath = true,
                Capacity = 8,
                ItemBlackList = new List<string>
                {
                    "rifle.ak",
                    "sulfur.ore",
                    "lmg.m249"
                },
            }
        };

        [JsonProperty("Command Names", ObjectCreationHandling = ObjectCreationHandling.Replace)]
        public Dictionary<string, string> Commands = new Dictionary<string, string>
        {
            ["give"] = "cb.give"
        };

        [JsonProperty("LootSpawns", ObjectCreationHandling = ObjectCreationHandling.Replace)]
        public Dictionary<string, Dictionary<string, float>> LootSpawns =
            new Dictionary<string, Dictionary<string, float>>
            {
                ["assets/bundled/prefabs/radtown/crate_basic.prefab"] = new Dictionary<string, float>
                {
                    ["rucksack"] = 100f
                }
            };

        [JsonProperty("Version")] public VersionNumber VersionNumber = _configVersion;
    }
    
    private class BackpackInfo
    {
        [JsonProperty("Shortname")] public string Shortname;
        [JsonProperty("SaveContentsOnDeath")] public bool SaveContentsOnDeath;
        [JsonProperty("Capacity")] public int Capacity;
        [JsonProperty("ItemBlackList")] public List<string> ItemBlackList;
    }

    protected override void LoadDefaultConfig() => _config = new Configuration();

    protected override void LoadConfig()
    {
        base.LoadConfig();

        try
        {
            _config = Config.ReadObject<Configuration>();

            if (_config != null) return;

            if (_config.VersionNumber >= Version) return;

            Puts("Config is outdated, updating config...");
            UpdateConfig();
            SaveConfig();
        }
        catch
        {
            LoadDefaultConfig();
            SaveConfig();
        }
    }

    protected override void SaveConfig() => Config.WriteObject(_config, true);

    private void UpdateConfig()
    {
        _config.VersionNumber = Version;
    }
    #endregion
} 

// --- End of file: CustomBackpacks-2.1.4.cs ---
// --- Next file ---

// --- GitHub Source URL: https://github.com/RustyyTown/plugins/blob/main/TPSkinMenu.cs ---
// --- Original Local Path: TPSkinMenu.cs ---

using System;
using Newtonsoft.Json;
using UnityEngine;
using System.Linq;
using Oxide.Game.Rust.Cui;
using Oxide.Core;
using System.Collections.Generic;
using System.Collections;
using Oxide.Core.Plugins;
		   		 		  						  	   		  	  			  	  			  	   		  		  
namespace Oxide.Plugins 
{ 
    [Info("TPSkinMenu", "Sempai#3239", "5.0.0")]
    class TPSkinMenu : RustPlugin
    {
		
		private void SetSkinTransport(BasePlayer player, BaseVehicle vehicle, string shortname)
		{
			ulong skin = StoredData[player.userID].Skins[shortname];
			
			if(skin == vehicle.skinID || skin == 0) return;
			
			if(errorskins.ContainsKey(skin))
				shortname = errorskins[skin];
			if(errorshortnames.ContainsKey(shortname))
				shortname = errorshortnames[shortname];
			
			BaseVehicle transport = GameManager.server.CreateEntity($"assets/content/vehicles/snowmobiles/{shortname}.prefab", vehicle.transform.position, vehicle.transform.rotation) as BaseVehicle;
			transport.health = vehicle.health;
			transport.skinID = skin;
			
			vehicle.Kill();
			transport.Spawn();
			Effect.server.Run("assets/prefabs/deployable/repair bench/effects/skinchange_spraypaint.prefab", transport.transform.localPosition);
		}
		 
		protected override void LoadConfig()
        {
            base.LoadConfig(); 
			 
			try
			{
				config = Config.ReadObject<SkinConfig>();
			}
			catch  
			{
				PrintWarning("Ошибка чтения конфигурации! Создание дефолтной конфигурации!");
				LoadDefaultConfig();
			}
			
			SaveConfig();
        }
		
		private void SaveData(BasePlayer player)
		{
			ulong userID = player.userID;
			
			if(StoredData.ContainsKey(userID))
				Interface.Oxide.DataFileSystem.WriteObject($"XDataSystem/XSkinMenu/UserSettings/{userID}", StoredData[userID]);
		}
		
	    private void OnPlayerDisconnected(BasePlayer player)
		{
			if(StoredData.ContainsKey(player.userID)) 
			{   
				SaveData(player);
				StoredData.Remove(player.userID);
			}			
			  
			if(Cooldowns.ContainsKey(player)) 
				Cooldowns.Remove(player);  
		}
		
		[ConsoleCommand("skin_c")]
		private void ccmdCategoryS(ConsoleSystem.Arg args)
		{
			BasePlayer player = args.Player();
			
			if(!permission.UserHasPermission(player.UserIDString, "xskinmenu.use")) 
			{
				SendReply(player, lang.GetMessage("NOPERM", this, player.UserIDString));
				return;
			}
			
			if(Cooldowns.ContainsKey(player))
                if(Cooldowns[player].Subtract(DateTime.Now).TotalSeconds >= 0) return;
			
			Effect x = new Effect("assets/bundled/prefabs/fx/notice/loot.drag.grab.fx.prefab", player, 0, new Vector3(), new Vector3());
			Effect z = new Effect("assets/bundled/prefabs/fx/weapons/survey_charge/survey_charge_stick.prefab", player, 0, new Vector3(), new Vector3());
			
			switch(args.Args[0])
			{
				case "category":
				{
					CategoryGUI(player, int.Parse(args.Args[2]));
					ItemGUI(player, args.Args[1]);
					EffectNetwork.Send(x, player.Connection);
					
					Cooldowns[player] = DateTime.Now.AddSeconds(0.5f);
					break;
				}				
				case "skin":
				{ 
					SkinGUI(player, args.Args[1]);
					EffectNetwork.Send(x, player.Connection);
					
					CuiHelper.DestroyUi(player, ".ItemGUI");
					
					Cooldowns[player] = DateTime.Now.AddSeconds(0.5f);
					break; 
				}				
				case "setskin":
				{ 
					string item = args.Args[1];
					ulong skin = ulong.Parse(args.Args[2]);
					
					if(!permission.UserHasPermission(player.UserIDString, "xskinmenu.skinchange") || !StoredData[player.userID].Skins.ContainsKey(item)) return;
					
					Effect y = new Effect("assets/prefabs/deployable/repair bench/effects/skinchange_spraypaint.prefab", player, 0, new Vector3(), new Vector3());
					StoredData[player.userID].Skins[item] = skin;
					
					if(!permission.UserHasPermission(player.UserIDString, "xskinmenu.inventory"))
						SendReply(player, lang.GetMessage("NOPERM", this, player.UserIDString));
					else
					{
					    if(StoredData[player.userID].ChangeSI) SetSkinItem(player, item, skin);
						if(config.GUI.SkinUP) SkinGUI(player, item, int.Parse(args.Args[3]));
					}
					
					EffectNetwork.Send(y, player.Connection);
					
					Cooldowns[player] = DateTime.Now.AddSeconds(1.5f); // Здесь не трогать!!! =)
					break;
				}				
				case "clear":
				{
					if(!permission.UserHasPermission(player.UserIDString, "xskinmenu.skinchange")) return;
					
					string item = args.Args[1];
					StoredData[player.userID].Skins[item] = 0;
					
					CuiHelper.DestroyUi(player, $".I + {args.Args[2]}");
					if(StoredData[player.userID].ChangeSCL) SetSkinItem(player, item, 0);
					if(config.GUI.MainSkin) ItemGUI(player, args.Args[3], int.Parse(args.Args[4]));
					
					EffectNetwork.Send(z, player.Connection);
					
					Cooldowns[player] = DateTime.Now.AddSeconds(0.5f);
					break;
				}				
				case "clearall":
				{
					if(!permission.UserHasPermission(player.UserIDString, "xskinmenu.skinchange")) return;
					
					StoredData[player.userID].Skins.Clear();
					
					foreach(var skin in StoredDataSkins) 
						StoredData[player.userID].Skins.Add(skin.Key, 0);
					
					GUI(player);
					EffectNetwork.Send(z, player.Connection);
					
					Cooldowns[player] = DateTime.Now.AddSeconds(2.5f);
					break;
				}
			}
		}
		
		[ConsoleCommand("skinimage_reload")]
		private void ccmdReloadIMG(ConsoleSystem.Arg args)
		{
			if(args.Player() == null || args.Player().IsAdmin)
			{
				if(config.API.GameIMG)
				{
					PrintError("COMMAND_OFF");
					return;
				}
				
				if(_coroutine == null)
					_coroutine = ServerMgr.Instance.StartCoroutine(ReloadImage());
				else
					PrintWarning("Загрузка/перезагрузка изображений продолжается. Подождите!");
			}
		}
		
		private void CategoryGUI(BasePlayer player, int page = 0)
		{
			CuiHelper.DestroyUi(player, ".SkinBUTTON");
            CuiElementContainer container = new CuiElementContainer();
			
			container.Add(new CuiPanel
            {
                RectTransform = { AnchorMin = "0.25 0.65", AnchorMax = "0.75 0.73", OffsetMax = "0 0" },
                Image = { Color = "0 0 0 0" }
            }, ".SGUI", ".SkinBUTTON");
			
			int x = 0, count = config.Category.Count; 
			
			foreach(var category in config.Category)
			{
				string color = page == x ? config.GUI.ActiveColor : config.GUI.InactiveColor;
				double offset = -(50 * count--) + -(2.5 * count--);

				var amin = x == 0 ? "0.027 0.33" : x == 1 ? "0.162 0.33" : x == 2 ? "0.354 0.33" : x == 3 ? "0.506 0.33" : x == 4 ? "0.645 0.33" : "0.825 0.33";
				var amax = x == 0 ? "0.146 0.75" : x == 1 ? "0.34 0.75" : x == 2 ? "0.491 0.75" : x == 3 ? "0.63 0.75" : x == 4 ? "0.813 0.75" : "0.98 0.75";
		   		 		  						  	   		  	  			  	  			  	   		  		  
				container.Add(new CuiButton
                {
                    RectTransform = { AnchorMin = $"{amin}", AnchorMax = $"{amax}", OffsetMax = "0 0" },
                    Button = { Color = "0 0 0 0", Command = $"skin_c category {category.Key} {x}" },
                    Text = { Text = $"       {lang.GetMessage(category.Key, this, player.UserIDString)}", Align = TextAnchor.MiddleCenter, Font = "robotocondensed-regular.ttf", FontSize = 11, Color = "0.7507126 0.7507126 0.7507126 1" }
                }, ".SkinBUTTON", ".BUTTON");
 
			    container.Add(new CuiPanel
                {
                    RectTransform = { AnchorMin = "0.06 0", AnchorMax = "0.92 0", OffsetMax = "0 1.5" },
                    Image = { Color = color, Material = "assets/icons/greyout.mat" }
                }, ".BUTTON");
				
				x++;
			}
			
			CuiHelper.AddUi(player, container);
		}
		
		[ConsoleCommand("xskin")]
		private void ccmdAdmin(ConsoleSystem.Arg args)
		{
			if(args.Player() == null || args.Player().IsAdmin)
			{
				string item = args.Args[1];
				
				if(!StoredDataSkins.ContainsKey(item))
				{
					PrintWarning($"Не найдено предмета <{item}> в списке!");
					return;
				}
				
				switch(args.Args[0])
				{
					case "add": 
					{
						ulong skinID = ulong.Parse(args.Args[2]);
							
						if(StoredDataSkins[item].Contains(skinID))
							PrintWarning($"Скин <{skinID}> уже есть в списке скинов предмета <{item}>!");
						else
						{
							StoredDataSkins[item].Add(skinID);
							PrintWarning($"Скин <{skinID}> успешно добавлен в список скинов предмета <{item}>!");
							
							if(!config.API.GameIMG)
							{
								if(config.API.APIOption)
									ImageLibrary.Call("AddImage", $"http://api.skyplugins.ru/api/getskin/{skinID}/{150}", $"{skinID}" + 152);
								else
									ImageLibrary.Call("AddImage", $"https://api.skyplugins.ru/api/getskin/v1/08102261/{skinID}/150", $"{skinID}" + 152);
							}
						}
						
						break;
					}					
					case "remove":
					{
						ulong skinID = ulong.Parse(args.Args[2]);
						
						if(StoredDataSkins[item].Contains(skinID))
						{
							StoredDataSkins[item].Remove(skinID);
							PrintWarning($"Скин <{skinID}> успешно удален из списка скинов предмета <{item}>!");
						}
						else
							PrintWarning($"Скин <{skinID}> не найден в списке скинов предмета <{item}>!");
						
						break;
					}
					case "remove_ui":
					{
						ulong skinID = ulong.Parse(args.Args[2]);
						
						if(StoredDataSkins[item].Contains(skinID))
						{
							BasePlayer player = args.Player();
							
							if(player != null)
							{
								StoredDataSkins[item].Remove(skinID);
								if(config.GUI.DelSkinUP) SkinGUI(player, item, int.Parse(args.Args[3]));
								EffectNetwork.Send(new Effect("assets/bundled/prefabs/fx/weapons/survey_charge/survey_charge_stick.prefab", player, 0, new Vector3(), new Vector3()), player.Connection);
								PrintWarning($"Скин <{skinID}> успешно удален из списка скинов предмета <{item}>!");
							}
						}
						else
							PrintWarning($"Скин <{skinID}> не найден в списке скинов предмета <{item}>!");
						
						break;
					}
					case "list": 
					{
						if(StoredDataSkins[item].Count == 0)
						{
							PrintWarning($"Список скинов предмета <{item}> пуст!");
							return;
						}
						
						string skinslist = $"Список скинов предмета <{item}>:\n";
						
						foreach(ulong skinID in StoredDataSkins[item])
						    skinslist += $"\n{skinID}";
						
						PrintWarning(skinslist);
						
						break;
					}					
					case "clearlist":
					{
						if(StoredDataSkins[item].Count == 0)
						{
							PrintWarning($"Список скинов предмета <{item}> уже пуст!");
							return;
						}
						else
						{
							StoredDataSkins[item].Clear();
							PrintWarning($"Список скинов предмета <{item}> успешно очищен!");
						} 
						
						break;  
					}					  
				}
				
				Interface.Oxide.DataFileSystem.WriteObject("XDataSystem/XSkinMenu/Skins", StoredDataSkins);
			}
		}
		
				 
	    private void OnServerInitialized()
		{
			/*PrintWarning("\n-----------------------------\n" +
			"     Author - Sempai\n" +
			"     VK - vk.com/rustnastroika\n" + 
			"     Discord - Sempai#3239\n" +
			"     Config - v.7126\n" + 
			"-----------------------------"); */
		   		 		  						  	   		  	  			  	  			  	   		  		  
			if(Interface.Oxide.DataFileSystem.ExistsDatafile("XDataSystem/XSkinMenu/Friends"))
                StoredDataFriends = Interface.Oxide.DataFileSystem.ReadObject<Dictionary<ulong, bool>>("XDataSystem/XSkinMenu/Friends");			
			if(Interface.Oxide.DataFileSystem.ExistsDatafile("XDataSystem/XSkinMenu/Skins"))
                StoredDataSkins = Interface.Oxide.DataFileSystem.ReadObject<Dictionary<string, List<ulong>>>("XDataSystem/XSkinMenu/Skins");			
			
			if(!config.API.GameIMG && _coroutine == null && ImageLibrary)
				_coroutine = ServerMgr.Instance.StartCoroutine(LoadImage());	
			
			foreach(var items in config.Category)
				foreach(var item in items.Value)
				{
					string key = item.Key;
					
					_items.Add(key, item.Value);
					_itemsId.Add(key, ItemManager.FindItemDefinition(key).itemid);
				}
			
			foreach(var item in ItemManager.GetItemDefinitions())
			{
				var prefab = item.GetComponent<ItemModDeployable>()?.entityPrefab?.resourcePath;
				if(string.IsNullOrEmpty(prefab)) continue;
				 
				var shortPrefabName = Utility.GetFileNameWithoutExtension(prefab);
				if(!string.IsNullOrEmpty(shortPrefabName) && !_shortnamesEntity.ContainsKey(shortPrefabName))
				    _shortnamesEntity.Add(shortPrefabName, item.shortname);
			}
			  
			GenerateItems();
				
			BasePlayer.activePlayerList.ToList().ForEach(OnPlayerConnected);
			timer.Every(180, () => BasePlayer.activePlayerList.ToList().ForEach(SaveData));
			timer.Every(200, () => Interface.Oxide.DataFileSystem.WriteObject("XDataSystem/XSkinMenu/Friends", StoredDataFriends));
			
			InitializeLang();
			permission.RegisterPermission("xskinmenu.use", this);
			permission.RegisterPermission("xskinmenu.setting", this);
			permission.RegisterPermission("xskinmenu.craft", this);
			permission.RegisterPermission("xskinmenu.entity", this);
			permission.RegisterPermission("xskinmenu.inventory", this);   
			permission.RegisterPermission("xskinmenu.give", this);
			permission.RegisterPermission("xskinmenu.skinchange", this);
			
			if(!config.API.GameIMG && !ImageLibrary)
				timer.Once(2, () =>
				{
					PrintError("У вас не установлен плагин - ImageLibrary!");
					Interface.Oxide.UnloadPlugin(Name);
				});

			ImageLibrary.Call("AddImage", "https://rustage.su/img/server/ui/skin_bg.png", "HZAn2Et");
			ImageLibrary.Call("AddImage", "https://rustage.su/img/server/ui/skin_reset_btn.png", "76unpVI");
			ImageLibrary.Call("AddImage", "https://rustage.su/img/server/ui/skin_modal_settings.png", "QJ1ZV1G");
		}
		 
				
		private readonly Dictionary<string, string> _shortnamesEntity = new Dictionary<string, string>();
		
		private void SetSkinItem(BasePlayer player, string item, ulong skin) 
		{
			foreach(var i in player.inventory.FindItemsByItemID(ItemManager.FindItemDefinition(item).itemid))
			{
				if(i.skin == skin || config.Setting.Blacklist.Contains(i.skin)) continue;
				
				if(errorskins.ContainsKey(skin))
				{
					i.UseItem();
					Item newitem = ItemManager.CreateByName(errorskins[skin]);
					newitem.condition = i.condition;
					newitem.maxCondition = i.maxCondition;
					
					if(i.contents != null)   
						foreach(var module in i.contents.itemList)
						{
							Item content = ItemManager.CreateByName(module.info.shortname, module.amount);
							content.condition = module.condition;
							content.maxCondition = module.maxCondition;
					
							content.MoveToContainer(newitem.contents);
						}	
					
					player.GiveItem(newitem); 
				}
				else
				{
                    i.skin = skin;
                    i.MarkDirty();
		   		 		  						  	   		  	  			  	  			  	   		  		  
                    BaseEntity entity = i.GetHeldEntity();
                    if(entity != null)
                    {
                        entity.skinID = skin;
                        entity.SendNetworkUpdate();
                    }
				}
			}
		}
		
		private IEnumerator ReloadImage()
		{
			int x = 0, y = 0, xx = 0, yy = 0;
			
			PrintWarning("Началась перезагрузка изображений категорий!");
			
			foreach(var category in config.Category)
			{
			    foreach(var item in category.Value)
				{
				    ImageLibrary.Call("AddImage", $"http://api.skyplugins.ru/api/getimage/{item.Key}/{150}", item.Key + 150);
					
					y++;
					
					yield return CoroutineEx.waitForSeconds(0.3f);
				}
				
				x++;
				
				if(config.Setting.LogReloadIMG)
					PrintWarning($"[ Перезагружена категория {x} из {config.Category.Count} ] - [ Перезагружено изображений категории {y} из {category.Value.Count} ]");
				
				y = 0;
			}
			
			PrintWarning("Началась перезагрузка изображений скинов!");
					
			foreach(var item in StoredDataSkins)
			{
			    foreach(var skin in item.Value)
				{
					if(config.API.APIOption)
						ImageLibrary.Call("AddImage", $"http://api.skyplugins.ru/api/getskin/{skin}/{150}", $"{skin}" + 152);
					else
						ImageLibrary.Call("AddImage", $"https://api.skyplugins.ru/api/getskin/v1/08102261/{skin}/150", $"{skin}" + 152);
					
					yy++;
					
					yield return CoroutineEx.waitForSeconds(0.3f);
				}
				
				xx++;
				
				if(config.Setting.LogReloadIMG)
					PrintWarning($"[ Перезагружен предмет {item.Key} | {xx} из {StoredDataSkins.Count} ] - [ Перезагружено изображений скинов {yy} из {item.Value.Count} ]");
				
				yy = 0;
			}
			
			PrintWarning("\n-----------------------------\n" +
			"     Перезагрузка всех изображений завершена.\n" +
			"-----------------------------");
				
			_coroutine = null;
			yield return 0;
		}
		
		private void SkinGUI(BasePlayer player, string item, int Page = 0)
		{
			CuiHelper.DestroyUi(player, ".SkinGUI");
            CuiElementContainer container = new CuiElementContainer(); 

			container.Add(new CuiPanel
            {
                RectTransform = { AnchorMin = "0.26 0.23", AnchorMax = "0.744 0.67", OffsetMax = "0 0" },
                Image = { Color = "0 0 0 0" }
            }, ".SGUI", ".SkinGUI");
			
			ulong s = StoredData[player.userID].Skins[item];
			int itemid = _itemsId[item];
			
			float width = 0.108f, height = 0.21f, startxBox = 0.02f, startyBox = 0.963f - height, xmin = startxBox, ymin = startyBox;
			foreach(var skin in StoredDataSkins[item].Skip(Page * 32).Take(32))
			{		
			    container.Add(new CuiPanel
                {
                    RectTransform = { AnchorMin = xmin + " " + ymin, AnchorMax = (xmin + width) + " " + (ymin + height * 1), OffsetMax = "0 0" },
                    Image = { Color = "0 0 0 0", Material = "assets/icons/greyout.mat" }
                }, ".SkinGUI", ".Skin");

				container.Add(new CuiPanel
                {
                    RectTransform = { AnchorMin = "0.1 0", AnchorMax = "0.9 0.02", OffsetMax = "0 0" },
                    Image = { Color = s == skin ? config.GUI.ActiveBlockColor : "0 0 0 0" }
                }, ".Skin");
				
				if(config.API.GameIMG)
					container.Add(new CuiElement
					{
						Parent = ".Skin",
						Components =
						{
							new CuiImageComponent { ItemId = itemid, SkinId = skin },
							new CuiRectTransformComponent { AnchorMin = "0 0", AnchorMax = "1 1", OffsetMin = "12 12", OffsetMax = "-12 -12" }
						}
					});		
				else
					container.Add(new CuiElement
					{
						Parent = ".Skin",
						Components =
						{
							new CuiRawImageComponent { Png = (string) ImageLibrary.Call("GetImage", $"{skin}152") },
							new CuiRectTransformComponent { AnchorMin = "0 0", AnchorMax = "1 1", OffsetMin = "12 12", OffsetMax = "-12 -12" }
						}
					});
				
				container.Add(new CuiButton
                {
                    RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1", OffsetMax = "0 0" },
                    Button = { Color = "0 0 0 0", Command = $"skin_c setskin {item} {skin} {Page}" },
                    Text = { Text = "" }
                }, ".Skin");
		   		 		  						  	   		  	  			  	  			  	   		  		  
				if(config.Setting.DeleteButton && player.IsAdmin)
				    container.Add(new CuiButton
                    {
                        RectTransform = { AnchorMin = "1 0", AnchorMax = "1 0", OffsetMin = "-20 5", OffsetMax = "-5 20" },
                        Button = { Color = "1 1 1 0.7507126", Sprite = "assets/icons/clear.png", Command = $"xskin remove_ui {item} {skin} {Page}" },
                        Text = { Text = "" }
                    }, ".Skin");				
				
				xmin += width + 0.0135f;
                if (xmin + width >= 1)
                {
                    xmin = startxBox;
                    ymin -= height + 0.03f;
                }
			}
			
			bool back = Page != 0;
			bool next = StoredDataSkins[item].Count > ((Page + 1) * 32);
			
			container.Add(new CuiButton 
            {    
                RectTransform = { AnchorMin = "-0.075 0.355", AnchorMax = "-0.01 0.635", OffsetMax = "0 0" },
                Button = { Color = "0 0 0 0", Command = back ? $"page.xskinmenu skin back {item} {Page}" : "" },
                Text = { Text = "" }
            }, ".SkinGUI");				 			
			
			container.Add(new CuiButton
            {
                RectTransform = { AnchorMin = "1.005 0.355", AnchorMax = "1.075 0.635", OffsetMax = "0 0" },
                Button = { Color = "0 0 0 0", Command = next ? $"page.xskinmenu skin next {item} {Page}" : "" },
                Text = { Text = "" }
            }, ".SkinGUI");
			
			CuiHelper.AddUi(player, container);
		}
		
		private void OnPlayerConnected(BasePlayer player)
		{
			if(player.IsReceivingSnapshot)
            {
                NextTick(() => OnPlayerConnected(player));
                return;
            }		
			
			LoadData(player);
		}  
		
		private void ItemGUI(BasePlayer player, string category, int Page = 0)
		{
			CuiHelper.DestroyUi(player, ".SettingGUI");
			CuiHelper.DestroyUi(player, ".SkinGUI");
			CuiHelper.DestroyUi(player, ".ItemGUI");
            CuiElementContainer container = new CuiElementContainer(); 
			
			container.Add(new CuiPanel
            {
                RectTransform = { AnchorMin = "0.26 0.23", AnchorMax = "0.744 0.67", OffsetMax = "0 0" },
                Image = { Color = "0 0 0 0" }
            }, ".SGUI", ".ItemGUI");
			
			var player_data = StoredData[player.userID].Skins;
			
			int z = 0;
			
			float width = 0.108f, height = 0.21f, startxBox = 0.02f, startyBox = 0.963f - height, xmin = startxBox, ymin = startyBox;
			foreach(var item in config.Category[category].Skip(Page * 32).Take(32))
			{
				string key = item.Key;
				
				bool c = player_data.ContainsKey(key);
				ulong skinID = c ? player_data[key] : 0;
				bool s = skinID != 0;
				int itemid = _itemsId[key];
				
			    container.Add(new CuiPanel
                {
                    RectTransform = { AnchorMin = xmin + " " + ymin, AnchorMax = (xmin + width) + " " + (ymin + height * 1), OffsetMax = "0 0" },
                    Image = { Color = "0 0 0 0" }
                }, ".ItemGUI", ".Item");
				
				if(config.API.GameIMG)
					container.Add(new CuiElement 
					{
						Parent = ".Item",
						Components =
						{
							new CuiImageComponent { ItemId = itemid, SkinId = config.GUI.MainSkin ? skinID : 0 },
							new CuiRectTransformComponent { AnchorMin = "0 0", AnchorMax = "1 1", OffsetMin = "12 12", OffsetMax = "-12 -12" }
						}
					});
				else
					container.Add(new CuiElement 
					{
						Parent = ".Item",
						Components =
						{
							new CuiRawImageComponent { Png = (string) ImageLibrary.Call("GetImage", config.GUI.MainSkin && c && s ? $"{skinID}152" : key + 150) },
							new CuiRectTransformComponent { AnchorMin = "0 0", AnchorMax = "1 1", OffsetMin = "12 12", OffsetMax = "-12 -12" }
						}
					});
				
				if(StoredDataSkins.ContainsKey(key) && StoredDataSkins[key].Count != 0 && c)
				{
				    container.Add(new CuiButton
                    {
                        RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1", OffsetMax = "0 0" },
                        Button = { Color = "0 0 0 0", Command = $"skin_c skin {key}" },
                        Text = { Text = "" }
                    }, ".Item");				    
				
				    if(s)
				        container.Add(new CuiButton
                        {
                            RectTransform = { AnchorMin = "1 0", AnchorMax = "1 0", OffsetMin = "-20 5", OffsetMax = "-5 20" },
                            Button = { Color = "1 1 1 0.75", Sprite = "assets/icons/clear.png", Command = $"skin_c clear {key} {z} {category} {Page}" },
                            Text = { Text = "" }
                        }, ".Item", $".I + {z}");
				}
				
				z++;
				xmin += width + 0.0135f;
                if (xmin + width >= 1)
                {
                    xmin = startxBox;
                    ymin -= height + 0.03f;
                }
			}
			
			bool back = Page != 0;
			bool next = config.Category[category].Count > ((Page + 1) * 32);
		   		 		  						  	   		  	  			  	  			  	   		  		  
			container.Add(new CuiButton 
            {    
                RectTransform = { AnchorMin = "-0.075 0.355", AnchorMax = "-0.01 0.635", OffsetMax = "0 0" },
                Button = { Color = "0 0 0 0", Command = back ? $"page.xskinmenu item back {category} {Page}" : "" },
                Text = { Text = "" }
            }, ".ItemGUI");				 			
			
			container.Add(new CuiButton
            {
                RectTransform = { AnchorMin = "1.005 0.355", AnchorMax = "1.075 0.635", OffsetMax = "0 0" },
                Button = { Color = "0 0 0 0", Command = next ? $"page.xskinmenu item next {category} {Page}" : "" },
                Text = { Text = "" }
            }, ".ItemGUI");
			
			if(config.Setting.ButtonClear)
			{
				container.Add(new CuiPanel
				{
					RectTransform = { AnchorMin = "0.51 -0.1", AnchorMax = "0.84 -0.02", OffsetMax = "0 0" },
					Image = { Color = "0 0 0 0" }
				}, ".ItemGUI", "Image");

				container.Add(new CuiElement 
				{
					Parent = "Image",
					Components =
					{
						new CuiRawImageComponent { Png = (string) ImageLibrary.Call("GetImage", "76unpVI") },
						new CuiRectTransformComponent { AnchorMin = "0 0", AnchorMax = "1 1", OffsetMax = "0 0" }
					}
				});

				container.Add(new CuiButton
				{
					RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1", OffsetMax = "0 0" },
					Button = { Color = "0 0 0 0", Command = "skin_c clearall" },
					Text = { Text = $"      {lang.GetMessage("CLEARALL", this, player.UserIDString)}", Align = TextAnchor.MiddleCenter, FontSize = 11, Font = "robotocondensed-regular.ttf", Color = "1 1 1 1" }
				}, "Image");
			}
			
			CuiHelper.AddUi(player, container);
		}		
		
		[ConsoleCommand("page.xskinmenu")]
		private void ccmdPage(ConsoleSystem.Arg args)
		{
			BasePlayer player = args.Player();
			Effect x = new Effect("assets/bundled/prefabs/fx/notice/loot.drag.grab.fx.prefab", player, 0, new Vector3(), new Vector3());
			
			string item = args.Args[2];
			int Page = int.Parse(args.Args[3]);
			
			switch (args.Args[0])
			{
				case "item":
				{
					switch(args.Args[1])
					{
				        case "next":
				        {
				        	ItemGUI(player, item, Page + 1);	
				        	break;
				        }						
				        case "back":
				        {
				        	ItemGUI(player, item, Page - 1);
				        	break;
				        }
					}
					break;
				}				
				case "skin":
				{
					switch(args.Args[1])
					{
				        case "next":
				        {
				        	SkinGUI(player, item, Page + 1);	
				        	break;
				        }						
				        case "back":
				        {
				    	    SkinGUI(player, item, Page - 1);
				    	    break;
				        }
					}
					break;
				}
			}
			
			EffectNetwork.Send(x, player.Connection);
		}
		
		private IEnumerator LoadImage()
		{
			int x = 0, y = 0, xx = 0, yy = 0;
			
			PrintWarning("Началась загрузка изображений категорий!");
			
			foreach(var category in config.Category)
			{
			    foreach(var item in category.Value)
				{
					if(config.API.HasImage || !ImageLibrary.Call<bool>("HasImage", item.Key + 150))
					{
				        ImageLibrary.Call("AddImage", $"http://api.skyplugins.ru/api/getimage/{item.Key}/{150}", item.Key + 150);
						
						y++;
						
						yield return CoroutineEx.waitForSeconds(0.3f);
					}
					else
						yield return CoroutineEx.waitForSeconds(0.03f);
				}
				
				x++;
				
				if(config.Setting.LogLoadIMG)
					PrintWarning($"[ Загружена категория {x} из {config.Category.Count} ] - [ Загружено изображений категории {y} из {category.Value.Count} ]");
				
				y = 0;
			}
			
			PrintWarning("Началась загрузка изображений скинов!");
					
			foreach(var item in StoredDataSkins)
			{
			    foreach(var skin in item.Value)
				{
					if(config.API.HasImage || !ImageLibrary.Call<bool>("HasImage", $"{skin}" + 152))
					{
						if(config.API.APIOption)
							ImageLibrary.Call("AddImage", $"http://api.skyplugins.ru/api/getskin/{skin}/{150}", $"{skin}" + 152);
						else
							ImageLibrary.Call("AddImage", $"https://api.skyplugins.ru/api/getskin/v1/08102261/{skin}/150", $"{skin}" + 152);
						
						yy++;
						
						yield return CoroutineEx.waitForSeconds(0.3f);
					}
					else
						yield return CoroutineEx.waitForSeconds(0.03f);
				}
				
				xx++;
				
				if(config.Setting.LogLoadIMG)
					PrintWarning($"[ Загружен предмет {item.Key} | {xx} из {StoredDataSkins.Count} ] - [ Загружено изображений скинов {yy} из {item.Value.Count} ]");
				
				yy = 0;
			}
			
			PrintWarning("\n-----------------------------\n" +
			"     Загрузка всех изображений завершена.\n" +
			"     Изображения которые не были загружены, это означает что они уже есть в дате ImageLibrary.\n" +
			"     А если они сломаные, то вам нужно их перезагрузить командой skinimage_reload или очистить дату ImageLibrary.\n" +
			"-----------------------------");
			
			_coroutine = null;
			yield return 0;
		}
		
		public Dictionary<string, string> errorshortnames = new Dictionary<string, string>
		{
			["snowmobiletomaha"] = "tomahasnowmobile"
		};
		
		private void OnNewSave()
		{
			timer.Once(20, () =>
			{
				PrintError("--------------------------------------------\n" +
				"Внимание! Обнаружен вайп! Все изображения принудительно будут перезагружены! Не выключайте сервер и не перезагружайте плагин!\n" +
				"Внимание! Обнаружен вайп! Все изображения принудительно будут перезагружены! Не выключайте сервер и не перезагружайте плагин!\n" +
				"Внимание! Обнаружен вайп! Все изображения принудительно будут перезагружены! Не выключайте сервер и не перезагружайте плагин!\n" +
				"--------------------------------------------");
				
				if(_coroutine != null)
				{
					ServerMgr.Instance.StopCoroutine(_coroutine);
					_coroutine = null;
				}
				
				NextTick(() =>
				{
					if(_coroutine == null)
						_coroutine = ServerMgr.Instance.StartCoroutine(ReloadImage());
				});
			});
		}
		
		private void SettingGUI(BasePlayer player)
		{
			CuiHelper.DestroyUi(player, ".SettingGUI");
            CuiElementContainer container = new CuiElementContainer();
			
			container.Add(new CuiPanel
            {
                RectTransform = { AnchorMin = "0.273 0.32", AnchorMax = "0.73 0.57", OffsetMax = "0 0" },
                Image = { Color = "0 0 0 0" }
            }, ".SGUI", ".SettingGUI");

			container.Add(new CuiElement
            {
				Name = ".Settings",
                Parent = ".SettingGUI",
                Components = {
                    new CuiRawImageComponent { Png = (string) ImageLibrary.Call("GetImage", "QJ1ZV1G") },
                    new CuiRectTransformComponent { AnchorMin = "0 0", AnchorMax = "1 1", OffsetMax = "0 0" },
                }
            });
			
			container.Add(new CuiLabel
            {
                RectTransform = { AnchorMin = "0.05 0.755", AnchorMax = "0.3 0.9", OffsetMax = "0 0" },
                Text = { Text = "Настройки скинов", Align = TextAnchor.MiddleLeft, Font = "robotocondensed-regular.ttf", FontSize = 12, Color = "0.7507126 0.7507126 0.7507126 0.4" }
            }, ".Settings");

			container.Add(new CuiButton
            {
                RectTransform = { AnchorMin = "0.93 0.77", AnchorMax = "0.965 0.88", OffsetMax = "0 0" },
                Button = { Color = "0 0 0 0", Close = ".SettingGUI" },
                Text = { Text = "" }
            }, ".Settings");
			
			var player_data = StoredData[player.userID];
			
			Dictionary<string, bool> setting = new Dictionary<string, bool>
			{
				["inventory"] = player_data.ChangeSI,
				["entity"] = player_data.ChangeSE,
				["craft"] = player_data.ChangeSC,
				["clear"] = player_data.ChangeSCL,
				["give"] = player_data.ChangeSG,
				["friends"] = StoredDataFriends[player.userID]
			};
			
			float width = 0.478f, height = 0.2f, startxBox = 0.038f, startyBox = 0.725f - height, xmin = startxBox, ymin = startyBox;
			int z = 0;
			foreach(var s in setting) 
			{		
				var w = z == 1 ? width - 0.04f : z == 3 ? width - 0.04f : z == 5 ? width - 0.04f : width + 0.0059f;
			    container.Add(new CuiPanel
                {
                    RectTransform = { AnchorMin = xmin + " " + ymin, AnchorMax = (xmin + w) + " " + (ymin + height * 1), OffsetMin = "4 4", OffsetMax = "-4 -4" },
                    Image = { Color = "0 0 0 0" }
                }, ".Settings", ".SM");
				
				container.Add(new CuiButton
                {
                    RectTransform = { AnchorMin = "0.03 0.3", AnchorMax = "0.08 0.7", OffsetMax = "0 0" },
                    Button = { Color = "0.7507126 0.7507126 0.7507126 1", Sprite = s.Value ? config.MenuS.TButtonIcon : config.MenuS.FButtonIcon },
                    Text = { Text = "" }
                }, ".SM");				
				
			    container.Add(new CuiLabel
                {
                    RectTransform = { AnchorMin = "0.1 0", AnchorMax = "1 1", OffsetMax = "0 0" },
                    Text = { Text = lang.GetMessage(s.Key, this, player.UserIDString), Align = TextAnchor.MiddleLeft, Font = "robotocondensed-regular.ttf", FontSize = 10, Color = "0.7507126 0.7507126 0.7507126 1" }
                }, ".SM");

				container.Add(new CuiButton
                {
                    RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1", OffsetMax = "0 0" },
                    Button = { Color = "0 0 0 0", Command = $"skin_s {s.Key}" },
                    Text = { Text = "" }
                }, ".SM");	
				
				z++;
                xmin += w;
                if (xmin + width >= 1)
                {
                    xmin = startxBox;
                    ymin -= height + 0.002f;
                }
			}
			
			CuiHelper.AddUi(player, container);
		}  
		
	    private void Unload()
		{
			foreach(BasePlayer player in BasePlayer.activePlayerList)
			{
				SaveData(player);
				CuiHelper.DestroyUi(player, ".GUIS");
			}
			
			if(_coroutine != null) 
				ServerMgr.Instance.StopCoroutine(_coroutine); 
			
			Interface.Oxide.DataFileSystem.WriteObject("XDataSystem/XSkinMenu/Friends", StoredDataFriends);
		}
		
		public Dictionary<ulong, string> errorskins = new Dictionary<ulong, string>
		{
			[10180] = "hazmatsuit.spacesuit",
			[10201] = "hazmatsuit.nomadsuit",
			[10207] = "hazmatsuit.arcticsuit",
			[13070] = "rifle.ak.ice",
			[13068] = "snowmobiletomaha",
			[10189] = "door.hinged.industrial.a",
			[13050] = "skullspikes.candles",
			[13051] = "skullspikes.pumpkin",
			[13052] = "skull.trophy.jar",
			[13053] = "skull.trophy.jar2",
			[13054] = "skull.trophy.table",
			[13056] = "sled.xmas", 
			[13057] = "discofloor.largetiles",
			[10198] = "factorydoor",
			[10211] = "hazmatsuit.lumberjack",
			[10212] = "metal.facemask.hockey",
			[10213] = "torch.torch.skull",
			[10214] = "mace.baseballbat",
			[13075] = "concretehatchet",
			[13074] = "concretepickaxe",
			[13073] = "lumberjack.hatchet",
			[13072] = "lumberjack.pickaxe",
			[10215] = "chair.icethrone",
			[10217] = "metal.facemask.icemask",
			[10216] = "metal.plate.torso.icevest",
			//[] = "sofa.pattern" 
		};
				
		[PluginReference] private Plugin ImageLibrary;
		
		private void OnItemAddedToContainer(ItemContainer container, Item item)
		{
			if(item == null) return;
			if(container?.playerOwner != null)
			{
				BasePlayer player = container.playerOwner;
			
				if(player == null || player.IsNpc || !player.userID.IsSteamId() || player.IsSleeping()) return;
				if(config.Setting.ReskinConfig && !_items.ContainsKey(item.info.shortname)) return;
				if(!permission.UserHasPermission(player.UserIDString, "xskinmenu.give") || !StoredData.ContainsKey(player.userID) || !StoredData[player.userID].Skins.ContainsKey(item.info.shortname)) return;
				if(StoredData[player.userID].ChangeSG) 
					SetSkinCraftGive(player, item);
			}
		}
		
		private void OnPlayerRespawned(BasePlayer player)
		{
			if(config.Setting.ReskinRespawn)
				timer.Once(2, () => 
				{
					if(StoredData.ContainsKey(player.userID))
					{
						var items = player?.inventory?.AllItems();
					
						if(items != null)
							foreach(Item item in items)
								if(StoredData[player.userID].Skins.ContainsKey(item.info.shortname)) 
									SetSkinCraftGive(player, item);
					}
				});
		}
		
				
		 
        private void InitializeLang()
        {
            lang.RegisterMessages(new Dictionary<string, string>
            {
				["ERRORSKIN"] = "THE SKIN YOU CHOSE CAN BE CHANGED ONLY IN THE INVENTORY OR WHEN CRAFTING!",
				["CLEARALL"] = "RESET ALL SELECTED SKINS",
				["NOPERM"] = "No permissions!",
                ["weapon"] = "WEAPON",
                ["construction"] = "CONSTRUCTION",
                ["item"] = "ITEM",
                ["attire"] = "ATTIRE",
                ["tool"] = "TOOL",
                ["transport"] = "TRANSPORT",
                ["inventory"] = "CHANGE SKIN IN INVENTORY",
                ["entity"] = "CHANGE SKIN ON OBJECTS", 
                ["craft"] = "CHANGE SKIN WHEN CRAFTING",
                ["clear"] = "CHANGE SKIN WHEN DELETING",
                ["give"] = "SKIN CHANGE WHEN DROP IN INVENTORY",
				["friends"] = "ALLOW FRIENDS TO CHANGE YOUR SKINS"
            }, this);
		   		 		  						  	   		  	  			  	  			  	   		  		  
            lang.RegisterMessages(new Dictionary<string, string>
            {
                ["ERRORSKIN"] = "ВЫБРАННЫЙ ВАМИ СКИН МОЖНО ИЗМЕНИТЬ ТОЛЬКО В ИНВЕНТАРЕ ИЛИ ПРИ КРАФТЕ!",
                ["CLEARALL"] = "СБРОСИТЬ ВСЕ ВЫБРАННЫЕ СКИНЫ",
				["NOPERM"] = "Недостаточно прав!",
                ["weapon"] = "ОРУЖИЕ",
                ["construction"] = "СТРОИТЕЛЬСТВО",
                ["item"] = "ПРЕДМЕТЫ",
                ["attire"] = "ОДЕЖДА",
                ["tool"] = "ИНСТРУМЕНТЫ",
				["transport"] = "ТРАНСПОРТ",
                ["inventory"] = "ПОМЕНЯТЬ СКИН В ИНВЕНТАРЕ",
                ["entity"] = "ПОМЕНЯТЬ СКИН НА ПРЕДМЕТАХ",
                ["craft"] = "ПОМЕНЯТЬ СКИН ПРИ КРАФТЕ",
                ["clear"] = "ПОМЕНЯТЬ СКИН ПРИ УДАЛЕНИИ",
                ["give"] = "ПОМЕНЯТЬ СКИН ПРИ ПОПАДАНИИ В ИНВЕНТАРЬ",
                ["friends"] = "РАЗРЕШИТЬ ДРУЗЬЯМ ИЗМЕНЯТЬ ВАШИ СКИНЫ"
            }, this, "ru");
			
			lang.RegisterMessages(new Dictionary<string, string>
            {
                ["ERRORSKIN"] = "ВИБРАНИЙ ВАМИ СКІН МОЖНА ЗМІНИТИ ТІЛЬКИ В ІНВЕНТАРІ АБО ПРИ КРАФТІ!",
                ["CLEARALL"] = "СКИНУТИ ВСІ ОБРАНІ СКІНИ",
				["NOPERM"] = "Недостатньо прав!",
                ["weapon"] = "ЗБРОЯ",
                ["construction"] = "БУДІВНИЦТВО",
                ["item"] = "ПРЕДМЕТИ",
                ["attire"] = "ОДЯГ",
                ["tool"] = "ІНСТРУМЕНТИ",
				["transport"] = "ТРАНСПОРТ",
                ["inventory"] = "ЗМІНИТИ СКІН В ІНВЕНТАРІ",
                ["entity"] = "ЗМІНИТИ СКІН НА ПРЕДМЕТАХ",
                ["craft"] = "ЗМІНИТИ СКІН ПРИ КРАФТІ",
                ["clear"] = "ЗМІНИТИ СКІН ПРИ ВИДАЛЕННІ",
                ["give"] = "ЗМІНИТИ СКІН ПРИ ПОТРАПЛЯННІ В ІНВЕНТАР",
                ["friends"] = "ДОЗВОЛИТИ ДРУЗЯМ ЗМІНЮВАТИ ВАШІ СКІНИ"
            }, this, "uk");
			
            lang.RegisterMessages(new Dictionary<string, string>
            {
				["ERRORSKIN"] = "¡LA SKIN QUE ELIGIÓ SE PUEDE CAMBIAR SOLO EN EL INVENTARIO O AL CREAR!",
				["CLEARALL"] = "RESTABLECER TODAS LAS SKINS SELECCIONADAS",
				["NOPERM"] = "¡No tienes permisos!",
                ["weapon"] = "ARMAS",
                ["construction"] = "CONSTRUCCIÓN",
                ["item"] = "ITEMS",
                ["attire"] = "ATUENDOS",
                ["tool"] = "HERRAMIENTAS",
                ["transport"] = "TRANSPORTES",
                ["inventory"] = "CAMBIO DE SKIN EN INVENTARIO",
                ["entity"] = "CAMBIAR LA SKIN DE LOS OBJETOS", 
                ["craft"] = "CAMBIA DE SKIN AL CREAR",
                ["clear"] = "CAMBIAR LA SKIN AL ELIMINAR",
                ["give"] = "CAMBIO DE SKIN AL CAER EN EL INVENTARIO",
				["friends"] = "PERMITE QUE AMIGOS CAMBIEN TUS SKINS"
            }, this, "es-ES");
        }
		private Dictionary<ulong, bool> StoredDataFriends = new Dictionary<ulong, bool>();
		
		[ChatCommand("skinentity")]
		private void cmdSetSkinEntity(BasePlayer player)
		{
			if(!permission.UserHasPermission(player.UserIDString, "xskinmenu.entity"))
			{
				SendReply(player, lang.GetMessage("NOPERM", this, player.UserIDString));
				return;
			}
			
			if(StoredData[player.userID].ChangeSE)
			{
			    RaycastHit rhit;
 
			    if(!Physics.Raycast(player.eyes.HeadRay(), out rhit, 3f, LayerMask.GetMask("Deployed", "Construction", "Prevent Building"))) return;
			    var entity = rhit.GetEntity();
				
				if(entity == null) return;
				
				if(entity is BaseVehicle)
				{
					var vehicle = entity as BaseVehicle;
					var shortname = vehicle.ShortPrefabName;
					if(!StoredData[player.userID].Skins.ContainsKey(shortname)) return;
					
					SetSkinTransport(player, vehicle, shortname);
				}
				else
					if(entity.OwnerID == player.userID || player.currentTeam != 0 && player.Team.members.Contains(entity.OwnerID) && StoredDataFriends.ContainsKey(entity.OwnerID) && StoredDataFriends[entity.OwnerID])
						if(_shortnamesEntity.ContainsKey(entity.ShortPrefabName))
						{
							var shortname = _shortnamesEntity[entity.ShortPrefabName];
							if(!StoredData[player.userID].Skins.ContainsKey(shortname)) return;
					
							SetSkinEntity(player, entity, shortname);
						}
			}
		}
		protected override void LoadDefaultConfig() => config = SkinConfig.GetNewConfiguration();
		
				
		[ChatCommand("skin")]
		private void cmdOpenGUI(BasePlayer player) 
		{
			if(!permission.UserHasPermission(player.UserIDString, "xskinmenu.use"))
				SendReply(player, lang.GetMessage("NOPERM", this, player.UserIDString));
			else
			    GUI(player);		
		}
		public Dictionary<string, ulong> _items = new Dictionary<string, ulong>();
		
		[ConsoleCommand("skin_s")]
		private void ccmdSetting(ConsoleSystem.Arg args)
		{
			BasePlayer player = args.Player();
			
			if(!permission.UserHasPermission(player.UserIDString, "xskinmenu.setting")) 
			{
				SendReply(player, lang.GetMessage("NOPERM", this, player.UserIDString));
				return;
			}
			
			if(Cooldowns.ContainsKey(player))
                if(Cooldowns[player].Subtract(DateTime.Now).TotalSeconds >= 0) return;
			
			Effect x = new Effect("assets/bundled/prefabs/fx/notice/loot.drag.grab.fx.prefab", player, 0, new Vector3(), new Vector3());
			
			switch(args.Args[0])
			{
				case "open":
				{
					SettingGUI(player);
					break;
				}				
				case "inventory":
				{
					StoredData[player.userID].ChangeSI = !StoredData[player.userID].ChangeSI;
					SettingGUI(player);
					break;
				}				
				case "entity":
				{
					StoredData[player.userID].ChangeSE = !StoredData[player.userID].ChangeSE;
					SettingGUI(player);
					break;
				}				
				case "craft":
				{
					StoredData[player.userID].ChangeSC = !StoredData[player.userID].ChangeSC;
					SettingGUI(player);
					break;
				}				
				case "clear":
				{
					StoredData[player.userID].ChangeSCL = !StoredData[player.userID].ChangeSCL;
					SettingGUI(player);
					break;
				}				
				case "give":
				{
					StoredData[player.userID].ChangeSG = !StoredData[player.userID].ChangeSG;
					SettingGUI(player);
					break;
				}				
				case "friends":
				{
					StoredDataFriends[player.userID] = !StoredDataFriends[player.userID];
					SettingGUI(player);
					break;
				}
			}
			
			EffectNetwork.Send(x, player.Connection);
			Cooldowns[player] = DateTime.Now.AddSeconds(0.5f);
		}
		
				
		private Dictionary<BasePlayer, DateTime> Cooldowns = new Dictionary<BasePlayer, DateTime>();
		
		private Dictionary<ulong, Data> StoredData = new Dictionary<ulong, Data>();
		
		private void OnItemCraftFinished(ItemCraftTask task, Item item, ItemCrafter ItemCrafter)
		{
			if(task.skinID == 0)
			{
				BasePlayer player = ItemCrafter.owner;
				
				if(!StoredData[player.userID].Skins.ContainsKey(item.info.shortname) || !permission.UserHasPermission(player.UserIDString, "xskinmenu.craft")) return;
				if(!StoredData[player.userID].ChangeSG && StoredData[player.userID].ChangeSC) 
					SetSkinCraftGive(player, item);
			}
		}
		
				
				
		private void SendInfo(BasePlayer player, string message)
        {
            player.SendConsoleCommand("gametip.showgametip", message);
            timer.Once(5f, () => player.SendConsoleCommand("gametip.hidegametip"));
        }
		
		private Coroutine _coroutine;
		
				 
				
		private SkinConfig config;
		
		private void SetSkinCraftGive(BasePlayer player, Item item)
		{
			if(player == null || item == null) return;
			
			string shortname = item.info.shortname;
			ulong skin = StoredData[player.userID].Skins[shortname];
			
			if(config.Setting.ReskinConfig && !_items.ContainsKey(shortname)) return;
			if(item.skin == skin || config.Setting.Blacklist.Contains(item.skin)) return;
			
			if(errorskins.ContainsKey(skin))
			{
				item.UseItem();
				Item newitem = ItemManager.CreateByName(errorskins[skin]);
				newitem.condition = item.condition;
				newitem.maxCondition = item.maxCondition;
				
				if(item.contents != null)   
					foreach(var module in item.contents.itemList)
					{
						Item content = ItemManager.CreateByName(module.info.shortname, module.amount);
						content.condition = module.condition;
						content.maxCondition = module.maxCondition;
					
						content.MoveToContainer(newitem.contents);
					}	
					
				player.GiveItem(newitem);
			}
			else
		    {
                item.skin = skin; 
                item.MarkDirty();
		   		 		  						  	   		  	  			  	  			  	   		  		  
                BaseEntity entity = item.GetHeldEntity(); 
                if(entity != null)
                {
                    entity.skinID = skin;
                    entity.SendNetworkUpdate();
				}
			}
		}		
		public Dictionary<string, List<ulong>> StoredDataSkins = new Dictionary<string, List<ulong>>();
		
		private void LoadData(BasePlayer player)
		{
			ulong userID = player.userID;
			
			if(Interface.Oxide.DataFileSystem.ExistsDatafile($"XDataSystem/XSkinMenu/UserSettings/{userID}"))
			{
				var Data = Interface.Oxide.DataFileSystem.ReadObject<Data>($"XDataSystem/XSkinMenu/UserSettings/{userID}");
				
				StoredData[userID] = Data ?? DATA();
			}
			else
				StoredData[userID] = DATA();
			
			if(!StoredDataFriends.ContainsKey(userID))
                StoredDataFriends.Add(userID, config.PSetting.ChangeF);
			
			var list = StoredData[userID].Skins;
			
			foreach(var skin in StoredDataSkins)
			{
				string key = skin.Key;
				
				if(!list.ContainsKey(key))
					list.Add(key, _items.ContainsKey(key) ? _items[key] : 0);
			}
			
			StoredData[userID].Skins = list;
		}
		public Dictionary<string, int> _itemsId = new Dictionary<string, int>();
		
		private object OnItemSkinChange(int skinID, Item item, StorageContainer container, BasePlayer player)
		{
			if(config.Setting.RepairBench && config.Setting.Blacklist.Contains(item.skin))
			{
				EffectNetwork.Send(new Effect("assets/bundled/prefabs/fx/invite_notice.prefab", player, 0, new Vector3(), new Vector3()), player.Connection);
				
				return false;
			}
			else
				return null;
		}

        private class SkinConfig
        {
			
			internal class GeneralSetting 
			{
				[JsonProperty("Сгенерировать/Проверять и добавлять новые скины принятые разработчиками или сделаные для твич дропсов")] public bool UpdateSkins;
				[JsonProperty("Сгенерировать/Проверять и добавлять новые скины добавленные разработчиками [ К примеру скин на хазмат ]")] public bool UpdateSkinsFacepunch;
				[JsonProperty("Отображать кнопку для удаления всех скинов")] public bool ButtonClear;
				[JsonProperty("Распространять черный список скинов на ремонтный верстак")] public bool RepairBench;
				[JsonProperty("Включить кнопку для удаления скинов через UI")] public bool DeleteButton;
				[JsonProperty("Запретить менять скин предмета которого нет в конфиге")] public bool ReskinConfig;
				[JsonProperty("Изменять скины на предметы после респавна игрока")] public bool ReskinRespawn;
				[JsonProperty("Логи в консоль загрузки изображений")] public bool LogLoadIMG;
				[JsonProperty("Логи в консоль перезагрузки изображений")] public bool LogReloadIMG;
				[JsonProperty("Черный список скинов которые нельзя изменить. [ Например: огненные перчатки, огненный топор ]]")] public List<ulong> Blacklist = new List<ulong>();
			}
			[JsonProperty("Меню настроект")]
			public MenuSSetting MenuS = new MenuSSetting();
			[JsonProperty("Настройка категорий - [ Шортнейм предмета | Дефолтный скин предмета ]")]
            public Dictionary<string, Dictionary<string, ulong>> Category = new Dictionary<string, Dictionary<string, ulong>>();								
			[JsonProperty("Настройки GUI")]
            public GUISetting GUI = new GUISetting();			
			
			internal class PlayerSetting
			{
				[JsonProperty("Смена скинов в инвентаре")] public bool ChangeSI;
				[JsonProperty("Смена скинов на предметах")] public bool ChangeSE;
				[JsonProperty("Смена скинов при крафте")] public bool ChangeSC;
				[JsonProperty("Смена скинов в инвентаре после удаления")] public bool ChangeSCL;
				[JsonProperty("Смена скинов при попадании в инвентарь")] public bool ChangeSG;
				[JsonProperty("Разрешить друзьям изменять скины")] public bool ChangeF;
			}
			[JsonProperty("Общие настройки")]
			public GeneralSetting Setting = new GeneralSetting();			
			[JsonProperty("Настройки игрока по умолчанию")]
			public PlayerSetting PSetting = new PlayerSetting();
			
			internal class GUISetting
			{
				[JsonProperty("Информация плагина")] public string Info;
				[JsonProperty("Обновлять UI страницу после выбора скина")] public bool SkinUP;
				[JsonProperty("Обновлять UI страницу после удаления скина")] public bool DelSkinUP;
				[JsonProperty("Отображать выбранные скины на главной")] public bool MainSkin;
				[JsonProperty("Цвет активной категории")] public string ActiveColor;
				[JsonProperty("Цвет неактивной категории")] public string InactiveColor;
				[JsonProperty("Цвет блока выбранного скина")] public string ActiveBlockColor;			
			}
			     
			internal class MenuSSetting 
			{ 
				[JsonProperty("Иконка включенного параметра")] public string TButtonIcon;
				[JsonProperty("Иконка вылюченного параметра")] public string FButtonIcon;				
			}			
			
			[JsonProperty("Настройки API/изображений")]
			public APISetting API = new APISetting();
			internal class APISetting
			{
				[JsonProperty("Какое API использовать для загрузки изображений - [ True - обычные изображения из Steam Workshop (практически все существующие скины) | False - красивые изображения (все принятые скины разработчиками, а также половина из Steam Workshop) ]")] public bool APIOption;
				[JsonProperty("Отключить проверку на наличие изображения в дате ImageLibrary (изображение будет повторно загружаться после каждой загрузки/перезагрузки плагина) - Если вы не знаете/понимаете как работают изображения в ImageLibrary или у вас проблемы с изображениями, то полезно отключить проверку (true)")] public bool HasImage;
				[JsonProperty("Отображать изображения предметов и скинов методами игры. ( Установите false если хотите использовать API и плагин ImageLibrary )")] public bool GameIMG = true;
			}
			
			public static SkinConfig GetNewConfiguration()
            {
                return new SkinConfig
                {
					API = new APISetting
					{
						GameIMG = true,
						APIOption = false,
						HasImage = false
					},
					Setting = new GeneralSetting
					{
						UpdateSkins = true,
						UpdateSkinsFacepunch = false,
						ButtonClear = true,
						RepairBench = true,
						DeleteButton = true,
						ReskinConfig = false,
						ReskinRespawn = true,
						LogLoadIMG = true,
						LogReloadIMG = true,
						Blacklist = new List<ulong>
						{
							1742796979,
							841106268
						}
					},
					PSetting = new PlayerSetting
					{
						ChangeSI = true,
						ChangeSE = true,
						ChangeSC = true,
						ChangeSCL = true,
						ChangeSG = true,
						ChangeF = true
					},
					GUI = new GUISetting
					{
						Info = "Ахуенный плагин скилов всем советую, а кто не купит, тот гомосек",
						SkinUP = true,
						DelSkinUP = true,
						MainSkin = false,
						ActiveColor = "0.53 0.77 0.35 0.8",
						InactiveColor = "0 0 0 0",
						ActiveBlockColor = "0.53 0.77 0.35 0.8"
					},
					MenuS = new MenuSSetting
					{
						TButtonIcon = "assets/icons/check.png",
						FButtonIcon = "assets/icons/close.png"
					},
					Category = new Dictionary<string, Dictionary<string, ulong>>
					{
						["weapon"] = new Dictionary<string, ulong> { ["gun.water"] = 0, ["pistol.revolver"] = 0, ["pistol.semiauto"] = 0, ["pistol.python"] = 0, ["pistol.eoka"] = 0, ["shotgun.waterpipe"] = 0, ["shotgun.double"] = 0, ["shotgun.pump"] = 0, ["bow.hunting"] = 0, ["crossbow"] = 0, ["grenade.f1"] = 0, ["smg.2"] = 0, ["smg.thompson"] = 0, ["smg.mp5"] = 0, ["rifle.ak"] = 0, ["rifle.lr300"] = 0, ["lmg.m249"] = 0, ["rocket.launcher"] = 0, ["rifle.semiauto"] = 0, ["rifle.m39"] = 0, ["rifle.bolt"] = 0, ["rifle.l96"] = 0, ["longsword"] = 0, ["salvaged.sword"] = 0, ["mace"] = 0, ["knife.combat"] = 0, ["bone.club"] = 0, ["knife.bone"] = 0 },
						["construction"] = new Dictionary<string, ulong> { ["wall.frame.garagedoor"] = 0, ["door.double.hinged.toptier"] = 0, ["door.double.hinged.metal"] = 0, ["door.double.hinged.wood"] = 0, ["door.hinged.toptier"] = 0, ["door.hinged.metal"] = 0, ["door.hinged.wood"] = 0, ["barricade.concrete"] = 0, ["barricade.sandbags"] = 0 },
						["item"] = new Dictionary<string, ulong> { ["locker"] = 0, ["vending.machine"] = 0, ["fridge"] = 0, ["furnace"] = 0, ["table"] = 0, ["chair"] = 0, ["box.wooden.large"] = 0, ["box.wooden"] = 0, ["rug.bear"] = 0, ["rug"] = 0, ["sleepingbag"] = 0, ["water.purifier"] = 0, ["target.reactive"] = 0, ["sled"] = 0, ["discofloor"] = 0, ["paddlingpool"] = 0, ["innertube"] = 0, ["boogieboard"] = 0, ["beachtowel"] = 0, ["beachparasol"] = 0, ["beachchair"] = 0, ["skull.trophy"] = 0, ["skullspikes"] = 0, ["skylantern"] = 0 },
						["attire"] = new Dictionary<string, ulong> { ["metal.facemask"] = 0, ["coffeecan.helmet"] = 0, ["riot.helmet"] = 0, ["bucket.helmet"] = 0, ["deer.skull.mask"] = 0, ["twitch.headset"] = 0, ["sunglasses"] = 0, ["mask.balaclava"] = 0, ["burlap.headwrap"] = 0, ["hat.miner"] = 0, ["hat.beenie"] = 0, ["hat.boonie"] = 0, ["hat.cap"] = 0, ["mask.bandana"] = 0, ["metal.plate.torso"] = 0, ["roadsign.jacket"] = 0, ["roadsign.kilt"] = 0, ["roadsign.gloves"] = 0, ["burlap.gloves"] = 0, ["attire.hide.poncho"] = 0, ["jacket.snow"] = 0, ["jacket"] = 0, ["tshirt.long"] = 0, ["hazmatsuit"] = 0, ["hoodie"] = 0, ["shirt.collared"] = 0, ["tshirt"] = 0, ["burlap.shirt"] = 0, ["attire.hide.vest"] = 0, ["shirt.tanktop"] = 0, ["attire.hide.helterneck"] = 0, ["pants"] = 0, ["burlap.trousers"] = 0, ["pants.shorts"] = 0, ["attire.hide.pants"] = 0, ["attire.hide.skirt"] = 0, ["shoes.boots"] = 0, ["burlap.shoes"] = 0, ["attire.hide.boots"] = 0 },
						["tool"] = new Dictionary<string, ulong> { ["fun.guitar"] = 0, ["jackhammer"] = 0, ["icepick.salvaged"] = 0, ["pickaxe"] = 0, ["stone.pickaxe"] = 0, ["rock"] = 0, ["hatchet"] = 0, ["stonehatchet"] = 0, ["explosive.satchel"] = 0, ["hammer"] = 0, ["torch"] = 0 },
						["transport"] = new Dictionary<string, ulong> { ["snowmobile"] = 0 }
					}
				};
			}
        }
		
		[ConsoleCommand("skinimage_stop")]
		private void ccmdIMGStop(ConsoleSystem.Arg args)
		{
			if(args.Player() == null || args.Player().IsAdmin)
			{
				if(config.API.GameIMG)
				{
					PrintError("COMMAND_OFF");
					return;
				}
				
				if(_coroutine == null)
					PrintWarning("На данный момент нет активной загрузки/перезагрузки изображений!");
				else
				{
					ServerMgr.Instance.StopCoroutine(_coroutine);
					_coroutine = null;
					
					PrintWarning("Текущая загрузка/перезагрузка изображений прервана!");
				}
			}
		}
        protected override void SaveConfig() => Config.WriteObject(config);
		
		private Data DATA()
		{
			Data data = new Data();
			
			data.ChangeSI = config.PSetting.ChangeSI;
			data.ChangeSE = config.PSetting.ChangeSE;
			data.ChangeSC = config.PSetting.ChangeSC;
			data.ChangeSCL = config.PSetting.ChangeSCL;
			data.ChangeSG = config.PSetting.ChangeSG;
			
			return data;
		}
		
				
				
		private void GUI(BasePlayer player)
		{
			CuiElementContainer container = new CuiElementContainer(); 
			if(!permission.UserHasPermission(player.UserIDString, "xskinmenu.use"))
			{
				CuiHelper.DestroyUi(player, ".SGUI");
				container.Add(new CuiElement
            	{
                	Name = ".SGUI",
                	Parent = ".Mains",
                	Components = 
                	{
                    	new CuiRawImageComponent { Png = (string)ImageLibrary.Call("GetImage", "HZAn2Et") },
                    	new CuiRectTransformComponent { AnchorMin = "-0.315 -0.27", AnchorMax = "1.3 1.275", OffsetMax = "0 0" },
                	}
            	});

            	container.Add(new CuiButton
            	{
                	RectTransform = { AnchorMin = "0.8 0.804", AnchorMax = "0.817 0.832" },
                	Button = { Close = "Menu_UI", Color = "0 0 0 0" },
                	Text = { Text = "" }
            	}, ".SGUI");	

				container.Add(new CuiButton
            	{
                	RectTransform = { AnchorMin = "0.78 0.805", AnchorMax = "0.795 0.833", OffsetMax = "0 0" },
                	Button = { Color = "0 0 0 0", Command = "skindesc" },
                	Text = { Text = "?", Color = "1 1 1 0.7", Align = TextAnchor.MiddleCenter, FontSize = 16, Font = "robotocondensed-regular.ttf" }
            	}, ".SGUI");		
			
				container.Add(new CuiButton
            	{
                	RectTransform = { AnchorMin = "0.185 0.168", AnchorMax = "0.818 0.8", OffsetMax = "0 0" },
                	Button = { Command = "skin_s open", Color = "0 0 0 0.9" },
                	Text = { Text = "<b><size=20>НЕДОСТАТОЧНО ПРАВ</size></b>\nКупите разрешение в донат магазине!", Align = TextAnchor.MiddleCenter, Font = "robotocondensed-regular.ttf", FontSize = 14 }
            	}, ".SGUI");

				CuiHelper.AddUi(player, container);
				return;
			}

			container.Add(new CuiElement
            {
                Name = ".SGUI",
                Parent = ".Mains",
                Components = 
                {
                    new CuiRawImageComponent { Png = (string)ImageLibrary.Call("GetImage", "HZAn2Et") },
                    new CuiRectTransformComponent { AnchorMin = "-0.315 -0.27", AnchorMax = "1.3 1.275", OffsetMax = "0 0" },
                }
            });

            container.Add(new CuiButton
            {
                RectTransform = { AnchorMin = "0.8 0.804", AnchorMax = "0.817 0.832" },
                Button = { Close = "Menu_UI", Color = "0 0 0 0" },
                Text = { Text = "" }
            }, ".SGUI");	

			container.Add(new CuiButton
            {
                RectTransform = { AnchorMin = "0.78 0.805", AnchorMax = "0.795 0.833", OffsetMax = "0 0" },
                Button = { Color = "0 0 0 0", Command = "skindesc" },
                Text = { Text = "?", Color = "1 1 1 0.7", Align = TextAnchor.MiddleCenter, FontSize = 16, Font = "robotocondensed-regular.ttf" }
            }, ".SGUI");		
			
			container.Add(new CuiButton
            {
                RectTransform = { AnchorMin = "0.671 0.184", AnchorMax = "0.741 0.223", OffsetMax = "0 0" },
                Button = { Command = "skin_s open", Color = "0 0 0 0" },
                Text = { Text = "      Настройки", Align = TextAnchor.MiddleCenter, Font = "robotocondensed-regular.ttf", FontSize = 11 }
            }, ".SGUI");
			
			CuiHelper.AddUi(player, container);
			
			CategoryGUI(player);
			if(config.Category.Count != 0) ItemGUI(player, config.Category.ElementAt(0).Key);
		}

		[ConsoleCommand("skindesc")]
        void DescUI(ConsoleSystem.Arg args) {
            var player = args.Player();
            CuiHelper.DestroyUi(player, ".SGUI" + ".Description");
            var container = new CuiElementContainer();

            container.Add(new CuiElement
            {
                Name = ".SGUI" + ".Description",
                Parent = ".SGUI",
                Components = {
                    new CuiRawImageComponent { Png = (string)ImageLibrary.Call("GetImage", "fonDescription") },
                    new CuiRectTransformComponent { AnchorMin = $"0.58 0.6", AnchorMax = $"0.8 0.8" },
                }
            });

            container.Add(new CuiLabel
            {
                RectTransform = { AnchorMin = "0.05 0.8", AnchorMax = "0.9 1" },
                Text = { Text = $"Описание скинов", Color = "1 1 1 0.65",FontSize = 14, Font = "robotocondensed-bold.ttf", Align = TextAnchor.MiddleLeft }
            }, ".SGUI" + ".Description");

            container.Add(new CuiLabel
            {
                RectTransform = { AnchorMin = "0.05 0", AnchorMax = "1 0.7" },
                Text = { Text = $"{config.GUI.Info}", Color = "1 1 1 0.65",FontSize = 12, Font = "robotocondensed-bold.ttf", Align = TextAnchor.UpperLeft }
            }, ".SGUI" + ".Description");

            container.Add(new CuiButton
            {
                RectTransform = { AnchorMin = "0.9 0.82", AnchorMax = "0.98 0.98" },
                Button = { Close = ".SGUI" + ".Description", Color = "1 1 1 0" },
                Text = { Text = "" }
            }, ".SGUI" + ".Description");

            CuiHelper.AddUi(player, container);
        }
		
				
				
	    internal class Data
		{
			[JsonProperty("Смена скинов в инвентаре")] public bool ChangeSI;
			[JsonProperty("Смена скинов на предметах")] public bool ChangeSE;
			[JsonProperty("Смена скинов при крафте")] public bool ChangeSC;
			[JsonProperty("Смена скинов в инвентаре после удаления")] public bool ChangeSCL;
			[JsonProperty("Смена скинов при попадании в инвентарь")] public bool ChangeSG;
			[JsonProperty("Скины")] public Dictionary<string, ulong> Skins = new Dictionary<string, ulong>();
		}
		
		private void GenerateItems()
		{
			if(config.Setting.UpdateSkins)
				foreach(var pair in Rust.Workshop.Approved.All)
				{
					if(pair.Value == null || pair.Value.Skinnable == null) continue;
				
					ulong skinID = pair.Value.WorkshopdId; 
				
					string item = pair.Value.Skinnable.ItemName;
					if(item.Contains("lr300")) item = "rifle.lr300";
				
					if(!StoredDataSkins.ContainsKey(item))
						StoredDataSkins.Add(item, new List<ulong>());
				
					if(!StoredDataSkins[item].Contains(skinID))
						StoredDataSkins[item].Add(skinID);
				}
			
			if(config.Setting.UpdateSkinsFacepunch)
				foreach(ItemDefinition item in ItemManager.GetItemDefinitions())
				{
					foreach(var skinID in ItemSkinDirectory.ForItem(item).Select(skin => Convert.ToUInt64(skin.id)))
					{
						if(!StoredDataSkins.ContainsKey(item.shortname))
						StoredDataSkins.Add(item.shortname, new List<ulong>());
				
						if(!StoredDataSkins[item.shortname].Contains(skinID))
						StoredDataSkins[item.shortname].Add(skinID);
					}
				}	
			
			Interface.Oxide.DataFileSystem.WriteObject("XDataSystem/XSkinMenu/Skins", StoredDataSkins);
		}
		
		private void SetSkinEntity(BasePlayer player, BaseEntity entity, string shortname)
		{
			ulong skin = StoredData[player.userID].Skins[shortname];
			
			if(skin == entity.skinID || skin == 0) return;
			if(errorskins.ContainsKey(skin))
			{
				SendInfo(player, lang.GetMessage("ERRORSKIN", this, player.UserIDString));
				return;
			}
			
			entity.skinID = skin;
            entity.SendNetworkUpdate();
			Effect.server.Run("assets/prefabs/deployable/repair bench/effects/skinchange_spraypaint.prefab", entity.transform.localPosition);
		}

        	}
}

// --- End of file: TPSkinMenu.cs ---
// --- Next file ---

// --- GitHub Source URL: https://github.com/RustyyTown/plugins/blob/main/IQCases.cs ---
// --- Original Local Path: IQCases.cs ---

using System;
using System.Collections;
using System.Collections.Generic;
using ConVar;
using Newtonsoft.Json;
using Oxide.Core.Plugins;
using Oxide.Game.Rust.Cui;
using UnityEngine;
using System.Linq;
using Oxide.Core;
using System.Text;

namespace Oxide.Plugins
{
    [Info("IQCases", "SkuliDropek", "0.1.2")]
    [Description("Кейсы на ваш сервер | Cases to your server")]
    class IQCases : RustPlugin
    {
        /// <summary>
        /// Обновление 0.1.2
        /// - Поправил визуальный рандом предметов во время прокрутки кейса
        /// - Поправил выдачу кейса за время игры
        /// </summary>

        #region Reference
        [PluginReference] Plugin IQChat, IQEconomic, ImageLibrary, IQRankSystem;

        #region IQChat
        public void SendChat(string Message, BasePlayer player, Chat.ChatChannel channel = Chat.ChatChannel.Global)
        {
            var Chat = config.ReferenceSettings.ChatSettings;
            if (IQChat)
                if (Chat.UIAlertUse)
                    IQChat?.Call("API_ALERT_PLAYER_UI", player, Message);
                else IQChat?.Call("API_ALERT_PLAYER", player, Message, Chat.CustomPrefix, Chat.CustomAvatar);
            else player.SendConsoleCommand("chat.add", channel, 0, Message);
        }
        #endregion

        #region ImageLibrary
        private String GetImage(String fileName, UInt64 skin = 0)
        {
            var imageId = (String)plugins.Find("ImageLibrary").CallHook("GetImage", fileName, skin);
            if (!string.IsNullOrEmpty(imageId))
                return imageId;
            return String.Empty;
        }
        public Boolean AddImage(String url, String shortname, UInt64 skin = 0) => (Boolean)ImageLibrary?.Call("AddImage", url, shortname, skin);
        public void SendImage(BasePlayer player, String imageName, UInt64 imageId = 0) => ImageLibrary?.Call("SendImage", player, imageName, imageId);
        public Boolean HasImage(String imageName) => (Boolean)ImageLibrary?.Call("HasImage", imageName);

        public string ImageGetItems(string CaseKey, int ItemKey)
        {
            var Case = config.CaseList[CaseKey];
            var Item = Case.ItemSetting[ItemKey];
            string ReturnImage = Item.CommandUse ? Item.Command : $"{Item.Shortname}_256px_case";
            return ReturnImage;
        }
        public string ImageGetItemsInventory(ulong userID,ItemSettings itemSettings)
        {
            string ReturnImage = itemSettings.CommandUse ? itemSettings.Command : $"{itemSettings.Shortname}_256px_case";
            return ReturnImage;
        }
        private IEnumerator DownloadImages()
        {
            PrintError("AddImages SkyPlugins.ru...");

            var Image = config.CaseList;
            foreach (var Img in Image)
                foreach (var ShortnameList in Img.Value.ItemSetting.Where(x => !x.CommandUse && !String.IsNullOrWhiteSpace(x.Shortname)))
                {
                    String URL = $"http://api.skyplugins.ru/api/getimage/{ShortnameList.Shortname}/256";
                    String KeyName = $"{ShortnameList.Shortname}_256px_case";
                    if (!HasImage(KeyName))
                        AddImage(URL, KeyName);

                    yield return new WaitForSeconds(0.04f);
                }
            yield return new WaitForSeconds(0.04f);

            PrintError("AddImages SkyPlugins.ru - completed..");
        }

        void AddAllImage()
        {
            var Image = config.CaseList;
            foreach (var Img in Image)
            {
                if (!HasImage(Img.Key))
                    AddImage(Img.Value.URLCase, Img.Key);

                foreach (var Item in Img.Value.ItemSetting)
                    if (!HasImage(Item.Command))
                        AddImage(Item.URLCommand, Item.Command);
            }
            if (!HasImage("LEFT_ARROW"))
                AddImage("https://i.imgur.com/s3FmUnW.png", "LEFT_ARROW");
            if (!HasImage("RIGHT_ARROW"))
                AddImage("https://i.imgur.com/FMeWZWa.png", "RIGHT_ARROW");
        }
        void CachedImage(BasePlayer player)
        {
            var Image = config.CaseList;
            foreach (var Img in Image)
            {
                SendImage(player, Img.Key);
                foreach (var Item in Img.Value.ItemSetting)
                    SendImage(player, Item.Command);
            }
            SendImage(player,"LEFT_ARROW");
            SendImage(player,"RIGHT_ARROW");
        }
        #endregion

        #region IQEconomic
        int GetBalance(ulong userID) => (int)IQEconomic?.Call("API_GET_BALANCE", userID);
        bool IsRemovedBalance(ulong userID, int Amount) => (bool)IQEconomic?.Call("API_IS_REMOVED_BALANCE", userID, Amount);
        void SetBalance(ulong userID, int Balance) => IQEconomic?.Call("API_SET_BALANCE", userID, Balance);
        void RemoveBalance(ulong userID, int Balance) => IQEconomic?.Call("API_REMOVE_BALANCE", userID, Balance);
        #endregion

        #region IQRankSystem
        bool IsRank(ulong userID, string Key)
        {
            if (!IQRankSystem) return false;
            return (bool)IQRankSystem?.Call("API_GET_AVAILABILITY_RANK_USER", userID, Key);
        }
        string GetRankName(string Key)
        {
            string Rank = string.Empty;
            if (!IQRankSystem) return Rank;
            return (string)IQRankSystem?.Call("API_GET_RANK_NAME", Key); 
        }
        #endregion

        #endregion

        #region Varibles
        public Dictionary<ulong, List<ItemSettings>> VariblesPrize = new Dictionary<ulong, List<ItemSettings>>();
        #endregion

        #region Classes
        public class ItemSettings
        {
            [JsonProperty("Команда - ture | Вещь - false | Command - ture | Item - false")]
            public bool CommandUse;
            [JsonProperty("Команда | Command")]
            public string Command;
            [JsonProperty("Иконка для команды | Icon for the team")]
            public string URLCommand;
            [JsonProperty("Shortname предмета | Item shortname")]
            public string Shortname;
            [JsonProperty("Минимальное количество для предмета | Minimum quantity for an item")]
            public int MinAmount;
            [JsonProperty("Максимальное количество для предмета | Maximum quantity for an item")]
            public int MaxAmount;
            [JsonProperty("SkinID предмета | SkinID item")]
            public ulong SkinID;
        }
        #endregion

        #region Configuration
        private static Configuration config = new Configuration();
        private class Configuration
        {
            [JsonProperty("Настройки плагина | Plugin Settings")]
            public GeneralSettings GeneralSetting = new GeneralSettings();
            [JsonProperty("Настройки кейсов [Каждый кейс настраивается индивидуально,вы можете использовать функционал как вашей душе угодно!] | Case settings [Each case is configured individually, you can use the functionality as your heart desires!]")]
            public Dictionary<string, Cases> CaseList = new Dictionary<string, Cases>();
            [JsonProperty("Настройки совместной работы с другими плагинами | Settings for collaboration with other plugins")]
            public ReferenceSetting ReferenceSettings = new ReferenceSetting();
            internal class GeneralSettings
            {
                [JsonProperty("Включить автоматическую очистку инвентаря в WIPE | Enable automatic inventory cleaning in WIPE")]
                public bool InventoryClearWipe;
            }

            internal class Cases
            {
                [JsonProperty("Права для открытия кейса(если давать доступ всем - оставляйте поле пустым) | Rights to open the case (if you give access to everyone, leave the field empty)")]
                public string PermissionOpenCase;
                [JsonProperty("Название кейса | Case name")]
                public string DisplayName;
                [JsonProperty("Ссылка на иконку кейса | Link to the case icon")]
                public string URLCase;
                [JsonProperty("IQRankSystem : С каким рангом будет доступен данный кейс(Если не нужно,оставляйте строку пустой) | IQRankSystem : With what rank will this case be available (if not necessary, leave the line empty)")]
                public string IQRankKey;
                [JsonProperty("Цена на кейс(IQEconomic) | Case price(IQEconomic)")]
                public int IQEconomicPrice;
                [JsonProperty("IQEconomicUse : Разрешить покупку кейса | IQEconomicUse : Allow case purchase")]
                public bool IQEconomicUse;
                [JsonProperty("IQEconomicUse : Разрешить продажу кейса | IQEconomicUse : Allow case sale")]
                public bool IQEconomicUseSell;
                [JsonProperty("Сколько монет дадут при продаже кейса(IQEconomic) | How many coins will be given when selling the case(IQEconomic)")]
                public int IQEconomicPriceSell;
                [JsonProperty("Выдавать кейс за время | Give case for time online")]
                public bool GiveCaseFromPlaying;
                [JsonProperty("Через сколько секунд выдавать кейс | After how many seconds to issue the case")]
                public int PlayingNormalFromGive;
                [JsonProperty("Включить выпадение кейсов из ящиков с шансом | Enable the drop of cases from the boxes with a chance")]
                public bool UseDropList;
                [JsonProperty("Выпадение кейсов и шанс [ящик] = шанс | Drop cases and chance [box] = chance")]
                public Dictionary<string, int> CasesDropList = new Dictionary<string, int>();
                [JsonProperty("Включить возможность выбрать награду(1 из 3) - true / Выключить возможность выбрать награду(будет один приз) - false | Enable the ability to select a reward (1 of 3) - true / Disable the option to choose a reward (there will be one prize) - false")]
                public bool VariblesPrize;
                [JsonProperty("Предметы , которые будут выпадать из кейсов | Items that will fall out of cases")]
                public List<ItemSettings> ItemSetting = new List<ItemSettings>();  
            }

            internal class ReferenceSetting
            {
                [JsonProperty("IQChat : Настройки чата | IQChat : Chat Settings")]
                public ChatSetting ChatSettings = new ChatSetting();
                
                internal class ChatSetting
                {
                    [JsonProperty("IQChat : Кастомный префикс в чате | IQChat : Custom prefix in the chat")]
                    public string CustomPrefix;
                    [JsonProperty("IQChat : Кастомный аватар в чате(Если требуется) | IQChat : Custom avatar in the chat (if required)")]
                    public string CustomAvatar;
                    [JsonProperty("IQChat : Использовать UI уведомления | IQChat : Use UI notifications")]
                    public bool UIAlertUse;
                }
            }

            public static Configuration GetNewConfiguration()
            {
                return new Configuration
                {
                    GeneralSetting = new GeneralSettings
                    {
                        InventoryClearWipe = true,
                    },
                    CaseList = new Dictionary<string, Cases>
                    {
                        ["freecase"] = new Cases
                        {
                            DisplayName = "Халява | Freee",
                            PermissionOpenCase = "",
                            IQRankKey = "",
                            IQEconomicUseSell = false,
                            IQEconomicPriceSell = 0,
                            IQEconomicUse = true,
                            IQEconomicPrice = 10,
                            GiveCaseFromPlaying = true,
                            PlayingNormalFromGive = 60,
                            URLCase = "https://i.imgur.com/N93o4D2.png",
                            UseDropList = true,
                            CasesDropList = new Dictionary<string, int> 
                            {
                               ["crate_normal"] = 80, 
                               ["crate_basic"] = 10, 
                            },
                            VariblesPrize = true,
                            ItemSetting = new List<ItemSettings>
                            {
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 10,
                                    MaxAmount = 1000,
                                    Shortname = "wood",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 10,
                                    MaxAmount = 1000,
                                    Shortname = "wood",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = true,
                                    Command = "say Test",
                                    MinAmount = 3,
                                    MaxAmount = 3,
                                    Shortname = "wood",
                                    SkinID = 0,
                                    URLCommand = "https://i.imgur.com/N93o4D2.png",
                                },
                                   new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 10,
                                    MaxAmount = 1000,
                                    Shortname = "wood",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 10,
                                    MaxAmount = 1000,
                                    Shortname = "wood",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = true,
                                    Command = "say Test",
                                    MinAmount = 3,
                                    MaxAmount = 3,
                                    Shortname = "wood",
                                    SkinID = 0,
                                    URLCommand = "https://i.imgur.com/N93o4D2.png",
                                },
                            },
                        },
                        ["resource"] = new Cases
                        {
                            DisplayName = "Ресурсы | Resource",
                            IQRankKey = "",
                            PermissionOpenCase = "iqcases.resource",
                            IQEconomicUseSell = true,
                            IQEconomicPriceSell = 5,
                            IQEconomicUse = true,
                            IQEconomicPrice = 10,
                            GiveCaseFromPlaying = false,
                            PlayingNormalFromGive = 60,
                            URLCase = "https://i.imgur.com/TLYnMTo.png",
                            UseDropList = true,
                            CasesDropList = new Dictionary<string, int>
                            {
                                ["crate_normal"] = 80,
                                ["crate_basic"] = 10,
                            },
                            VariblesPrize = false,
                            ItemSetting = new List<ItemSettings>
                            {
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 10,
                                    MaxAmount = 1000,
                                    Shortname = "wood",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 10,
                                    MaxAmount = 99999,
                                    Shortname = "wood",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 10,
                                    MaxAmount = 1000,
                                    Shortname = "wood",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 1,
                                    MaxAmount = 3,
                                    Shortname = "rifle.lr300",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 1,
                                    MaxAmount = 3,
                                    Shortname = "rifle.lr300",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 1,
                                    MaxAmount = 3,
                                    Shortname = "rifle.lr300",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 1,
                                    MaxAmount = 3,
                                    Shortname = "rifle.lr300",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 1,
                                    MaxAmount = 3,
                                    Shortname = "rifle.lr300",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 1,
                                    MaxAmount = 3,
                                    Shortname = "rifle.lr300",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                            },
                        },
                        ["raider"] = new Cases
                        {
                            DisplayName = "Штурмовик | Raider",
                            IQRankKey = "",
                            PermissionOpenCase = "iqcases.raider",
                            IQEconomicUseSell = true,
                            IQEconomicPriceSell = 5,
                            IQEconomicUse = false,
                            IQEconomicPrice = 10,
                            GiveCaseFromPlaying = false,
                            PlayingNormalFromGive = 60,
                            URLCase = "https://i.imgur.com/c0rRlwY.png",
                            UseDropList = false,
                            CasesDropList = new Dictionary<string, int>
                            {
                                ["crate_normal"] = 80,
                                ["crate_basic"] = 10,
                            },
                            VariblesPrize = true,
                            ItemSetting = new List<ItemSettings>
                            {
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 1,
                                    MaxAmount = 3,
                                    Shortname = "rifle.lr300",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 1,
                                    MaxAmount = 3,
                                    Shortname = "rifle.lr300",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 1,
                                    MaxAmount = 3,
                                    Shortname = "rifle.lr300",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 1,
                                    MaxAmount = 3,
                                    Shortname = "rifle.lr300",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 1,
                                    MaxAmount = 3,
                                    Shortname = "rifle.lr300",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 1,
                                    MaxAmount = 3,
                                    Shortname = "rifle.lr300",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 1,
                                    MaxAmount = 3,
                                    Shortname = "rifle.lr300",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 1,
                                    MaxAmount = 3,
                                    Shortname = "rifle.lr300",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 1,
                                    MaxAmount = 3,
                                    Shortname = "rifle.lr300",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                            },
                        },
                        ["components"] = new Cases
                        {
                            DisplayName = "Компоненты | Components",
                            IQRankKey = "",
                            PermissionOpenCase = "iqcases.component",
                            IQEconomicUseSell = true,
                            IQEconomicPriceSell = 5,
                            IQEconomicUse = true,
                            IQEconomicPrice = 10,
                            GiveCaseFromPlaying = false,
                            PlayingNormalFromGive = 60,
                            URLCase = "https://i.imgur.com/HULzBVP.png",
                            UseDropList = false,
                            CasesDropList = new Dictionary<string, int>
                            {
                                ["crate_normal"] = 80,
                                ["crate_basic"] = 10,
                            },
                            VariblesPrize = true,
                            ItemSetting = new List<ItemSettings>
                            {
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 10,
                                    MaxAmount = 1000,
                                    Shortname = "scrap",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 10,
                                    MaxAmount = 1000,
                                    Shortname = "scrap",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 10,
                                    MaxAmount = 1000,
                                    Shortname = "scrap",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                            },
                        },
                        ["raider"] = new Cases
                        {
                            DisplayName = "Рейдер | Raiders",
                            IQRankKey = "",
                            PermissionOpenCase = "iqcases.raider",
                            IQEconomicUseSell = true,
                            IQEconomicPriceSell = 5,
                            IQEconomicUse = true,
                            IQEconomicPrice = 10,
                            GiveCaseFromPlaying = false,
                            PlayingNormalFromGive = 60,
                            URLCase = "https://i.imgur.com/uBTdXnC.png",
                            UseDropList = false,
                            CasesDropList = new Dictionary<string, int>
                            {
                                ["crate_normal"] = 80,
                                ["crate_basic"] = 10,
                            },
                            VariblesPrize = true,
                            ItemSetting = new List<ItemSettings>
                            {
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 10,
                                    MaxAmount = 1000,
                                    Shortname = "explosive.timed",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 10,
                                    MaxAmount = 1000,
                                    Shortname = "explosive.timed",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 10,
                                    MaxAmount = 1000,
                                    Shortname = "explosive.timed",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 10,
                                    MaxAmount = 1000,
                                    Shortname = "explosive.timed",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 10,
                                    MaxAmount = 1000,
                                    Shortname = "explosive.timed",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 10,
                                    MaxAmount = 1000,
                                    Shortname = "explosive.timed",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                                new ItemSettings
                                {
                                    CommandUse = false,
                                    Command = "",
                                    MinAmount = 10,
                                    MaxAmount = 1000,
                                    Shortname = "explosive.timed",
                                    SkinID = 0,
                                    URLCommand = "",
                                },
                            },
                        },
                    },
                    ReferenceSettings = new ReferenceSetting
                    {
                        ChatSettings = new ReferenceSetting.ChatSetting
                        {
                            CustomAvatar = "",
                            CustomPrefix = "[IQCASES]\n",
                            UIAlertUse = false,
                        },
                    }

                };
            }
        }

        protected override void LoadConfig()
        {
            base.LoadConfig();
            try
            {
                config = Config.ReadObject<Configuration>();
                if (config == null) LoadDefaultConfig();
            }
            catch
            {
                PrintWarning("Ошибка #49" + $"чтения конфигурации 'oxide/config/{Name}', создаём новую конфигурацию! #33 | Error #49" + $" of reading the configuration 'oxide/config/{Name}', creating a new configuration!");
                LoadDefaultConfig();
            }
            NextTick(SaveConfig);
        }

        protected override void LoadDefaultConfig() => config = Configuration.GetNewConfiguration();
        protected override void SaveConfig() => Config.WriteObject(config);
        #endregion

        #region Data
        [JsonProperty("Дата времени игроков | Players' time date")]
        public Dictionary<ulong, Dictionary<string, int>> TrackerTimePlayer = new Dictionary<ulong, Dictionary<string, int>>();
        [JsonProperty("Дата кейсов игроков | Date of player cases")]
        public Dictionary<ulong, Dictionary<string, int>> DataPlayer = new Dictionary<ulong, Dictionary<string, int>>();
        [JsonProperty("Инвентарь игроков | Player Inventory")]
        public Dictionary<ulong, List<Inventory>> InventoryPlayer = new Dictionary<ulong, List<Inventory>>();

        public class Inventory
        {
            [JsonProperty("Информация | Information")]
            public ItemSettings ItemClass = new ItemSettings();
            [JsonProperty("Количество | Amount")]
            public int Amount;
        }
        
        void ReadData()
        {
            DataPlayer = Oxide.Core.Interface.Oxide.DataFileSystem.ReadObject<Dictionary<ulong, Dictionary<string, int>>>("IQCases/IQCasesUser");
            InventoryPlayer = Oxide.Core.Interface.Oxide.DataFileSystem.ReadObject<Dictionary<ulong, List<Inventory>>>("IQCases/IQInventoryUser");
            TrackerTimePlayer = Oxide.Core.Interface.Oxide.DataFileSystem.ReadObject<Dictionary<ulong, Dictionary<string, int>>>("IQCases/TrackerTimePlayer");
        }
        void WriteData() => timer.Every(60f, () =>
        {
            Oxide.Core.Interface.Oxide.DataFileSystem.WriteObject("IQCases/IQCasesUser", DataPlayer);
            Oxide.Core.Interface.Oxide.DataFileSystem.WriteObject("IQCases/IQInventoryUser", InventoryPlayer);
            Oxide.Core.Interface.Oxide.DataFileSystem.WriteObject("IQCases/TrackerTimePlayer", TrackerTimePlayer);
        });
        void RegisteredDataUser(BasePlayer player)
        {
            if (!DataPlayer.ContainsKey(player.userID))
                DataPlayer.Add(player.userID, new Dictionary<string, int> { });
            if (!InventoryPlayer.ContainsKey(player.userID))
                InventoryPlayer.Add(player.userID,new List<Inventory> { });
            if (!TrackerTimePlayer.ContainsKey(player.userID))
                TrackerTimePlayer.Add(player.userID, new Dictionary<string, int> { });
        }
        #endregion

        #region Hooks
        private void Init()
        {
            ReadData();

            foreach (var Case in config.CaseList.Where(Case => !String.IsNullOrWhiteSpace(Case.Value.PermissionOpenCase) && !permission.PermissionExists(Case.Value.PermissionOpenCase, this)))
                permission.RegisterPermission(Case.Value.PermissionOpenCase, this);
        }
        private void OnServerInitialized()
        {
            AddAllImage();
            foreach (var p in BasePlayer.activePlayerList)
                OnPlayerConnected(p);

            ServerMgr.Instance.StartCoroutine(DownloadImages());

            timer.Every(300f, () =>
            {
                foreach (var p in BasePlayer.activePlayerList)
                    TrackerTime(p);
            });
        }
        void OnPlayerConnected(BasePlayer player)
        {
            RegisteredDataUser(player);
            CachedImage(player);
        }
        void Unload()
        {
            Oxide.Core.Interface.Oxide.DataFileSystem.WriteObject("IQCases/IQCasesUser", DataPlayer);
            Oxide.Core.Interface.Oxide.DataFileSystem.WriteObject("IQCases/IQInventoryUser", InventoryPlayer);
            Oxide.Core.Interface.Oxide.DataFileSystem.WriteObject("IQCases/TrackerTimePlayer", TrackerTimePlayer);

            ServerMgr.Instance.StopCoroutine(DownloadImages());
        }
        void OnNewSave(string filename)
        {
            if (config.GeneralSetting.InventoryClearWipe)
                if (InventoryPlayer != null)
                {
                    InventoryPlayer.Clear();
                    PrintWarning("Обнаружен WIPE инвентарь был успешно очищен! | WIPE detected inventory has been successfully cleaned!");
                }
        }
        void OnLootEntity(BasePlayer player, BaseEntity entity)
        {
            if (entity == null || player == null) return;
            if (entity.GetComponent<StorageContainer>() == null) return;
            if (entity.OwnerID >= 7656000000) return;
            if (entity.OwnerID == 99909) return;

            Metods_Search_Case(player, entity.ShortPrefabName);
            entity.OwnerID = 99909;
        }
        #endregion

        #region Command

        [ChatCommand("case")]
        void ChatCommandCase(BasePlayer player)
        {
            Interface_Cases(player);
        }

        [ConsoleCommand("case")]
        void SystemCommandCase(ConsoleSystem.Arg arg)
        {
            BasePlayer player = arg.Player();
            if (player == null) return;

            switch (arg.Args[0].ToLower())
            {
                case "take":
                    {
                        var CaseKey = arg.Args[1];
                        Interface_Take_Element(player, CaseKey);
                        break;
                    }
                case "whyitem":
                    {
                        var CaseKey = arg.Args[1];
                        Interface_Why_Case(player, CaseKey);
                        break;
                    }
                case "open":
                    {
                        var CaseKey = arg.Args[1];
                        Metods_Open_Case(player, CaseKey);
                        break;
                    }
                case "takeitem": 
                    {
                        CuiHelper.DestroyUi(player, STOP_BLOCK_INFO);
                        var CaseKey = arg.Args[1];
                        int ItemIndex = Convert.ToInt32(arg.Args[2]);
                        int ItemAmount = Convert.ToInt32(arg.Args[3]);
                        var Item = config.CaseList[CaseKey].ItemSetting[ItemIndex];
                        Metods_Take_Prize(player, Item, ItemAmount);
                        break;
                    }
                case "inventory":
                    { 
                        switch (arg.Args[1].ToLower())
                        {
                            case "open":
                                {
                                    Interface_My_Inventory(player);
                                    break;
                                }
                            case "take":
                                {
                                    int IndexSlot = Convert.ToInt32(arg.Args[2]);
                                    var inventoryClass = InventoryPlayer[player.userID][IndexSlot];
                                    Metods_Take_Inventory(player, inventoryClass);
                                    break;
                                }
                            case "page.controller":
                                {
                                    Int32 Page = (Int32)Convert.ToInt32(arg.Args[2]);
                                    String PageAction = (String)arg.Args[3];
                                    switch (PageAction)
                                    {
                                        case "next":
                                            {
                                                Interface_My_Inventory_LoadeItems(player, Page + 1);
                                                break;
                                            }
                                        case "back":
                                            {
                                                Interface_My_Inventory_LoadeItems(player, Page - 1);
                                                break;
                                            }
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                case "iqeconomic":
                    {
                        switch (arg.Args[1].ToLower())
                        {
                            case "buy":
                                {
                                    var CaseKey = arg.Args[2];
                                    Metods_IQEconomicBuyCase(player, CaseKey);
                                    break;
                                }
                            case "sell":
                                {
                                    var CaseKey = arg.Args[2];
                                    Metods_IQEconomicSellCase(player, CaseKey);
                                    break;
                                }
                        }
                        break;
                    }
            }
        }

        [ConsoleCommand("iqcase")]
        void AdminCommandCase(ConsoleSystem.Arg arg)
        {
            if (arg.Player() != null && !arg.Player().IsAdmin) return;

            switch (arg.Args[0].ToLower())
            {
                case "give":
                    {
                        ulong ID = ulong.Parse(arg.Args[1]);
                        BasePlayer player = BasePlayer.FindByID(ID);
                        string CaseKey = arg.Args[2];
                        int Amount = Convert.ToInt32(arg.Args[3]);
                        Metods_Case_Give(player.userID, CaseKey, Amount);
                        break;
                    }
                
            }
        }

        #endregion

        #region Metods

        #region Case
        void Metods_Open_Case(BasePlayer player,string CaseKey)
        {
            if (!UserAmountCase(player, CaseKey)) return;

            DataPlayer[player.userID][CaseKey]--;
            ServerMgr.Instance.StartCoroutine(Interface_Animation(player, CaseKey));
            Interface.Oxide.CallHook("OpenCase", player, config.CaseList[CaseKey].DisplayName);
        }

        void Metods_Search_Case(BasePlayer player, string CrateName)
        {
            foreach (var Case in config.CaseList.Where(x => x.Value.UseDropList))
            {
                foreach (var Item in Case.Value.CasesDropList.Where(x => x.Key.Contains(CrateName)))
                {
                    if (!GetRandomDrop(Item.Value)) continue;
                    Metods_Case_Give(player.userID, Case.Key, 1);
                    break;
                }
            }
        }

        void Metods_Case_Give(ulong userID, string CaseKey, int Amount)
        {
            if (!DataPlayer[userID].ContainsKey(CaseKey))
                if (config.CaseList.ContainsKey(CaseKey))
                {
                    DataPlayer[userID].Add(CaseKey, Amount);
                    Puts($"Игрок {userID} получил кейс - {CaseKey} | The player {userID} received a case - {CaseKey}");
                }
                else PrintError("#ERROR : Такого кейса не найдено,проверьте ключ! Если у вас все верно свяжитесь с разработчиком SkuliDropek#5212 | No such case was found, check the key! If everything is correct, contact the developer SkuliDropek#5212");
            else
            {
                DataPlayer[userID][CaseKey] += Amount;
                Puts($"Игрок {userID} получил кейс - {CaseKey} | The player {userID} received a case - {CaseKey}");
                SendChat(GetLang("CHAT_CASE_DROP_ACCESS", userID.ToString(), config.CaseList[CaseKey].DisplayName), BasePlayer.FindByID(userID));
            }
        }

        #endregion

        #region Inventory

        void Metods_Take_Inventory(BasePlayer player, Inventory inventoryClass) 
        {
            if (!InventoryPlayer[player.userID].Contains(inventoryClass)) return;

            var InventoryItem = inventoryClass.ItemClass;
            if (InventoryItem.CommandUse)
                rust.RunServerCommand(InventoryItem.Command.Replace("%STEAMID%", player.UserIDString));
            else
            {
                Item item = ItemManager.CreateByName(InventoryItem.Shortname, inventoryClass.Amount, InventoryItem.SkinID);
                player.GiveItem(item);
            }
            InventoryPlayer[player.userID].Remove(inventoryClass);
            SendChat(lang.GetMessage("CHAT_INVENTORY_TAKE_ACCESS", this, player.UserIDString), player);
        }

        void Metods_Take_Prize(BasePlayer player, ItemSettings ItemSetting, int ItemAmount)
        {
            if (!ItemSetting.CommandUse)
            {
                var Inventory = InventoryPlayer[player.userID].FirstOrDefault(x => x.ItemClass.Shortname == ItemSetting.Shortname);
                if (Inventory != null)
                {
                    ItemDefinition Item = ItemManager.FindItemDefinition(ItemSetting.Shortname);
                    if (Item != null)
                        if (Item.category != ItemCategory.Weapon)
                        {
                            Inventory.Amount += ItemAmount;
                            return;
                        }
                }
            }   
            InventoryPlayer[player.userID].Add(new Inventory { ItemClass = ItemSetting, Amount = ItemAmount });
        }

        #endregion

        #region IQEconomic

        void Metods_IQEconomicBuyCase(BasePlayer player,string CaseKey)
        {
            var Case = config.CaseList[CaseKey];
            var Data = DataPlayer[player.userID];
            if (!IsRemovedBalance(player.userID, Case.IQEconomicPrice))
            {
                SendChat(GetLang("IQECONOMIC_CASE_NO_MONEY", player.UserIDString, Case.DisplayName), player);
                return;
            }
            if (Data.ContainsKey(CaseKey))
                Data[CaseKey]++;
            else Data.Add(CaseKey, 1);

            RemoveBalance(player.userID, Case.IQEconomicPrice);
            SendChat(GetLang("IQECONOMIC_CASE_BUY_ACCESS", player.UserIDString, Case.DisplayName), player);
        }

        void Metods_IQEconomicSellCase(BasePlayer player, string CaseKey)
        {
            var Case = config.CaseList[CaseKey];
            var Data = DataPlayer[player.userID];
            if(!UserAmountCase(player, CaseKey))
            {
                SendChat(GetLang("IQECONOMIC_CASE_NO_CASE_SELL", player.UserIDString), player);
                return;
            }
            Data[CaseKey]--;
            SetBalance(player.userID, Case.IQEconomicPriceSell);
            SendChat(GetLang("IQECONOMIC_CASE_SELL_ACCESS", player.UserIDString, Case.DisplayName, Case.IQEconomicPriceSell), player);
        }

        #endregion

        #region PlayingTime

        public void TrackerTime(BasePlayer player)
        {
            foreach (var Case in config.CaseList.Where(Case => String.IsNullOrWhiteSpace(Case.Value.PermissionOpenCase) || permission.UserHasPermission(player.UserIDString, Case.Value.PermissionOpenCase)))
            {
                var User = TrackerTimePlayer[player.userID];
                if (!Case.Value.GiveCaseFromPlaying) continue;

                if (!User.ContainsKey(Case.Key))
                    User.Add(Case.Key, (int)(Case.Value.PlayingNormalFromGive + CurrentTime));
                else if (User[Case.Key] <= CurrentTime)
                {
                    Metods_Case_Give(player.userID, Case.Key, 1);
                    User[Case.Key] = (int)(Case.Value.PlayingNormalFromGive + CurrentTime);
                }

            }
        }
        #endregion

        #endregion

        #region Interface
        public static string UI_MAIN_UI = "MAIN_PLAYER_UI";
        public static string UI_TAKE_ITEM = "MAIN_UI_TAKE_ITEM";
        public static string UI_WHY_CASE = "MAIN_UI_WHY_CASE";
        public static string UI_MY_INVENTORY = "MAIN_UI_INVENTORY_USER";
        public static string UI_CASE_ANIMATION = "MAIN_UI_ANIMATION_USER";
        public static string UI_CASE_SHOW_REWARD = "MAIN_UI_SHOW_REWARD";
        public static string STOP_BLOCK_INFO = "STOP_BLOCK_INFOS";

        #region Cases
        void Interface_Cases(BasePlayer player)
        {
            CuiElementContainer container = new CuiElementContainer();
            CuiHelper.DestroyUi(player, UI_MAIN_UI);

            container.Add(new CuiPanel
            {
                CursorEnabled = true,   
                RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                Image = { FadeIn = 0.15f, Color = HexToRustFormat("#282A21C6"), Material = "assets/content/ui/uibackgroundblur-ingamemenu.mat" }
            }, "Overlay", UI_MAIN_UI);

            #region INFO_PANEL

            container.Add(new CuiPanel
            {
                RectTransform = { AnchorMin = "0 0", AnchorMax = "0.2020833 1" },
                Image = { FadeIn = 0.15f, Color = HexToRustFormat("#772424F0"), Material = "assets/content/ui/uibackgroundblur-ingamemenu.mat" }
            }, UI_MAIN_UI, "INFO_PANEL");

            container.Add(new CuiLabel
            {
                RectTransform = { AnchorMin = "0.01546395 0.9351851", AnchorMax = "1 1" },
                Text = { Text = lang.GetMessage("UI_TITLE_INFO",this,player.UserIDString), Font = "robotocondensed-bold.ttf", Align = TextAnchor.MiddleLeft, FadeIn = 0.3f }
            },  "INFO_PANEL", "TITLE_PANEL");

            container.Add(new CuiLabel
            {
                RectTransform = { AnchorMin = "0.01546395 0.8611111", AnchorMax = "1 0.9462963" },
                Text = { Text = lang.GetMessage("UI_TITLE_INFO_DESCRIPTION", this, player.UserIDString), Font = "robotocondensed-bold.ttf", Align = TextAnchor.UpperLeft, FadeIn = 0.3f }
            }, "INFO_PANEL", "TITLE_PANEL_DESCRIPTION");

            if (IQEconomic)
            {
                int Balance = GetBalance(player.userID);

                container.Add(new CuiLabel
                {
                    RectTransform = { AnchorMin = "0.0876289 0.1546298", AnchorMax = "0.435567 0.2046296" },
                    Text = { Text = lang.GetMessage("UI_TITLE_BALANCE", this, player.UserIDString), Font = "robotocondensed-bold.ttf", Align = TextAnchor.MiddleLeft, FadeIn = 0.3f }
                }, "INFO_PANEL", "TITLE_PANEL_BALANCE_TITLE");

                container.Add(new CuiLabel
                {
                    RectTransform = { AnchorMin = "0.5283506 0.1333335", AnchorMax = "0.7860826 0.225926" },
                    Text = { Text = $"{Balance}", FontSize = 30, Font = "robotocondensed-bold.ttf", Align = TextAnchor.MiddleRight, FadeIn = 0.3f }
                }, "INFO_PANEL", "TITLE_PANEL_BALANCE");
            }

            container.Add(new CuiButton
            {
                RectTransform = { AnchorMin = $"0.06701034 0.07870371", AnchorMax = $"0.9252577 0.1287039" },
                Button = { Command = "case inventory open", Color = HexToRustFormat("#4D3737C8"), Sprite =  "assets/content/ui/ui.background.tile.psd" },
                Text = { Text = lang.GetMessage("UI_BTN_INVENTORY", this, player.UserIDString), Color = HexToRustFormat("#E9D2C1FF"), Align = TextAnchor.MiddleCenter }
            }, "INFO_PANEL");

            container.Add(new CuiButton
            {
                RectTransform = { AnchorMin = "0.06701034 0.01388889", AnchorMax = "0.9252577 0.06388889" },
                Button = { Close = UI_MAIN_UI, Color = HexToRustFormat("#4D3737C8"), Sprite = "assets/content/ui/ui.background.tile.psd" },
                Text = { Text = lang.GetMessage("UI_CLOSE", this, player.UserIDString), Color = HexToRustFormat("#CAAD9EFF"), Align = TextAnchor.MiddleCenter }
            },  "INFO_PANEL");

            #endregion

            #region CASES

            container.Add(new CuiPanel
            {
                RectTransform = { AnchorMin = "0.2015625 0", AnchorMax = "1 1" },
                Image = { FadeIn = 0.15f, Color = HexToRustFormat("#282A21C6"), Material = "assets/content/ui/uibackgroundblur-ingamemenu.mat" }
            }, UI_MAIN_UI, "ELEMENT_PANEL");

            var CaseList = config.CaseList;
            int i = 0;
            int ItemCount = 0;
            float itemMinPosition = 219f;
            float itemWidth = 0.413646f - 0.196f; /// 
            float itemMargin = 0.439895f - 0.405f;
            int itemCount = CaseList.Count;
            float itemMinHeight = 0.65f;
            float itemHeight = 0.32f; /// 
            int ItemTarget = 4;

            if (itemCount > ItemTarget)
            {
                itemMinPosition = 0.5f - ItemTarget / 2f * itemWidth - (ItemTarget - 1) / 2f * itemMargin;
                itemCount -= ItemTarget;
            }
            else itemMinPosition = 0.5f - itemCount / 2f * itemWidth - (itemCount - 1) / 2f * itemMargin;
            foreach (var Case in CaseList)
            {
                container.Add(new CuiPanel
                {
                    RectTransform = { AnchorMin = $"{itemMinPosition} {itemMinHeight}", AnchorMax = $"{itemMinPosition + itemWidth} {itemMinHeight + itemHeight}" },
                    Image = { FadeIn = 0.15f, Color = "0 0 0 0" }
                },  "ELEMENT_PANEL",$"CASE_{i}");

                container.Add(new CuiLabel
                {
                    RectTransform = { AnchorMin = "0 0.85931392", AnchorMax = "1 1" }, //
                    Text = { Text = $"{Case.Value.DisplayName.ToUpper()}",Color = HexToRustFormat("#AAA39CFF"), FontSize = 24, Font = "robotocondensed-bold.ttf", Align = TextAnchor.UpperLeft, FadeIn = 0.3f }
                }, $"CASE_{i}");

                
                container.Add(new CuiElement
                {
                    Parent = $"CASE_{i}",
                    Components =
                    {
                        new CuiRawImageComponent { Png = GetImage(Case.Key) },
                        new CuiRectTransformComponent{ AnchorMin = "0 0", AnchorMax = $"1 1"},
                    }
                });
                container.Add(new CuiButton
                {
                    RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                    Button = { Command = $"case take {Case.Key}", Color = "0 0 0 0" },
                    Text = { Text = "", Align = TextAnchor.MiddleCenter }
                },  $"CASE_{i}");

                ItemCount++;
                i++;
                itemMinPosition += (itemWidth + itemMargin);
                if (ItemCount % ItemTarget == 0)
                {
                    itemMinHeight -= (itemHeight + (itemMargin * 2f));
                    if (itemCount > ItemTarget)
                    {
                        itemMinPosition = 0.5f - ItemTarget / 2f * itemWidth - (ItemTarget - 1) / 2f * itemMargin;
                        itemCount -= ItemTarget;
                    }
                    else itemMinPosition = 0.5f - itemCount / 2f * itemWidth - (itemCount - 1) / 2f * itemMargin;
                }
            }

            #endregion

            CuiHelper.AddUi(player, container);
        }
        #endregion

        #region TakeElement
        void Interface_Take_Element(BasePlayer player,string CaseKey)
        {
            CuiElementContainer container = new CuiElementContainer();
            CuiHelper.DestroyUi(player, UI_TAKE_ITEM);

            container.Add(new CuiPanel
            {
                CursorEnabled = true,
                RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                Image = { FadeIn = 0.15f, Color = HexToRustFormat("#282721E6"), Material = "assets/content/ui/uibackgroundblur-ingamemenu.mat" }
            },  "ELEMENT_PANEL", UI_TAKE_ITEM);

            int CaseAmountUser = GetAmountCase(player, CaseKey);
            var Case = config.CaseList[CaseKey];
            string HexIcon = UserAmountCase(player,CaseKey) ? "#FFFFFFFF" : "#FFFFFF9E";
            
            string RankName = string.Empty;
            if (IQRankSystem)
                if (!String.IsNullOrWhiteSpace(Case.IQRankKey))
                    if (!IsRank(player.userID, Case.IQRankKey))
                        RankName = $"{GetRankName(Case.IQRankKey)}";

            string BtnCase = !String.IsNullOrWhiteSpace(Case.PermissionOpenCase) ? permission.UserHasPermission(player.UserIDString, Case.PermissionOpenCase) ? UserAmountCase(player, CaseKey) ? String.IsNullOrWhiteSpace(RankName) ? "UI_CASE_BTN_OPEN" : "UI_CASE_BTN_NO_RANK_OPEN" : "UI_CASE_BTN_NO_OPEN" : "UI_CASE_BTN_NO_PERM_OPEN_OPEN" : UserAmountCase(player, CaseKey) ? "UI_CASE_BTN_OPEN" : "UI_CASE_BTN_NO_OPEN";
            string BtnCaseCMD = !String.IsNullOrWhiteSpace(Case.PermissionOpenCase) ? permission.UserHasPermission(player.UserIDString, Case.PermissionOpenCase) ? UserAmountCase(player, CaseKey) ? String.IsNullOrWhiteSpace(RankName) ?  $"case open {CaseKey}" : "" : "" : "" : UserAmountCase(player, CaseKey) ? $"case open {CaseKey}" : "";

            container.Add(new CuiPanel
            {
                RectTransform = { AnchorMin = "0.2002609 0.1833333", AnchorMax = "0.8330071 0.8592593" },
                Image = { FadeIn = 0.15f, Color = "0 0 0 0"}
            },  UI_TAKE_ITEM);

            container.Add(new CuiButton
            {
                RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                Button = { Close = UI_TAKE_ITEM, Color = "0 0 0 0" },
                Text = { Text = "" }
            }, UI_TAKE_ITEM);

            container.Add(new CuiElement
            {
                Parent = UI_TAKE_ITEM,
                Components =
                {
                    new CuiRawImageComponent { Png = GetImage(CaseKey),Color = HexToRustFormat(HexIcon) },
                    new CuiRectTransformComponent{ AnchorMin = "0.0670104 0.3164383", AnchorMax = $"0.4371135 0.8082191"},
                }
            });

            container.Add(new CuiLabel
            {
                RectTransform = { AnchorMin = "0.2556702 0.8232866", AnchorMax = "0.9969074 0.9479442" },
                Text = { Text = $"<b>{Case.DisplayName.ToUpper()}</b>", Color = HexToRustFormat("#F7EAE0FF"), FontSize = 30, Font = "robotocondensed-bold.ttf", Align = TextAnchor.LowerLeft, FadeIn = 0.3f }
            }, UI_TAKE_ITEM);

            container.Add(new CuiLabel
            {
                RectTransform = { AnchorMin = "0.4154639 0.5410959", AnchorMax = "0.7412371 0.7246575" },
                Text = { Text = GetLang("UI_CASE_TAKE_DESCRIPTION",player.UserIDString, Case.DisplayName), Font = "robotocondensed-bold.ttf", Align = TextAnchor.UpperLeft, FadeIn = 0.3f }
            }, UI_TAKE_ITEM);

            container.Add(new CuiLabel
            {
                RectTransform = { AnchorMin = "0.4134021 0.3986301", AnchorMax = "0.843299 0.4972603" },
                Text = { Text = GetLang("UI_CASE_TAKE_AMOUNT_CASE", player.UserIDString, CaseAmountUser), Font = "robotocondensed-bold.ttf", Align = TextAnchor.UpperLeft, FadeIn = 0.3f }
            },  UI_TAKE_ITEM);

            container.Add(new CuiButton
            {
                RectTransform = { AnchorMin = "0.14124 0.2876713", AnchorMax = "0.4041264 0.3342465" }, 
                Button = { Command = BtnCaseCMD, Color = HexToRustFormat("#B51919C7"), Material = "assets/content/ui/uibackgroundblur-ingamemenu.mat" },
                Text = { Text = GetLang(BtnCase, player.UserIDString, RankName), Align = TextAnchor.MiddleCenter, Color = HexToRustFormat("#E9D2C1FF") }
            },  UI_TAKE_ITEM);

            container.Add(new CuiButton
            {
                RectTransform = { AnchorMin = "0.14124 0.2410958", AnchorMax = "0.4041264 0.2835616" },
                Button = { Command = $"case whyitem {CaseKey}", Color = HexToRustFormat("#4D3737C7"), Material = "assets/content/ui/uibackgroundblur-ingamemenu.mat" },
                Text = { Text = lang.GetMessage("UI_CASE_BTN_WHY_CASE", this, player.UserIDString), Align = TextAnchor.MiddleCenter, Color = HexToRustFormat("#E9D2C1FF") }
            }, UI_TAKE_ITEM);

            #region IQEConomic
            if (IQEconomic)
            {
                if (Case.IQEconomicUse)
                {
                    container.Add(new CuiButton
                    {
                        RectTransform = { AnchorMin = "0.6371135 0.2876713", AnchorMax = "0.7989691 0.3342465" },
                        Button = { Close = UI_MAIN_UI, Command = $"case iqeconomic buy {CaseKey}", Color = HexToRustFormat("#607633FF"), Material = "assets/content/ui/uibackgroundblur-ingamemenu.mat" },
                        Text = { Text = $"{Case.IQEconomicPrice}", Align = TextAnchor.MiddleCenter, Color = HexToRustFormat("#91CA2EFF") }
                    }, UI_TAKE_ITEM, "BTN_ECONOMIC_BUY");


                    container.Add(new CuiElement
                    {
                        Parent = "BTN_ECONOMIC_BUY",
                        Components =
                            {
                                new CuiImageComponent { Sprite = "assets/icons/store.png", Color = HexToRustFormat("#91CA2EFF") },
                                new CuiRectTransformComponent{ AnchorMin = "0.02547757 0.1470587", AnchorMax = $"0.1783439 0.8529433"},
                            }
                    });
                }
                if(Case.IQEconomicUseSell)
                {
                    container.Add(new CuiButton
                    {
                        RectTransform = { AnchorMin = "0.6371135 0.2410958", AnchorMax = "0.7989691 0.2835616" },
                        Button = { Close = UI_MAIN_UI, Command = $"case iqeconomic sell {CaseKey}", Color = HexToRustFormat("#900E0EC7"), Material = "assets/content/ui/uibackgroundblur-ingamemenu.mat" },
                        Text = { Text = $"{Case.IQEconomicPriceSell}", Align = TextAnchor.MiddleCenter, Color = HexToRustFormat("#91CA2EFF") }
                    }, UI_TAKE_ITEM, "BTN_ECONOMIC_SELL");

                    container.Add(new CuiElement
                    {
                        Parent = "BTN_ECONOMIC_SELL",
                        Components =
                            {
                                new CuiImageComponent { Sprite = "assets/icons/refresh.png", Color = HexToRustFormat("#B51919C7") },
                                new CuiRectTransformComponent{ AnchorMin = "0.02547757 0.1470587", AnchorMax = $"0.1783439 0.8529433"},
                            }
                    });
                }
            }
            #endregion

            CuiHelper.AddUi(player, container); 
        }

        #endregion

        #region WhyCase
        void Interface_Why_Case(BasePlayer player,string CaseKey)
        {
            CuiElementContainer container = new CuiElementContainer();
            CuiHelper.DestroyUi(player, UI_TAKE_ITEM);
            CuiHelper.DestroyUi(player, UI_WHY_CASE);

            var Case = config.CaseList[CaseKey];

            container.Add(new CuiPanel
            {
                CursorEnabled = true,
                RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                Image = { FadeIn = 0.15f, Color = HexToRustFormat("#282721E6"), Material = "assets/content/ui/uibackgroundblur-ingamemenu.mat" }
            }, "ELEMENT_PANEL", UI_WHY_CASE);

            container.Add(new CuiLabel
            {
                RectTransform = { AnchorMin = "0 0.9046296", AnchorMax = "1 1" },
                Text = { Text = GetLang("UI_CASE_WHY_CASE_TITLE", player.UserIDString, Case.DisplayName), Font = "robotocondensed-bold.ttf", Align = TextAnchor.MiddleCenter, FadeIn = 0.3f }
            },  UI_WHY_CASE);

            container.Add(new CuiButton
            {
                RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                Button = { Close = UI_WHY_CASE, Color = "0 0 0 0" },
                Text = { Text = "" }
            },  UI_WHY_CASE);

            int i = 0;
            int ItemCount = 0;
            float itemMinPosition = 219f;
            float itemWidth = 0.413646f - 0.28f; /// 
            float itemMargin = 0.439895f - 0.41f; /// 
            int itemCount = Case.ItemSetting.Count;
            float itemMinHeight = 0.7f; // 
            float itemHeight = 0.17f; /// 
            int ItemTarget = 6;

            if (itemCount > ItemTarget)
            {
                itemMinPosition = 0.5f - ItemTarget / 2f * itemWidth - (ItemTarget - 1) / 2f * itemMargin;
                itemCount -= ItemTarget;
            }
            else itemMinPosition = 0.5f - itemCount / 2f * itemWidth - (itemCount - 1) / 2f * itemMargin;

            foreach (var Items in Case.ItemSetting)
            {
                int MinAmount = Items.MinAmount;
                int MaxAmount = Items.MaxAmount;

                container.Add(new CuiPanel
                {
                    RectTransform = { AnchorMin = $"{itemMinPosition} {itemMinHeight}", AnchorMax = $"{itemMinPosition + itemWidth} {itemMinHeight + itemHeight}" },
                    Image = { FadeIn = 0.15f, Color = HexToRustFormat("#FFFFFF15") }
                },  UI_WHY_CASE, $"ITEM_{i}");

                container.Add(new CuiElement
                {
                    Parent = $"ITEM_{i}",
                    Components =
                {
                    new CuiRawImageComponent { Png = GetImage(ImageGetItems(CaseKey, i)) },
                    new CuiRectTransformComponent{ AnchorMin = "0 0", AnchorMax = $"1 1"},
                }
                });

                container.Add(new CuiLabel
                {
                    RectTransform = { AnchorMin = "0 0", AnchorMax = "1 0.2" },
                    Text = { Text = $"<b>{MinAmount} - {MaxAmount}</b>", Font = "robotocondensed-bold.ttf", Align = TextAnchor.MiddleCenter, FadeIn = 0.3f }
                },  $"ITEM_{i}");

                ItemCount++;
                i++;
                itemMinPosition += (itemWidth + itemMargin);
                if (ItemCount % ItemTarget == 0)
                {
                    itemMinHeight -= (itemHeight + (itemMargin * 2f));
                    if (itemCount > ItemTarget)
                    {
                        itemMinPosition = 0.5f - ItemTarget / 2f * itemWidth - (ItemTarget - 1) / 2f * itemMargin;
                        itemCount -= ItemTarget;
                    }
                    else itemMinPosition = 0.5f - itemCount / 2f * itemWidth - (itemCount - 1) / 2f * itemMargin;
                }
            }

            CuiHelper.AddUi(player, container);
        }

        #endregion

        #region Inventory

        void Interface_My_Inventory(BasePlayer player)
        {
            CuiElementContainer container = new CuiElementContainer();
            CuiHelper.DestroyUi(player, UI_MY_INVENTORY);
            CuiHelper.DestroyUi(player, UI_TAKE_ITEM);
            CuiHelper.DestroyUi(player, UI_WHY_CASE);

            container.Add(new CuiPanel
            {
                CursorEnabled = true,
                RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                Image = { FadeIn = 0.15f, Color = HexToRustFormat("#282721E6"), Material = "assets/content/ui/uibackgroundblur-ingamemenu.mat" }
            }, "ELEMENT_PANEL", UI_MY_INVENTORY);

            container.Add(new CuiLabel
            {
                RectTransform = { AnchorMin = "0 0.9046296", AnchorMax = "1 1" },
                Text = { Text = GetLang("UI_BTN_INVENTORY",player.UserIDString), Font = "robotocondensed-bold.ttf", Align = TextAnchor.MiddleCenter, FadeIn = 0.3f }
            }, UI_MY_INVENTORY);

            CuiHelper.AddUi(player, container);

            Interface_My_Inventory_LoadeItems(player);
        }

        void Interface_My_Inventory_LoadeItems(BasePlayer player, Int32 Page = 0)
        {
            CuiElementContainer container = new CuiElementContainer();
            CuiHelper.DestroyUi(player, $"{UI_MY_INVENTORY}_CONTENT");
            CuiHelper.DestroyUi(player, $"PAGE_BACK");
            CuiHelper.DestroyUi(player, $"PAGE_NEXT");

            container.Add(new CuiPanel
            {
                CursorEnabled = true,
                RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                Image = { FadeIn = 0.15f, Color = "0 0 0 0" }
            }, UI_MY_INVENTORY, $"{UI_MY_INVENTORY}_CONTENT");

            container.Add(new CuiButton
            {
                RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                Button = { Close = UI_MY_INVENTORY, Color = "0 0 0 0" },
                Text = { Text = "" }
            }, $"{UI_MY_INVENTORY}_CONTENT");

            if (InventoryPlayer[player.userID].Skip(40 * (Page + 1)).Count() > 0)
            {
                container.Add(new CuiButton
                {
                    RectTransform = { AnchorMin = "0.8793216 0.008333333", AnchorMax = "1 0.05925926" },
                    Button = { Command = $"case inventory page.controller {Page} next", Color = "0 0 0 0" },
                    Text = { Text = GetLang("UI_CASE_NEXT_PAGE", player.UserIDString) }
                }, $"{UI_MY_INVENTORY}_CONTENT", "PAGE_NEXT");
            }

            if (Page != 0)
            {
                container.Add(new CuiButton
                {
                    RectTransform = { AnchorMin = "0.04044669 0.008333333", AnchorMax = "0.1611252 0.05925926" },
                    Button = { Command = $"case inventory page.controller {Page} back", Color = "0 0 0 0" },
                    Text = { Text = GetLang("UI_CASE_BACK_PAGE", player.UserIDString) }
                }, $"{UI_MY_INVENTORY}_CONTENT", "PAGE_BACK");
            }

            for (int i = 0, x = 0, y = 0; i < 40; i++)
            {
                container.Add(new CuiPanel
                {
                    RectTransform = { AnchorMin = $"{0.03718204 + (x * 0.12)} {0.7638896 - (y * 0.17)}", AnchorMax = $"{0.1402479 + (x * 0.12)} {0.9101858 - (y * 0.17)}" },
                    Image = { FadeIn = 0.15f, Color = HexToRustFormat("#FFFFFF2E") }
                }, $"{UI_MY_INVENTORY}_CONTENT", $"SLOT_{i}");

                x++;
                if (x >= 8)
                {
                    y++;
                    x = 0;
                }
            }

            int slot = 0;
            foreach (var Inventory in InventoryPlayer[player.userID].Skip(40 * Page).Take(40))
            {
                container.Add(new CuiElement
                {
                    Parent = $"SLOT_{slot}",
                    Components =
                    {
                        new CuiRawImageComponent { Png = GetImage(ImageGetItemsInventory(player.userID,Inventory.ItemClass)) },
                        new CuiRectTransformComponent{ AnchorMin = "0 0", AnchorMax = $"1 1"},
                    }
                });

                container.Add(new CuiLabel
                {
                    RectTransform = { AnchorMin = "0 0", AnchorMax = "1 0.2" },
                    Text = { Text = $"<b>{Inventory.Amount}</b>", Font = "robotocondensed-bold.ttf", Align = TextAnchor.MiddleCenter, FadeIn = 0.3f }
                }, $"SLOT_{slot}");

                container.Add(new CuiButton
                {
                    RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                    Button = { Close = UI_MY_INVENTORY, Command = $"case inventory take {slot}", Color = "0 0 0 0" },
                    Text = { Text = "" }
                }, $"SLOT_{slot}");
                slot++;
            }

            CuiHelper.AddUi(player, container);
        }
        #endregion

        #region Animation

        public IEnumerator Interface_Animation(BasePlayer player,string CaseKey)
        {
            CuiElementContainer container = new CuiElementContainer();
            CuiHelper.DestroyUi(player, UI_CASE_ANIMATION);

            int CountItems = config.CaseList[CaseKey].ItemSetting.Count >= 8 ? 8 : config.CaseList[CaseKey].ItemSetting.Count;
            List<int> PossibleAwards = new List<int>();

            container.Add(new CuiPanel
            {
                RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                Image = { FadeIn = 0.5f, Color = "0 0 0 0" }
            },  "INFO_PANEL", STOP_BLOCK_INFO);

            container.Add(new CuiPanel
            {
                RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                Image = { FadeIn = 0.5f, Color = "0 0 0 0" }
            },  UI_TAKE_ITEM);

            container.Add(new CuiPanel
            {
                RectTransform = { AnchorMin = "0.5 0.5", AnchorMax = "0.5 0.5", OffsetMin = $"{-40 + ((CountItems - 1) * -40)} -350", OffsetMax = $"{40 + ((CountItems - 1) * 40)} -265" },
                Image = { FadeIn = 0.5f, Color = HexToRustFormat("#444837C6"), Material = "assets/content/ui/uibackgroundblur-ingamemenu.mat" }
            }, UI_TAKE_ITEM, UI_CASE_ANIMATION);


             container.Add(new CuiElement
            {
                Parent = UI_CASE_ANIMATION,
                Components =
                    {
                        new CuiRawImageComponent { Png = GetImage("RIGHT_ARROW"),Color = HexToRustFormat("#FFFFFF6A"), FadeIn = 1f},
                        new CuiRectTransformComponent{ AnchorMin = "0 0", AnchorMax = $"0 0", OffsetMin = "-60 10", OffsetMax = "0 70"},
                    }
            });

            container.Add(new CuiElement
            {
                Parent = UI_CASE_ANIMATION,
                Components =
                    {
                        new CuiRawImageComponent { Png = GetImage("LEFT_ARROW"),FadeIn = 1.5f,Color = HexToRustFormat("#FFFFFF6A"), },
                        new CuiRectTransformComponent{ AnchorMin = "1 1", AnchorMax = $"1 1", OffsetMin = "0 -70", OffsetMax = "60 -10"},
                    }
            });

            container.Add(new CuiLabel
            {
                RectTransform = { AnchorMin = "0.5 0.5", AnchorMax = "0.5 0.5",OffsetMin = $"{-40 + ((CountItems - 1) * -40)} 40", OffsetMax = $"{40 + ((CountItems - 1) * 40)} 70" },
                Text = { Text = lang.GetMessage("UI_CASE_ANIM_LABEL_TITLE",this,player.UserIDString), Font = "robotocondensed-bold.ttf", Align = TextAnchor.MiddleCenter, FadeIn = 0.3f }
            },  UI_CASE_ANIMATION);

            CuiHelper.AddUi(player, container);

            RunEffect(player, "assets/bundled/prefabs/fx/notice/loot.start.fx.prefab");

            for(int i = 0; i < CountItems; i++)
            {
                RunEffect(player, "assets/bundled/prefabs/fx/notice/loot.drag.grab.fx.prefab");
                CuiElementContainer temp = new CuiElementContainer();

                int RandomIndex = UnityEngine.Random.Range(0, config.CaseList[CaseKey].ItemSetting.Count);
                var Items = config.CaseList[CaseKey].ItemSetting[RandomIndex];
                int VisualRandom = UnityEngine.Random.Range(Items.MinAmount, Items.MaxAmount);
                int VisualRandomIndex = UnityEngine.Random.Range(Items.MinAmount, Items.MaxAmount);

                PossibleAwards.Add(RandomIndex);

                temp.Add(new CuiPanel
                {
                    RectTransform = { AnchorMin = "0 0", AnchorMax = "0 0", OffsetMin = $"{5 + (80 * i)} 5", OffsetMax = $"{75 + (80 * i)} 80" },
                    Image = { FadeIn = 0.15f, Color = HexToRustFormat("#E9D2C10E"), Material = "assets/content/ui/uibackgroundblur.mat" }
                }, UI_CASE_ANIMATION, $"ITEM_{i}");

                temp.Add(new CuiElement
                {
                    Parent = $"ITEM_{i}",
                    Components =
                    {
                        new CuiRawImageComponent { Png = GetImage(ImageGetItems(CaseKey,RandomIndex)) },
                        new CuiRectTransformComponent{ AnchorMin = "0 0", AnchorMax = $"1 1"},
                    }
                });

                temp.Add(new CuiLabel
                {
                    RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                    Text = { Text = $"{VisualRandom}", Font = "robotocondensed-bold.ttf", Align = TextAnchor.LowerCenter, FadeIn = 0.3f }
                }, $"ITEM_{i}");

                CuiHelper.AddUi(player, temp);

                yield return new WaitForSeconds(0.5f);
            }

            CuiElementContainer containerMore = new CuiElementContainer();

            containerMore.Add(new CuiPanel
            {
                RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                Image = { FadeIn = 0.5f, Color = HexToRustFormat("#00000024"), Material = "assets/content/ui/uibackgroundblur.mat" }
            },  UI_CASE_ANIMATION, "BLURING_PANEL");

            containerMore.Add(new CuiLabel
            {
                RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                Text = { Text = lang.GetMessage("UI_CASE_ANIM_LABEL",this,player.UserIDString), Font = "robotocondensed-bold.ttf", Align = TextAnchor.MiddleCenter, FadeIn = 0.3f }
            }, $"BLURING_PANEL");

            CuiHelper.AddUi(player, containerMore);

            yield return new WaitForSeconds(0.5f);

            RunEffect(player, "assets/bundled/prefabs/fx/player/beartrap_clothing_rustle.prefab");
            ShowReward(player, CaseKey, PossibleAwards);
        }

        #endregion

        #region ShowRewards

        public void ShowReward(BasePlayer player, string CaseKey, List<int> PossibleAwards)
        {
            CuiElementContainer container = new CuiElementContainer();
            CuiHelper.DestroyUi(player, UI_CASE_SHOW_REWARD);

            var Case = config.CaseList[CaseKey];
            int VariblePrizeAmount = Case.VariblesPrize ? PossibleAwards.Count >= 3 ? 3 : PossibleAwards.Count : 1;
            string VariblePrizeLang = Case.VariblesPrize ? PossibleAwards.Count >= 3 ? "UI_CASE_SHOW_PRIZE_TAKE" : "UI_CASE_SHOW_PRIZE_TAKE" : "UI_CASE_SHOW_PRIZE_YOUR";

            container.Add(new CuiPanel
            {
                FadeOut = 0.2f,
                CursorEnabled = true,
                RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                Image = { FadeIn = 0.15f, Color = HexToRustFormat("#282721E6"), Material = "assets/content/ui/uibackgroundblur-ingamemenu.mat" }
            }, UI_TAKE_ITEM, UI_CASE_SHOW_REWARD);

            container.Add(new CuiLabel
            {
                RectTransform = { AnchorMin = "0 0.9", AnchorMax = "1 1" },
                Text = { Text = lang.GetMessage(VariblePrizeLang, this, player.UserIDString), Font = "robotocondensed-bold.ttf", Align = TextAnchor.MiddleCenter, FadeIn = 0.3f }
            },  UI_CASE_SHOW_REWARD);

            if (config.GeneralSetting.InventoryClearWipe)
            {
                container.Add(new CuiLabel
                {
                    RectTransform = { AnchorMin = "0 0", AnchorMax = "1 0.09" },
                    Text = { Text = lang.GetMessage("UI_CASE_SHOW_PRIZE_DROP_INVENTORY", this, player.UserIDString), Font = "robotocondensed-bold.ttf", Align = TextAnchor.MiddleCenter, FadeIn = 0.3f }
                }, UI_CASE_SHOW_REWARD);
            }
            
            container.Add(new CuiLabel
            {
                RectTransform = { AnchorMin = "0 0.9", AnchorMax = "1 0.93" },
                Text = { Text = lang.GetMessage("UI_CASE_SHOW_PRIZE_DESC", this, player.UserIDString), Font = "robotocondensed-bold.ttf", Align = TextAnchor.MiddleCenter, FadeIn = 0.3f }
            }, UI_CASE_SHOW_REWARD);

            #region CenterFunc

            int ItemCount = 0;
            float itemMinPosition = 219f;
            float itemWidth = 0.413646f - 0.18f; /// 
            float itemMargin = 0.439895f - 0.41f; /// 
            int itemCount = Case.ItemSetting.Count;
            float itemMinHeight = 0.35f; // 
            float itemHeight = 0.3f; /// 
            int ItemTarget = VariblePrizeAmount;

            if (itemCount > ItemTarget)
            {
                itemMinPosition = 0.5f - ItemTarget / 2f * itemWidth - (ItemTarget - 1) / 2f * itemMargin;
                itemCount -= ItemTarget;
            }
            else itemMinPosition = 0.5f - itemCount / 2f * itemWidth - (itemCount - 1) / 2f * itemMargin;

            #endregion

            for (int i = 0; i < VariblePrizeAmount; i++)
            {
                int RandomIndexPossible = PossibleAwards[UnityEngine.Random.Range(0, PossibleAwards.Count)];
                var Item = Case.ItemSetting[RandomIndexPossible];
                int RandomAmount = UnityEngine.Random.Range(Item.MinAmount, Item.MaxAmount);

                container.Add(new CuiPanel
                {
                    RectTransform = { AnchorMin = $"{itemMinPosition} {itemMinHeight}", AnchorMax = $"{itemMinPosition + itemWidth} {itemMinHeight + itemHeight}" },
                    Image = { FadeIn = 0.15f, Color = HexToRustFormat("#FFFFFF10") }
                }, UI_CASE_SHOW_REWARD, $"PRIZE_{i}");

                container.Add(new CuiElement
                {
                    Parent = $"PRIZE_{i}",
                    Components =
                    {
                        new CuiRawImageComponent { Png = GetImage(ImageGetItems(CaseKey,RandomIndexPossible)) },
                        new CuiRectTransformComponent{ AnchorMin = "0 0", AnchorMax = $"1 1"},
                    }
                });

                container.Add(new CuiLabel
                {
                    RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                    Text = { Text = $"{RandomAmount}", Font = "robotocondensed-bold.ttf", Align = TextAnchor.LowerCenter, FadeIn = 0.3f }
                },  $"PRIZE_{i}");

                container.Add(new CuiButton
                {
                    RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                    Button = { Close = UI_TAKE_ITEM, Command = $"case takeitem {CaseKey} {RandomIndexPossible} {RandomAmount}", Color = "0 0 0 0" },
                    Text = { Text = "" }
                },  $"PRIZE_{i}");

                #region CenterFunc

                ItemCount++;
                itemMinPosition += (itemWidth + itemMargin);
                if (ItemCount % ItemTarget == 0)
                {
                    itemMinHeight -= (itemHeight + (itemMargin * 2f));
                    if (itemCount > ItemTarget)
                    {
                        itemMinPosition = 0.5f - ItemTarget / 2f * itemWidth - (ItemTarget - 1) / 2f * itemMargin;
                        itemCount -= ItemTarget;
                    }
                    else itemMinPosition = 0.5f - itemCount / 2f * itemWidth - (itemCount - 1) / 2f * itemMargin;
                }

                #endregion
            } 

            CuiHelper.AddUi(player, container);
        }

        #endregion

        #endregion

        #region Lang
        private new void LoadDefaultMessages()
        {
            lang.RegisterMessages(new Dictionary<string, string>
            {
                ["UI_BTN_INVENTORY"] = "<size=20><color=#E9D2C1FF><b>INVENTORY</b></color></size>",
                ["UI_TITLE_BALANCE"] = "<size=17><color=#E9D2C1FF><b>BALANCE:</b></color></size>",
                ["UI_TITLE_INFO"] = "<size=30><color=#E9D2C1FF><b>IQCASES</b></color></size>",
                ["UI_TITLE_INFO_DESCRIPTION"] = "<size=14><color=#CAAD9EFF><b>Find or buy cases to open them</b></color></size>",
                ["UI_CLOSE"] = "<size=30><color=#CAAD9EFF><b>CLOSE</b></color></size>",
                ["UI_AMOUNT_CASE"] = "<size=16>Amount: {0}</size>",
                ["UI_CASE_TAKE_AMOUNT_CASE"] = "<size=16><b><color=#4E95C7FF>Your number of cases</color> <color=#f5f4f4>{0} x</color></b></size>",
                ["UI_CASE_TAKE_DESCRIPTION"] = "<size=12><b><color=#F89504FF>In this menu you can open the case <color=#e3c393>{0}</color> or see what is in it\n\n*Case can be found or bought</color></b></size>",
                ["UI_CASE_BTN_OPEN"] = "<size=25><b>Open</b></size>",
                ["UI_CASE_BTN_NO_PERM_OPEN_OPEN"] = "<size=14><b>Dont permissions</b></size>",
                ["UI_CASE_BTN_NO_RANK_OPEN"] = "<size=14><b>You need a rank [{0}]</b></size>",
                ["UI_CASE_BTN_NO_OPEN"] = "<size=14><b>You have no cases</b></size>",
                ["UI_CASE_BTN_WHY_CASE"] = "<size=14><b>Why case?</b></size>",
                ["UI_CASE_WHY_CASE_TITLE"] = "<size=30><b>Items inside the case <color=#FFB243FF>{0}</color></b></size>",
                ["UI_CASE_ANIM_LABEL"] = "<size=30><b>UNPACK CASE...</b></size>",
                ["UI_CASE_ANIM_LABEL_TITLE"] = "<size=24><b>POSSIBLE AWARDS</b></size>",
                ["UI_CASE_SHOW_PRIZE_TAKE"] = "<size=30><b>CHOOSE A REWARD</b></size>",
                ["UI_CASE_SHOW_PRIZE_YOUR"] = "<size=30><b>YOUR REWARD</b></size>",
                ["UI_CASE_SHOW_PRIZE_DESC"] = "<size=16><b>Click on the reward to collect it</b></size>",
                ["UI_CASE_SHOW_PRIZE_DROP_INVENTORY"] = "<size=18><b>Your rewards will be stored in inventory\n*Inventory will be cleaned every WIPE</b></size>",

                ["CHAT_CASE_DROP_ACCESS"] = "Congratulations! You found a case {0}",
                ["CHAT_INVENTORY_TAKE_ACCESS"] = "You have successfully taken an item from inventory",

                ["IQECONOMIC_CASE_NO_MONEY"] = "You do not have enough money to buy a case {0}",
                ["IQECONOMIC_CASE_BUY_ACCESS"] = "You have successfully purchased a case {0}",
                ["IQECONOMIC_CASE_NO_CASE_SELL"] = "You do not have cases for sale",
                ["IQECONOMIC_CASE_SELL_ACCESS"] = "You successfully sold the case {0} and got {1} currencies",

                ["UI_CASE_NEXT_PAGE"] = "<size=30><b>NEXT</b></size>",
                ["UI_CASE_BACK_PAGE"] = "<size=30><b>BACK</b></size>",
            }, this);

            lang.RegisterMessages(new Dictionary<string, string>
            {
                ["UI_BTN_INVENTORY"] = "<size=20><color=#E9D2C1FF><b>ВАШ ИНВЕНТАРЬ</b></color></size>",
                ["UI_TITLE_BALANCE"] = "<size=17><color=#E9D2C1FF><b>БАЛАНС:</b></color></size>",
                ["UI_TITLE_INFO"] = "<size=30><color=#E9D2C1FF><b>IQCASES</b></color></size>",
                ["UI_TITLE_INFO_DESCRIPTION"] = "<size=14><color=#CAAD9EFF><b>Находи или покупай кейсы,чтобы открыть их</b></color></size>",
                ["UI_CLOSE"] = "<size=30><color=#CAAD9EFF><b>ЗАКРЫТЬ</b></color></size>",
                ["UI_CASE_TAKE_AMOUNT_CASE"] = "<size=16><b><color=#4E95C7FF>Ваше количество кейсов</color> <color=#f5f4f4>{0} x</color></b></size>",
                ["UI_CASE_TAKE_DESCRIPTION"] = "<size=12><b><color=#F89504FF>В этом меню вы можете открыть кейс <color=#e3c393>{0}</color> или просмотреть,что в нем находится\n\n*Кейс можно найти или купить</color></b></size>",
                ["UI_CASE_BTN_OPEN"] = "<size=14><b>Открыть</b></size>",
                ["UI_CASE_BTN_NO_PERM_OPEN_OPEN"] = "<size=14><b>У вас недостаточно прав</b></size>",
                ["UI_CASE_BTN_NO_RANK_OPEN"] = "<size=14><b>Вам нужен ранг [{0}]</b></size>",
                ["UI_CASE_BTN_NO_OPEN"] = "<size=14><b>У вас нет кейсов</b></size>",
                ["UI_CASE_BTN_WHY_CASE"] = "<size=14><b>Что внутри?</b></size>",
                ["UI_CASE_WHY_CASE_TITLE"] = "<size=30><b>Предметы находящиеся внутри кейса <color=#FFB243FF>{0}</color></b></size>",
                ["UI_CASE_ANIM_LABEL"] = "<size=30><b>РАСПАКОВКА КЕЙСА...</b></size>",
                ["UI_CASE_ANIM_LABEL_TITLE"] = "<size=24><b>ВОЗМОЖНАЯ НАГРАДА</b></size>",
                ["UI_CASE_SHOW_PRIZE_TAKE"] = "<size=30><b>ВЫБЕРИТЕ НАГРАДУ</b></size>",
                ["UI_CASE_SHOW_PRIZE_YOUR"] = "<size=30><b>ВАША НАГРАДА</b></size>",
                ["UI_CASE_SHOW_PRIZE_DESC"] = "<size=16><b>Нажмите на награду,чтобы забрать ее</b></size>",
                ["UI_CASE_SHOW_PRIZE_DROP_INVENTORY"] = "<size=18><b>Ваши награды будут храниться в инвентаре\n*Инвентарь будет очищаться каждый WIPE</b></size>",

                ["CHAT_CASE_DROP_ACCESS"] = "Поздравляем!Вы получили кейс {0}",
                ["CHAT_INVENTORY_TAKE_ACCESS"] = "Вы успешно забрали предмет из инвентаря",

                ["IQECONOMIC_CASE_NO_MONEY"] = "У вас недостаточно средств для покупки кейса {0}",
                ["IQECONOMIC_CASE_BUY_ACCESS"] = "Вы успешно приобрели кейс {0}",
                ["IQECONOMIC_CASE_NO_CASE_SELL"] = "У вас нет кейсов для продажи",
                ["IQECONOMIC_CASE_SELL_ACCESS"] = "Вы успешно продали кейс {0} и получили {1} валюты",

                ["UI_CASE_NEXT_PAGE"] = "<size=30><b>ВПЕРЕД</b></size>",
                ["UI_CASE_BACK_PAGE"] = "<size=30><b>НАЗАД</b></size>",

            }, this, "ru");
            PrintWarning("Языковой файл загружен успешно | The language file was uploaded successfully");
        }

        public static StringBuilder sb = new StringBuilder();
        public string GetLang(string LangKey, string userID = null, params object[] args)
        {
            sb.Clear();
            if (args != null)
            {
                sb.AppendFormat(lang.GetMessage(LangKey, this, userID), args);
                return sb.ToString();
            }
            return lang.GetMessage(LangKey, this, userID);
        }
        #endregion

        #region Helps

        public bool GetRandomDrop(int RandomInt)
        {
            int Random = UnityEngine.Random.Range(0, 100);
            if (RandomInt >= Random)
                return true;
            else return false;
        }
        public bool UserAmountCase(BasePlayer player,string CaseKey)
        {
            if (GetAmountCase(player,CaseKey) > 0) return true;
            else return false;
        }

        public int GetAmountCase(BasePlayer player, string CaseKey)
        {
            int CaseAmountUser = DataPlayer.ContainsKey(player.userID) ? DataPlayer[player.userID].ContainsKey(CaseKey) ? DataPlayer[player.userID][CaseKey] : 0 : 0;
            return CaseAmountUser;
        }
        static Double CurrentTime => Facepunch.Math.Epoch.Current;
        private static string HexToRustFormat(string hex)
        {
            Color color;
            ColorUtility.TryParseHtmlString(hex, out color);
            sb.Clear();
            return sb.AppendFormat("{0:F2} {1:F2} {2:F2} {3:F2}", color.r, color.g, color.b, color.a).ToString();             
        }
        void RunEffect(BasePlayer player, string path)
        {
            Effect effect = new Effect();
            effect.Init(Effect.Type.Generic, player.transform.position, player.transform.forward, (Network.Connection)null);
            effect.pooledString = path; EffectNetwork.Send(effect, player.net.connection);
        }
        #endregion

        #region API
        void API_GIVE_CASE(ulong userID, string CaseKey, int Amount) => Metods_Case_Give(userID, CaseKey, Amount);
        bool API_IS_CASE_PLAYER(BasePlayer player, string CaseKey) => UserAmountCase(player, CaseKey);
        int API_GET_AMOUNT_CASE(BasePlayer player, string CaseKey) => GetAmountCase(player, CaseKey);
        bool API_IS_CASE_EXIST(string CaseKey)
        {
            if (config.CaseList.ContainsKey(CaseKey))
                return true;
            else return false;
        }
        #endregion

    }
}


// --- End of file: IQCases.cs ---
// --- Next file ---

// --- GitHub Source URL: https://github.com/RustyyTown/plugins/blob/main/ShiningSeed.cs ---
// --- Original Local Path: ShiningSeed.cs ---

﻿using UnityEngine;
using Oxide.Core;
using System.Collections.Generic;
using Newtonsoft.Json;

namespace Oxide.Plugins
{

    [Info("ShiningSeed", "Anonymuspro", "0.0.2")]
    public class ShiningSeed : RustPlugin
    {
        #region Class

        public class Seed
        {
            public string shortname;
            public string name;
            public ulong skinId;
        }

        Seed seed = new Seed()
        {
            shortname = "seed.hemp",
            name = "Лайтинг семечка",
            skinId = 1787823357
        };

        public class Wood
        {
            [JsonProperty("Не трогать!")]
            public BasePlayer player;

            [JsonProperty("Не трогать!")]
            public BaseEntity wood;

            public Vector3 woodPos;

            public PlantEntity plant;

            public List<BaseEntity> boxs;

            public int BoxCount = 4;

            public bool DownBox;

            public bool isSpawned;

            public int CurrentMaturation = 0;

            public int MaxMaturation = 10;

            public int BoxMat;

            public int BoxMaxMat = 10;

            public int CurrentEtap;

            public int MaxEtap;

        }

        public class CaseItem
        {
            public string shortname;
            public bool Random;
            public int Min;
            public int Max;
            public int Count;
        }

        public List<Wood> woods;

        public Dictionary<string, string> Messages = new Dictionary<string, string>()
        {
            {"CmdError", "Неправильно ввели команду." },
            {"CountError", "Неверное кол-во!" },
            {"Permission", "У вас нет прав!" },
            {"SeedGived", "Вам выпала уникальная семечка!\nПосадите ее и у вас выростет дерево с лутом!" },
            {"Wood", "Вы посадили уникальное дерево\nСкоро оно вырастет" },
            {"Matured",  "Ваше магическое дерево созрело!\nСкоро на нем начнут рости ящики"},
            {"Box", "На дереве еще нет ящиков,\nВы не можете его срубить!" },
            {"Seed", "Ваш лайтинг саженец сломали!"},
            {"Destroy", "Это магическое дерево\nЕго можно только добыть когда оно созреет!" }
        };

        public class DataConfig
        {
            [JsonProperty("Время роста дерева в секундах")]
            public int Time;

            [JsonProperty("Количество вещей в ящике")]
            public int ItemsCount;

            [JsonProperty("Кол-во ящиков на дереве")]
            public int BoxCount;

            [JsonProperty("Время появления ящиков в секундах")]
            public int BoxTime;

            [JsonProperty("Максимальное кол-во этапов для дерева")]
            public int MaxEtap;

            [JsonProperty("Список префабов этапов дерева")]
            public List<string> etaps;

            [JsonProperty("Права на выдачу")]
            public string Permission = "seed.perm";

            [JsonProperty("Путь до ящика")]
            public string CrateBasic = "assets/bundled/prefabs/radtown/crate_basic.prefab";

            [JsonProperty("Шанс выпдаения с дерева (макс-100)")]
            public int Chance;

            [JsonProperty("Список вещей в ящиках")]
            public List<CaseItem> casesItems;

            [JsonProperty("Ссылка на удачный эффект")]
            public string SucEffect;
            [JsonProperty("Ссылка на эффект ошибки")]
            public string ErrorEffect;

            [JsonProperty("Эффект сообщения после спавна для игрока")]
            public string WoodMessageEffect = "";

            [JsonProperty("Размер шрифта")]
            public int FontSize;

            [JsonProperty("Цвет текста")]
            public string Color;

            [JsonProperty("Позиция текста на дереве")]
            public Vector3 pos;

            [JsonProperty("Размер шрифта процентов")]
            public int FontProcentSize;

            [JsonProperty("Размер шрифта этапов")]
            public int FontEtapSize;
        }

        DataConfig cfg;

        #endregion

        #region DefaultMethods

        protected override void LoadConfig()
        {
            base.LoadConfig();
            cfg = Config.ReadObject<DataConfig>();
        }

        protected override void SaveConfig()
        {
            Config.WriteObject(cfg);
        }

        protected override void LoadDefaultConfig()
        {
            cfg = new DataConfig()
            {
                BoxTime = 10,
                ItemsCount = 2,
                Permission = "seed.perm",
                CrateBasic = "assets/bundled/prefabs/radtown/crate_underwater_basic.prefab",
                BoxCount = 4,
                Chance = 5,
                Time = 10,
                casesItems = new List<CaseItem>()
                {
                new CaseItem
                {
                shortname = "stone",
                Random = true,
                Min = 300,
                Max = 1000,
                Count = 550
                },
                },
                SucEffect = "assets/prefabs/misc/xmas/candy cane club/effects/hit.prefab",
                ErrorEffect = "assets/prefabs/locks/keypad/effects/lock.code.denied.prefab",
                WoodMessageEffect = "assets/prefabs/tools/keycard/effects/swipe.prefab",
                FontSize = 30,
                Color = "#DEE2E5",
                pos = new Vector3(1.5f, 0, 0),
                etaps = new List<string>()
                {
                  "assets/bundled/prefabs/autospawn/resource/v2_temp_forest_small/pine_d.prefab",
                  "assets/bundled/prefabs/autospawn/resource/v2_temp_forest_small/douglas_fir_d.prefab",
                  "assets/bundled/prefabs/autospawn/resource/v2_tundra_forest/oak_b_tundra.prefab"
                },
                MaxEtap = 3,
                FontEtapSize = 18,
                FontProcentSize = 22
            };
        }

        #endregion

        #region OxideHooks

        private void Init()
        {
            permission.RegisterPermission(cfg.Permission, this);
            woods = new List<Wood>();
            timer.Every(1f, TimerTick);
            timer.Every(0.2f, UpdateText);
        }

        void OnEntityDeath(BaseCombatEntity entity, HitInfo info)
        {
            if (entity == null) return;

            Wood wd2 = SearchFromEntity(entity as PlantEntity);
            if (wd2 != null)
            {
                BasePlayer player = info.Initiator.ToPlayer();
                if (player != null)
                {
                    if (wd2.player != null)
                    {
                        if (wd2.player != player)
                        {
                            SendReply(wd2.player, string.Format(Messages["Seed"]));
                            Effect.server.Run(cfg.ErrorEffect, wd2.player.ServerPosition);
                        }
                    }
                }
                woods.Remove(wd2);
                return;
            }

            foreach (var wood in woods)
            {
                if (wood.wood == null) return;
                if (wood.wood == entity)
                {
                    woods.Remove(wood);
                    return;
                }
            }
        }

        void OnEntityBuilt(Planner plan, GameObject go)
        {
            BasePlayer player = plan?.GetOwnerPlayer();
            var entity = go?.GetComponent<BaseEntity>();
            Vector3 ePos = entity.transform.position;
            if (entity == null || ePos == null || player == null) return;
            if (entity.skinID == seed.skinId)
            {

                woods.Add(new Wood
                {

                    woodPos = ePos,
                    plant = entity as PlantEntity,
                    BoxCount = cfg.BoxCount,
                    isSpawned = false,
                    CurrentMaturation = 0,
                    DownBox = false,
                    MaxMaturation = cfg.Time,
                    BoxMaxMat = cfg.BoxTime,
                    BoxMat = 0,
                    player = player,
                    MaxEtap = cfg.MaxEtap,
                    CurrentEtap = 0,
                }
                );

                SendReply(player, string.Format(Messages["Wood"]));
                return;
            }
        }

        object OnDispenserGather(ResourceDispenser dispenser, BaseEntity entity, Item item)
        {
            BasePlayer player = entity?.ToPlayer();
            if (player == null) return null;

            switch (item.info.shortname)
            {
                case "wood":
                    if (UnityEngine.Random.Range(0f, 350f) < cfg.Chance)
                    {
                        AddSeed(player);
                    }
                    BaseEntity wood1 = dispenser.GetComponentInParent<TreeEntity>();

                    List<Wood> list = new List<Wood>();
                    foreach (var wood in woods)
                    {
                        if (wood == null || wood.wood == null) return null;
                        if (wood.DownBox) return null;
                        if (wood.wood == wood1)
                        {
                            if (wood.boxs.Count == 0)
                            {
                                SendReply(player, string.Format(Messages["Box"]));
                                return false;
                            }
                            foreach (var box in wood.boxs)
                            {
                                FreeableLootContainer l = box.GetComponent<FreeableLootContainer>();
                                l.SetFlag(BaseEntity.Flags.Reserved8, false, true);
                                l.SendNetworkUpdate();
                                box.SetFlag(BaseEntity.Flags.Reserved8, false, true);
                                box.SendNetworkUpdate();
                                Rigidbody rb = box.GetComponent<Rigidbody>();
                                rb.useGravity = true;
                                rb.mass = 4f;
                                rb.isKinematic = false;
                                box.SendNetworkUpdate();
                                wood.DownBox = true;
                            }
                            woods.Remove(wood);
                            return null;
                        }
                    }
                    break;
            }
            return null;
        }

        void Unload()
        {
            foreach (var player in BasePlayer.activePlayerList)
            {
                Item x = player.inventory.FindItemID(seed.shortname);
                if (x != null)
                {
                    x.RemoveFromContainer();
                    x.Remove(0f);
                }
            }
            foreach (var wood in woods)
            {
                if (wood.plant != null)
                    wood.plant.Kill();

                if (wood.boxs != null)
                {
                    foreach (var box in wood.boxs)
                    {
                        box.Kill();
                    }
                }

                if (wood.wood != null)
                    wood.wood.Kill();
            }
        }

        #endregion

        #region MyMethods

        #region Timer
        public void TimerTick()
        {
            if (woods.Count > 0 || woods != null)
            {
                woods.ForEach(wood => WoodRost(wood));
            }
        }

        #endregion

        #region Wood

        public void WoodRost(Wood wood)
        {
            if (wood == null) return;

            if (wood.CurrentEtap < wood.MaxEtap)
            {
                wood.isSpawned = false;
                if (wood.CurrentMaturation < wood.MaxMaturation)
                {
                    wood.CurrentMaturation++;
                    if (!wood.isSpawned)
                    {
                        if (wood.CurrentEtap == 0)
                        {
                            wood.plant.growthAge = 1f;
                            wood.plant.state = PlantProperties.State.Seedling;
                            wood.plant.SendNetworkUpdate();
                        }
                    }
                }
                else
                {
                    if (!wood.isSpawned)
                    {
                        SpawnWood(wood, wood.CurrentEtap);
                    }
                    wood.CurrentMaturation = 0;
                    wood.CurrentEtap++;
                    return;
                }
            }
            else
            {
                if (wood.isSpawned)
                {
                    if (!wood.DownBox)
                    {
                        int count = wood.boxs.Count - 1;
                        if (wood.boxs.Count < cfg.BoxCount)
                        {
                            if (wood.BoxMat < wood.BoxMaxMat)
                            {
                                wood.BoxMat++;
                            }
                            else
                            {
                                wood.BoxMat = 0;
                                Puts("Спавню ящики");
                                SpawnBox(wood, count);
                            }
                        }
                    }
                    return;

                }
            }
        }

        public void SpawnWood(Wood wood, int etap)
        {
            if (wood == null) return;

            if (etap > 0)
                wood.wood.Kill();

            BaseEntity Wood = GameManager.server.CreateEntity(cfg.etaps[etap], wood.woodPos);
            wood.plant.Kill();
            Wood.Spawn();
            wood.wood = Wood;
            wood.boxs = new List<BaseEntity>();
            wood.isSpawned = true;
            Wood.SendNetworkUpdate();
        }


        #endregion

        #region Seed

        [ChatCommand("seed")]
        void GiveSeed(BasePlayer player, string command, string[] args)
        {
            if (player.IPlayer.HasPermission(cfg.Permission))
            {
                if (player.IsAdmin)
                    player.IPlayer.GrantPermission(cfg.Permission);
                else
                {
                    SendReply(player, string.Format(Messages["Permission"]));
                    Effect.server.Run(cfg.ErrorEffect, player, 0, Vector3.zero, Vector3.forward);
                    return;
                }
            }
            if (player == null) return;
            if (args.Length != 0)
            {
                SendReply(player, string.Format(Messages["CmdError"]));
                Effect.server.Run(cfg.ErrorEffect, player, 0, Vector3.zero, Vector3.forward);
                return;
            }
            AddSeed(player);
        }

        void AddSeed(BasePlayer player)
        {
            if (player == null) return;
            Item sd = ItemManager.CreateByName(seed.shortname, 1, seed.skinId);
            sd.name = seed.name;
            player.GiveItem(sd, BaseEntity.GiveItemReason.Crafted);
            SendReply(player, string.Format(Messages["SeedGived"]));
            Effect.server.Run(cfg.SucEffect, player, 0, Vector3.zero, Vector3.forward);
        }

        #endregion

        #region Boxs

        public void SpawnBox(Wood wood, int i)
        {
            if (wood == null) return;
            if (wood != null)
            {
                Vector3 pos = wood.wood.ServerPosition;
                pos.y += UnityEngine.Random.Range(4.9f, 5.0f);
                pos.x += UnityEngine.Random.Range(-6, 6 + i);
                pos.z += UnityEngine.Random.Range(-i, 6);
                BaseEntity box = GameManager.server.CreateEntity(cfg.CrateBasic, pos);
                wood.boxs.Add(box);
                box.Spawn();
                AddLoot(box);
                box.SendNetworkUpdate();
            }
        }

        public void AddLoot(BaseEntity box)
        {
            if (box == null) return;
            LootContainer container = box.GetComponent<LootContainer>();
            container.inventory.itemList.Clear();
            for (int i = 0; i < cfg.ItemsCount; i++)
            {
                CaseItem c = cfg.casesItems[UnityEngine.Random.Range(0, cfg.casesItems.Count - 1)];
                int Count = 0;
                if (c.Random)
                {
                    Count = UnityEngine.Random.Range(c.Min, c.Max);
                }
                else
                {
                    Count = c.Count;
                }
                Item x = ItemManager.CreateByName(c.shortname, Count);
                x.MoveToContainer(container.inventory, -1);
            }
        }

        #endregion

        #region Other

        Wood SearchFromEntity(PlantEntity entity)
        {
            if (entity == null) return null;
            foreach (var wood in woods)
            {
                if (wood.plant == entity)
                {
                    return wood;
                }
            }
            return null;
        }

        public void UpdateText()
        {
            foreach (var player in BasePlayer.activePlayerList)
            {
                if (player != null && !(player is BaseNpc))
                {
                    foreach (var wood in woods)
                    {
                        if (wood != null)
                        {
                            if (wood.wood != null)
                            {
                                float distance = Vector3.Distance(player.ServerPosition, wood.wood.ServerPosition);
                                if (distance <= 4.2f)
                                {
                                    ShowText(wood, player);
                                }
                            }
                        }
                    }
                }
            }
        }

        public void ShowText(Wood wood, BasePlayer player)
        {
            if (wood == null || wood.wood == null || player == null) return;
            string text = "";
            string color = "#adadad";
            if (wood.CurrentEtap < wood.MaxEtap) text = $"<size={cfg.FontSize}><color={color}>ЛАЙТИНГ ДЕРЕВО</color></size>\n\n<size={cfg.FontEtapSize}>Стадия: {wood.CurrentEtap} / {wood.MaxEtap}</size>";
            else text = $"<size={cfg.FontSize}><color={color}>ЛАЙТИНГ ДЕРЕВО</color></size>\n<size={cfg.FontProcentSize}>Ящики: {wood.boxs.Count} / {cfg.BoxCount}</size>\n\n<size={cfg.FontEtapSize}>Стадия: {wood.CurrentEtap} / {wood.MaxEtap}</size>";

            player.SendConsoleCommand("ddraw.text", 0.3f, cfg.Color, wood.wood.transform.position + cfg.pos, text);
        }

        #endregion


        #endregion

    }
}

// --- End of file: ShiningSeed.cs ---
// --- Next file ---

// --- GitHub Source URL: https://github.com/RustyyTown/plugins/blob/main/RaidAlerts.cs ---
// --- Original Local Path: RaidAlerts.cs ---

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Oxide.Core;
using Oxide.Core.Libraries;
using Oxide.Core.Libraries.Covalence;
using Rust;
using UnityEngine;
using Server = ConVar.Server;

namespace Oxide.Plugins
{
    [Info("Raid Alerts", "Ryz0r/Mevent", "1.0.2")]
    [Description("Allows players with permissions to receive alerts when explosives are thrown or fired.")]
    public class RaidAlerts : CovalencePlugin
    {
        private const string RaidAlertCommands = "raidalerts.use";

        private readonly Dictionary<string, float> _alertedUsers = new Dictionary<string, float>();

        private readonly List<string> _enabledPlayersList = new List<string>();

        private void SaveData()
        {
            Interface.Oxide.DataFileSystem.WriteObject(Name, _enabledPlayersList);
        }

        #region Configuration

        private Configuration _config;

        private class Configuration
        {
            [JsonProperty(PropertyName = "UseWebhook")]
            public bool UseWebhook;

            [JsonProperty(PropertyName = "WebhookURL")]
            public string WebhookUrl = "";

            [JsonProperty(PropertyName = "OutputCooldown")]
            public float OutputCooldown = 5f;
        }

        protected override void LoadConfig()
        {
            base.LoadConfig();
            try
            {
                _config = Config.ReadObject<Configuration>();
                if (_config == null) throw new Exception();
                SaveConfig();
            }
            catch
            {
                PrintError("Your configuration file contains an error. Using default configuration values.");
                LoadDefaultConfig();
            }
        }

        protected override void LoadDefaultConfig()
        {
            PrintWarning("A new configuration file is being generated.");
            _config = new Configuration();
        }

        protected override void SaveConfig()
        {
            Config.WriteObject(_config);
        }

        #endregion

        protected override void LoadDefaultMessages()
        {
            lang.RegisterMessages(new Dictionary<string, string>
            {
                ["IncorrectArgs"] = "You are using the command incorrectly. Try /alerts on or /alerts off.",
                ["AlreadyReceiving"] = "You are already receiving alerts. Try /alerts off.",
                ["NotReceiving"] = "You are not receiving alerts. Try /alerts on.",
                ["NowReceiving"] = "You will now receive alerts when a raid is happening.",
                ["NoLongerReceiving"] = "You will no longer receive alerts when a raid is happening.",
                ["ThrownAlert"] = "{0} has thrown a {1} at the location {2}.",
                ["FiredAlert"] = "{0} has fired a Rocket/HE Grenade at the location {1}.",
                ["GenRaidAlert"] = "{0} is using explosive ammo or fire ammo at the location {1}.",
                ["NoPerm"] = "You don't have the permissions to use this command."
            }, this);
        }

        private void OnNewSave(string filename)
        {
            if (Interface.Oxide.DataFileSystem.ExistsDatafile(Name))
            {
                Interface.Oxide.DataFileSystem.GetFile(Name).Clear();
                Interface.Oxide.DataFileSystem.GetFile(Name).Save();

                Puts($"Wiped '{Name}.json'");
            }
        }

        private void Init()
        {
            permission.RegisterPermission(RaidAlertCommands, this);
        }

        [Command("alerts")]
        private void AlertsCommand(IPlayer player, string command, string[] args)
        {
            if (player.HasPermission(RaidAlertCommands))
            {
                if (args.Length == 0 || args.Length > 1)
                {
                    player.Reply(lang.GetMessage("IncorrectArgs", this, player.Id));
                    return;
                }

                switch (args[0])
                {
                    case "on":
                        if (_enabledPlayersList.Contains(player.Id))
                        {
                            player.Reply(lang.GetMessage("AlreadyReceiving", this, player.Id));
                            return;
                        }

                        _enabledPlayersList.Add(player.Id);
                        player.Reply(lang.GetMessage("NowReceiving", this, player.Id));
                        SaveData();
                        break;
                    case "off":
                        if (!_enabledPlayersList.Contains(player.Id))
                        {
                            player.Reply(lang.GetMessage("NotReceiving", this, player.Id));
                            return;
                        }

                        _enabledPlayersList.Remove(player.Id);
                        player.Reply(lang.GetMessage("NoLongerReceiving", this, player.Id));
                        SaveData();
                        break;
                }
            }
            else
            {
                player.Reply(lang.GetMessage("NoPerm", this, player.Id));
            }
        }

        private void OnExplosiveThrown(BasePlayer player, BaseEntity entity, ThrownWeapon item)
        {
            var playerThrow = player.displayName;
            var entityLocation = entity.transform.position;
            var explosiveUsed = item.ShortPrefabName;

            switch (explosiveUsed)
            {
                case "explosive.timed.entity":
                    explosiveUsed = "C4";
                    break;
                case "explosive.satchel.entity":
                    explosiveUsed = "Satchel";
                    break;
                case "grenade.beancan.entity":
                    explosiveUsed = "Beancan";
                    break;
                case "grenade.f1.entity":
                    explosiveUsed = "Grenade";
                    break;
                case "survey_charge":
                    explosiveUsed = "Survey Charge";
                    break;
            }

            foreach (var user in BasePlayer.activePlayerList)
                if (_enabledPlayersList.Contains(user.UserIDString))
                    user.ChatMessage(string.Format(lang.GetMessage("ThrownAlert", this, player.UserIDString),
                        playerThrow, explosiveUsed, GetGrid(entityLocation)));

            if (_config.UseWebhook && _config.WebhookUrl != null)
                SendDiscordMessage(playerThrow, entityLocation, explosiveUsed);
        }

        private object OnEntityTakeDamage(BaseCombatEntity entity, HitInfo info)
        {
            if (!info.damageTypes.Has(DamageType.Explosion) || info.InitiatorPlayer == null ||
                _alertedUsers.ContainsValue(entity.transform.position.x)) return null;

            var attackerName = info.InitiatorPlayer.displayName;

            timer.Once(_config.OutputCooldown, () => _alertedUsers.Remove(attackerName));

            _alertedUsers[attackerName] = entity.transform.position.x;

            foreach (var user in BasePlayer.activePlayerList.Where(user =>
                _enabledPlayersList.Contains(user.UserIDString)))
            {
                user.ChatMessage(string.Format(lang.GetMessage("GenRaidAlert", this, user.UserIDString),
                    attackerName, GetGrid(entity.transform.position)));
                return true;
            }

            if (_config.UseWebhook && _config.WebhookUrl != null)
                SendDiscordMessage(attackerName, entity.transform.position, "Explo/Fire");

            return null;
        }

        private void OnRocketLaunched(BasePlayer player, BaseEntity entity)
        {
            var playerThrow = player.displayName;
            var entityLocation = entity.transform.position;

            foreach (var user in BasePlayer.activePlayerList.Where(user =>
                _enabledPlayersList.Contains(user.UserIDString)))
                user.ChatMessage(string.Format(lang.GetMessage("FiredAlert", this, player.UserIDString),
                    playerThrow, GetGrid(entityLocation)));

            if (_config.UseWebhook && _config.WebhookUrl != null)
                SendDiscordMessage(playerThrow, entityLocation, "Rocket/HE Grenade");
        }

        private void SendDiscordMessage(string playerName, Vector3 entityLocation, string explosive)
        {
            var embed = new Embed()
                .AddField("Player Name:", playerName, true)
                .AddField("Explosive Used:", explosive, false)
                .AddField("Rocket Location:", GetGrid(entityLocation), false);

            webrequest.Enqueue(_config.WebhookUrl, new DiscordMessage("", embed).ToJson(), (code, response) => { },
                this,
                RequestMethod.POST, new Dictionary<string, string>
                {
                    { "Content-Type", "application/json" }
                });
        }

        #region Discord Stuff

        private class DiscordMessage
        {
            public DiscordMessage(string content, params Embed[] embeds)
            {
                Content = content;
                Embeds = embeds.ToList();
            }

            [JsonProperty("content")] public string Content { get; set; }
            [JsonProperty("embeds")] public List<Embed> Embeds { get; set; }

            public string ToJson()
            {
                return JsonConvert.SerializeObject(this);
            }
        }

        private class Embed
        {
            [JsonProperty("fields")] public List<Field> Fields { get; set; } = new List<Field>();

            public Embed AddField(string name, string value, bool inline)
            {
                Fields.Add(new Field(name, Regex.Replace(value, "<.*?>", string.Empty), inline));

                return this;
            }
        }

        private class Field
        {
            public Field(string name, string value, bool inline)
            {
                Name = name;
                Value = value;
                Inline = inline;
            }

            [JsonProperty("name")] public string Name { get; set; }
            [JsonProperty("value")] public string Value { get; set; }
            [JsonProperty("inline")] public bool Inline { get; set; }
        }

        #endregion

        #region Utils

        private static string GetGrid(Vector3 pos)
        {
            var letter = 'A';
            var x = Mathf.Floor((pos.x + Server.worldsize / 2f) / 146.3f) % 26;
            var z = Mathf.Floor(Server.worldsize / 146.3f) -
                    Mathf.Floor((pos.z + Server.worldsize / 2f) / 146.3f);
            letter = (char)(letter + x);
            return $"{letter}{z}";
        }

        #endregion
    }
}

// --- End of file: RaidAlerts.cs ---
// --- Next file ---

// --- GitHub Source URL: https://github.com/RustyyTown/plugins/blob/main/ClearNight.cs ---
// --- Original Local Path: ClearNight.cs ---

﻿using Facepunch;
using Network;
using Newtonsoft.Json;
using Oxide.Core;
using Oxide.Core.Plugins;
using ProtoBuf;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UnityEngine;

namespace Oxide.Plugins
{
    [Info("Clear Night", "Clearshot", "2.3.5")]
    [Description("Always bright nights")]
    class ClearNight : CovalencePlugin
    {
        private PluginConfig _config;
        private EnvSync _envSync;
        private List<DateTime> _fullMoonDates = new List<DateTime> {
            new DateTime(2024, 1, 25),
            new DateTime(2024, 2, 24),
            new DateTime(2024, 3, 25),
            new DateTime(2024, 4, 23),
            new DateTime(2024, 5, 23),
            new DateTime(2024, 6, 21),
            new DateTime(2024, 7, 21),
            new DateTime(2024, 8, 19),
            new DateTime(2024, 9, 17),
            new DateTime(2024, 10, 17),
            new DateTime(2024, 11, 15),
            new DateTime(2024, 12, 15)
        };
        private Dictionary<string, string> _weatherSync = new Dictionary<string, string>();
        private DateTime _date;
        private Climate _climate;
        private int _current = 0;
        private bool _playSound = false;

        private bool IsDay = false;
        private bool IsNight = false;

        [PluginReference("NightVision")]
        Plugin NightVisionRef;
        VersionNumber NightVisionMinVersion = new VersionNumber(1, 4, 0);

        void OnServerInitialized()
        {
            _envSync = BaseNetworkable.serverEntities.OfType<EnvSync>().FirstOrDefault();
            _climate = SingletonComponent<global::Climate>.Instance;
            _date = _fullMoonDates[_current];

            TOD_Sky.Instance.Components.Time.OnDay += OnDay;
            TOD_Sky.Instance.Components.Time.OnSunset += OnSunset;

            if (_envSync == null)
            {
                NextTick(() => {
                    LogError("Unable to find EnvSync! Are you using a custom map?");
                    Interface.Oxide.UnloadPlugin(Name);
                });
                return;
            }

            if (NightVisionRef != null && NightVisionRef.Version < NightVisionMinVersion)
            {
                NextTick(() => {
                    LogError($"NightVision version: v{NightVisionRef.Version}");
                    LogError($"Please update NightVision to v{NightVisionMinVersion} or higher!");
                    Interface.Oxide.UnloadPlugin(Name);
                });
                return;
            }

            timer.Every(_config.syncInterval, () => {
                if (!_envSync.limitNetworking)
                {
                    _envSync.limitNetworking = true;
                }

                if (NightVisionRef != null)
                {
                    NightVisionRef?.CallHook("BlockEnvUpdates", true);
                }

                UpdateCelestials();
                SyncWeather();

                List<Connection> subscribers = _envSync.net.group.subscribers;
                if (subscribers != null && subscribers.Count > 0)
                {
                    for (int i = 0; i < subscribers.Count; i++)
                    {
                        Connection connection = subscribers[i];
                        global::BasePlayer basePlayer = connection.player as global::BasePlayer;

                        if (!(basePlayer == null))
                        {
                            if (NightVisionRef != null && (bool)NightVisionRef?.CallHook("IsPlayerTimeLocked", basePlayer)) continue;

                            UpdatePlayerDateTime(ref connection, _config.freezeMoon && IsNight ? _date : _date.AddHours(TOD_Sky.Instance.Cycle.Hour));

                            if (_playSound)
                            {
                                var effect = new Effect(_config.sound, basePlayer, 0, Vector3.zero, Vector3.forward);
                                EffectNetwork.Send(effect, connection);
                            }
                        }
                    }
                }

                _playSound = false;
            });
        }

        void Unload()
        {
            TOD_Sky.Instance.Components.Time.OnDay -= OnDay;
            TOD_Sky.Instance.Components.Time.OnSunset -= OnSunset;

            if (_envSync != null)
            {
                _envSync.limitNetworking = false;
            }

            if (NightVisionRef != null)
            {
                NightVisionRef?.CallHook("BlockEnvUpdates", false);
            }

            ServerMgr.SendReplicatedVars("weather.");
        }

        void OnDay()
        {
            if (_config.randomizeDates)
            {
                _current = UnityEngine.Random.Range(0, _fullMoonDates.Count - 1);
                _date = _fullMoonDates[_current];
            }
            else
            {
                _current = _current >= _fullMoonDates.Count ? 0 : _current;
                _date = _fullMoonDates[_current];
                _current++;
            }
        }

        void OnSunset()
        {
            _playSound = _config.playSoundAtSunset;
        }

        private void UpdatePlayerDateTime(ref Connection connection, DateTime date)
        {
            if (Net.sv.write.Start())
            {
                connection.validate.entityUpdates = connection.validate.entityUpdates + 1;
                BaseNetworkable.SaveInfo saveInfo = new global::BaseNetworkable.SaveInfo
                {
                    forConnection = connection,
                    forDisk = false
                };
                Net.sv.write.PacketID(Message.Type.Entities);
                Net.sv.write.UInt32(connection.validate.entityUpdates);
                using (saveInfo.msg = Pool.Get<Entity>())
                {
                    _envSync.Save(saveInfo);
                    saveInfo.msg.environment.dateTime = date.ToBinary();
                    saveInfo.msg.environment.fog = 0;
                    saveInfo.msg.environment.rain = 0;
                    saveInfo.msg.environment.clouds = 0;
                    saveInfo.msg.environment.wind = 0;
                    if (saveInfo.msg.baseEntity == null)
                    {
                        LogError(this + ": ToStream - no BaseEntity!?");
                    }
                    if (saveInfo.msg.baseNetworkable == null)
                    {
                        LogError(this + ": ToStream - no baseNetworkable!?");
                    }
                    saveInfo.msg.ToProto(Net.sv.write);
                    _envSync.PostSave(saveInfo);
                    Net.sv.write.Send(new SendInfo(connection));
                }
            }
        }

        private void UpdatePlayerWeather(ref Dictionary<string, string> weatherVars)
        {
            if (Net.sv.write.Start())
            {
				List<Network.Connection> list = Facepunch.Pool.GetList<Network.Connection>();
				foreach (Network.Connection connection in Network.Net.sv.connections)
				{
					if (connection.connected)
					{
						list.Add(connection);
					}
				}
				List<KeyValuePair<string, string>> list2 = Facepunch.Pool.GetList<KeyValuePair<string, string>>();
                list2.AddRange(weatherVars.ToList());
                Net.sv.write.PacketID(Message.Type.ConsoleReplicatedVars);
                Net.sv.write.Int32(list2.Count);
                foreach (var item in list2)
                {
                    Net.sv.write.String(item.Key);
                    Net.sv.write.String(item.Value);
                }
                Net.sv.write.Send(new SendInfo(list));
				Facepunch.Pool.FreeList<KeyValuePair<string, string>>(ref list2);
				Facepunch.Pool.FreeList<Network.Connection>(ref list);
            }
        }

        private void UpdateCelestials()
        {
            float f = 0.0174532924f * TOD_Sky.Instance.World.Latitude;
            float num = Mathf.Sin(f);
            float num2 = Mathf.Cos(f);
            float longitude = TOD_Sky.Instance.World.Longitude;
            float num3 = 1.57079637f;
            int year = _date.Year;
            int month = _date.Month;
            int day = _date.Day;
            float num4 = TOD_Sky.Instance.Cycle.Hour - TOD_Sky.Instance.World.UTC;
            float num5 = (float)(367 * year - 7 * (year + (month + 9) / 12) / 4 + 275 * month / 9 + day - 730530) + num4 / 24f;
            float num7 = 23.4393f - 3.563E-07f * num5;
            float f2 = 0.0174532924f * num7;
            float num8 = Mathf.Sin(f2);
            float num9 = Mathf.Cos(f2);
            float num37 = 282.9404f + 4.70935E-05f * num5;
            float num38 = 0.016709f - 1.151E-09f * num5;
            float num39 = 356.047f + 0.985600233f * num5;
            float num40 = 0.0174532924f * num39;
            float num41 = Mathf.Sin(num40);
            float num42 = Mathf.Cos(num40);
            float f6 = num40 + num38 * num41 * (1f + num38 * num42);
            float num43 = Mathf.Sin(f6);
            float num44 = Mathf.Cos(f6) - num38;
            float num45 = Mathf.Sqrt(1f - num38 * num38) * num43;
            float num46 = 57.29578f * Mathf.Atan2(num45, num44);
            float num47 = Mathf.Sqrt(num44 * num44 + num45 * num45);
            float num48 = num46 + num37;
            float f7 = 0.0174532924f * num48;
            float num49 = Mathf.Sin(f7);
            float num50 = Mathf.Cos(f7);
            float num51 = num47 * num50;
            float num52 = num47 * num49;
            float num53 = num51;
            float num54 = num52 * num9;
            float y2 = num52 * num8;
            float num55 = Mathf.Atan2(num54, num53);
            float f8 = Mathf.Atan2(y2, Mathf.Sqrt(num53 * num53 + num54 * num54));
            float num56 = Mathf.Sin(f8);
            float num57 = Mathf.Cos(f8);
            float num58 = num46 + num37 + 180f + 15f * num4;
            float num59 = 0.0174532924f * (num58 + longitude);
            float f9 = num59 - num55;
            float num60 = Mathf.Sin(f9);
            float num61 = Mathf.Cos(f9) * num57;
            float num62 = num60 * num57;
            float num63 = num56;
            float num64 = num61 * num - num63 * num2;
            float num65 = num62;
            float y3 = num61 * num2 + num63 * num;
            float num67 = Mathf.Atan2(y3, Mathf.Sqrt(num64 * num64 + num65 * num65));
            float num68 = num3 - num67;
            float SunZenith = 57.29578f * num68;
            float LerpValue = Mathf.InverseLerp(105f, 90f, SunZenith);
            if (LerpValue > 0.1f)
            {
                IsDay = true;
                IsNight = false;
            }
            else
            {
                IsDay = false;
                IsNight = true;
            }
        }

        private void SyncWeather()
        {
            if (_config.syncWeather)
            {
                _weatherSync["weather.atmosphere_brightness"] = _climate.WeatherOverrides.Atmosphere.Brightness != -1f ? _climate.WeatherOverrides.Atmosphere.Brightness.ToString() : _climate.WeatherState.Atmosphere.Brightness.ToString();
                _weatherSync["weather.atmosphere_contrast"] = _climate.WeatherOverrides.Atmosphere.Contrast != -1f ? _climate.WeatherOverrides.Atmosphere.Contrast.ToString() : _climate.WeatherState.Atmosphere.Contrast.ToString();
                _weatherSync["weather.atmosphere_directionality"] = _climate.WeatherOverrides.Atmosphere.Directionality != -1f ? _climate.WeatherOverrides.Atmosphere.Directionality.ToString() : _climate.WeatherState.Atmosphere.Directionality.ToString();
                _weatherSync["weather.atmosphere_mie"] = _climate.WeatherOverrides.Atmosphere.MieMultiplier != -1f ? _climate.WeatherOverrides.Atmosphere.MieMultiplier.ToString() : _climate.WeatherState.Atmosphere.MieMultiplier.ToString();
                _weatherSync["weather.atmosphere_rayleigh"] = _climate.WeatherOverrides.Atmosphere.RayleighMultiplier != -1f ? _climate.WeatherOverrides.Atmosphere.RayleighMultiplier.ToString() : _climate.WeatherState.Atmosphere.RayleighMultiplier.ToString();
                _weatherSync["weather.clear_chance"] = _climate.Weather.ClearChance.ToString();
                _weatherSync["weather.cloud_attenuation"] = _climate.WeatherOverrides.Clouds.Attenuation != -1f ? _climate.WeatherOverrides.Clouds.Attenuation.ToString() : _climate.WeatherState.Clouds.Attenuation.ToString();
                _weatherSync["weather.cloud_brightness"] = _climate.WeatherOverrides.Clouds.Brightness != -1f ? _climate.WeatherOverrides.Clouds.Brightness.ToString() : _climate.WeatherState.Clouds.Brightness.ToString();
                _weatherSync["weather.cloud_coloring"] = _climate.WeatherOverrides.Clouds.Coloring != -1f ? _climate.WeatherOverrides.Clouds.Coloring.ToString() : _climate.WeatherState.Clouds.Coloring.ToString();
                _weatherSync["weather.cloud_coverage"] = _climate.WeatherOverrides.Clouds.Coverage != -1f ? _climate.WeatherOverrides.Clouds.Coverage.ToString() : _climate.WeatherState.Clouds.Coverage.ToString();
                _weatherSync["weather.cloud_opacity"] = _climate.WeatherOverrides.Clouds.Opacity != -1f ? _climate.WeatherOverrides.Clouds.Opacity.ToString() : _climate.WeatherState.Clouds.Opacity.ToString();
                _weatherSync["weather.cloud_saturation"] = _climate.WeatherOverrides.Clouds.Saturation != -1f ? _climate.WeatherOverrides.Clouds.Saturation.ToString() : _climate.WeatherState.Clouds.Saturation.ToString();
                _weatherSync["weather.cloud_scattering"] = _climate.WeatherOverrides.Clouds.Scattering != -1f ? _climate.WeatherOverrides.Clouds.Scattering.ToString() : _climate.WeatherState.Clouds.Scattering.ToString();
                _weatherSync["weather.cloud_sharpness"] = _climate.WeatherOverrides.Clouds.Sharpness != -1f ? _climate.WeatherOverrides.Clouds.Sharpness.ToString() : _climate.WeatherState.Clouds.Sharpness.ToString();
                _weatherSync["weather.cloud_size"] = _climate.WeatherOverrides.Clouds.Size != -1f ? _climate.WeatherOverrides.Clouds.Size.ToString() : _climate.WeatherState.Clouds.Size.ToString();
                _weatherSync["weather.dust_chance"] = _climate.Weather.DustChance.ToString();
                _weatherSync["weather.fog"] = _climate.WeatherOverrides.Atmosphere.Fogginess != -1f ? _climate.WeatherOverrides.Atmosphere.Fogginess.ToString() : _climate.WeatherState.Atmosphere.Fogginess.ToString();
                _weatherSync["weather.fog_chance"] = _climate.Weather.FogChance.ToString();
                _weatherSync["weather.overcast_chance"] = _climate.Weather.OvercastChance.ToString();
                _weatherSync["weather.rain"] = _climate.WeatherOverrides.Rain != -1f ? _climate.WeatherOverrides.Rain.ToString() : _climate.WeatherState.Rain.ToString();
                _weatherSync["weather.rain_chance"] = _climate.Weather.RainChance.ToString();
                _weatherSync["weather.rainbow"] = _climate.WeatherOverrides.Rainbow != -1f ? _climate.WeatherOverrides.Rainbow.ToString() : _climate.WeatherState.Rainbow.ToString();
                _weatherSync["weather.storm_chance"] = _climate.Weather.StormChance.ToString();
                _weatherSync["weather.thunder"] = _climate.WeatherOverrides.Thunder != -1f ? _climate.WeatherOverrides.Thunder.ToString() : _climate.WeatherState.Thunder.ToString();
                _weatherSync["weather.wind"] = _climate.WeatherOverrides.Wind != -1f ? _climate.WeatherOverrides.Wind.ToString() : _climate.WeatherState.Wind.ToString();

                if (IsNight)
                {
                    foreach (var pair in _config.weatherAtNight)
                    {
                        _weatherSync[pair.Key] = pair.Value;
                    }
                }

                UpdatePlayerWeather(ref _weatherSync);
            } 
            else if (IsNight && _config.weatherAtNight.Count > 0)
            {
                UpdatePlayerWeather(ref _config.weatherAtNight);
            }
        }

        [Command("clearnight.debug")]
        private void DebugCommand(Core.Libraries.Covalence.IPlayer player, string command, string[] args)
        {
            player.Message("clearnight.debug");
            if (!player.IsAdmin && !player.IsServer) return;

            StringBuilder _sb = new StringBuilder();
            _sb.AppendLine("\n*** DEBUG START ***\n");
            _sb.AppendLine($"ClearNight version: {Version}");
            _sb.AppendLine($"ClearNight date: {(_config.freezeMoon && IsNight ? _date : _date.AddHours(TOD_Sky.Instance.Cycle.Hour))}");
            _sb.AppendLine($"ClearNight IsNight: {IsNight}");
            _sb.AppendLine($"ClearNight IsDay: {IsDay}");

            _sb.AppendLine($"\n[Server date and time]");
            _sb.AppendLine($"Year: {TOD_Sky.Instance.Cycle.Year}");
            _sb.AppendLine($"Month: {TOD_Sky.Instance.Cycle.Month}");
            _sb.AppendLine($"Day: {TOD_Sky.Instance.Cycle.Day}");
            _sb.AppendLine($"Hour: {TOD_Sky.Instance.Cycle.Hour}");
            _sb.AppendLine($"IsNight: {TOD_Sky.Instance.IsNight}");
            _sb.AppendLine($"IsDay: {TOD_Sky.Instance.IsDay}");

            _sb.AppendLine($"\n[Config]");
            _sb.AppendLine(JsonConvert.SerializeObject(_config, Formatting.Indented, Config.Settings));

            _sb.AppendLine($"\nNightVision installed: {NightVisionRef != null}");
            if (NightVisionRef != null)
            {
                _sb.AppendLine($"NightVision version: {NightVisionRef.Version}");
            }

            _sb.AppendLine("\n*** DEBUG END ***");
            Puts(_sb.ToString());
            LogToFile("debug", _sb.ToString(), this);
        }

        #region Config

        protected override void LoadDefaultConfig()
        {
			Puts("Generating new default config file...");
            Config.WriteObject(GetDefaultConfig(), true);
        }

        private PluginConfig GetDefaultConfig()
        {
            PluginConfig defaultConfig = new PluginConfig();

			defaultConfig.fullMoonDates = _fullMoonDates.Select(d => d.ToString("MM/dd/yyyy")).ToArray();
            defaultConfig.weatherAtNight = new Dictionary<string, string> {
                { "weather.atmosphere_brightness", "1" },
                { "weather.atmosphere_contrast", "1.5" },
                { "weather.cloud_coverage", "0" },
                { "weather.cloud_size", "0" },
                { "weather.fog", "0" },
                { "weather.fog_chance", "0" }
            };

            return defaultConfig;
        }

        protected override void LoadConfig()
        {
            base.LoadConfig();
            _config = Config.ReadObject<PluginConfig>();

            bool invalidDates = true;
            if (_config.fullMoonDates.Length > 0)
            {
                List<DateTime> tempDates = new List<DateTime>();
                foreach (string date in _config.fullMoonDates)
                {
                    DateTime dt;
                    if (DateTime.TryParse(date, out dt))
                    {
                        tempDates.Add(dt);
                    }
                    else
                    {
                        Puts($"invalid date: {date}");
                    }
                }

                if (tempDates.Count > 0)
                {
                    invalidDates = false;
                    _fullMoonDates = tempDates;
                    Puts($"registered {_fullMoonDates.Count} {(_fullMoonDates.Count == 1 ? "date" : "dates")} from config");
                }
            }

            if (invalidDates)
            {
                Puts("no valid dates registered, using default dates");
            }

            Config.WriteObject(_config, true);
        }

        private class PluginConfig
        {
            public string[] fullMoonDates;
            public Dictionary<string, string> weatherAtNight;
            public bool syncWeather = true;
            public bool randomizeDates = false;
            public bool freezeMoon = false;
            public bool playSoundAtSunset = false;
            public string sound = "assets/bundled/prefabs/fx/player/howl.prefab";
            public float syncInterval = 5f;
        }

        #endregion
    }
}


// --- End of file: ClearNight.cs ---
// --- Next file ---

// --- GitHub Source URL: https://github.com/RustyyTown/plugins/blob/main/SupplySignalAlert.cs ---
// --- Original Local Path: SupplySignalAlert.cs ---

using System.Collections.Generic;
using System;
using System.Linq;
using System.Reflection;
using System.Data;
using UnityEngine;
using Oxide.Core;
using Rust;

namespace Oxide.Plugins
{
    [Info("Supply Signal Alerter", "Lederp", "1.0.0")]
    class SupplySignalAlert : RustPlugin
    {
        void OnWeaponThrown(BasePlayer player, BaseEntity entity)
        {
            if (entity is SupplySignal)
            {
                timer.Once(2.5f, () =>
                    {
                        SupplySignal signal = entity as SupplySignal;
                        Vector3 location = signal.GetEstimatedWorldPosition();
                        ConsoleSystem.Broadcast("chat.add", 0, string.Format("<color=orange>{0}:</color> {1}", "SERVER (Supply Drop)", "Location: X: " + location.x + " Y: " + location.y + " Z: " + location.z));
                    });
            }
        }
    }
}


// --- End of file: SupplySignalAlert.cs ---
// --- Next file ---

// --- GitHub Source URL: https://github.com/RustyyTown/plugins/blob/main/SightsSystem.cs ---
// --- Original Local Path: SightsSystem.cs ---

using System.Linq;
using System.Collections.Generic;
using Oxide.Core;
using UnityEngine;
using Oxide.Game.Rust.Cui;
using Oxide.Core.Plugins;

namespace Oxide.Plugins
{
    [Info("SightsSystem", "Chibubrik", "1.1.0")]
    class SightsSystem : RustPlugin
    {
        #region Вар
        string Layer = "Sights_UI";
        private string MainIMG = "https://imgur.com/zhKG0qA.png";

        [PluginReference] Plugin ImageLibrary;

        public Dictionary<ulong, string> DB = new Dictionary<ulong, string>();
        #endregion

        #region Хуки
        void OnServerInitialized()
        {
            if (Interface.Oxide.DataFileSystem.ExistsDatafile("SightsSystem/PlayerList"))
                DB = Oxide.Core.Interface.Oxide.DataFileSystem.ReadObject<Dictionary<ulong, string>>("SightsSystem/PlayerList");
            foreach (var check in Hair)
                ImageLibrary.Call("AddImage", check, check);
            
            ImageLibrary.Call("AddImage", MainIMG, "MainIMG");

            foreach (var check in BasePlayer.activePlayerList)
                OnPlayerConnected(check);
        }

        void OnPlayerConnected(BasePlayer player)
        {
            if (!DB.ContainsKey(player.userID))
                DB.Add(player.userID, "https://imgur.com/EJsPEkn.png");

            int x = 0;
            for (int z = 0; z < Hair.Count(); z++)
                x = z;

            if (DB[player.userID] != Hair.ElementAt(x))
                HairUI(player);
        }

        void OnPlayerDisconnected(BasePlayer player) => SaveDataBase();

        void Unload() => SaveDataBase();

        void SaveDataBase() => Oxide.Core.Interface.Oxide.DataFileSystem.WriteObject("SightsSystem/PlayerList", DB);
        #endregion

        #region Картинки прицелов
        List<string> Hair = new List<string>()
        {
            "https://imgur.com/O1T5M2S.png",
            "https://imgur.com/udgZFcU.png",
            "https://imgur.com/7zs9aHt.png",
            "https://imgur.com/iCrNfVl.png",
            "https://imgur.com/lBZ2Khj.png",
            "https://i.imgur.com/mIbPpj3.png",
        "https://i.imgur.com/XCSkVNk.png",
        "https://i.imgur.com/RACMuqg.png",
        "https://i.imgur.com/tqtF73m.png",
        "https://i.imgur.com/uIHaR7Q.png",
        "https://i.imgur.com/Dbxnsm1.png",
        "https://i.imgur.com/bzsU7kE.png",
        "https://i.imgur.com/2Wke9lp.png",
            "https://imgur.com/EJsPEkn.png"
        };
        #endregion

        #region Команды
        [ChatCommand("hair")]
        void ChatHair(BasePlayer player) => SightsUI(player);

        [ConsoleCommand("hair")]
        void ConsoleHair(ConsoleSystem.Arg args)
        {
            var player = args.Player();

            int id = int.Parse(args.Args[0]);
            DB[player.userID] = Hair.ElementAt(id);
            InterfaceUI(player);

            int x = 0;
            for (int z = 0; z < Hair.Count(); z++)
                x = z;

            if (id == x)
                CuiHelper.DestroyUi(player, "Hair");
            else
                HairUI(player);
        }
        #endregion

        [ConsoleCommand("closeui")]
        void closeui228(ConsoleSystem.Arg args)
        {
            BasePlayer player = args.Player();
            if (player == null) return;
            //if (openedui.Contains(player.userID)) openedui.Remove(player.userID);
            CuiHelper.DestroyUi(player, Layer);
            CuiHelper.DestroyUi(player, "container");
        }
        
        #region Интерфейс
        void SightsUI(BasePlayer player)
        {
            CuiHelper.DestroyUi(player, Layer);
            var container = new CuiElementContainer();

            container.Add(new CuiPanel
            {
                Image = { Color = "0 0 0 0" },
                RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                CursorEnabled = true,
            }, "Overlay", Layer);
            
            container.Add(new CuiButton
            {
                RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                Button = { Color = "0 0 0 0", Command = "closeui" },
                Text = { Text = "" }
            }, Layer);

            container.Add(new CuiElement
            {
                Parent = Layer,
                Name = "container",
                Components =
                {
                    new CuiImageComponent { Png = (string) ImageLibrary.Call("GetImage", "MainIMG"), Material = "assets/icons/greyout.mat"},
                    new CuiRectTransformComponent { AnchorMin = "0.2406265 0.1981481", AnchorMax = "0.7598959 0.795370" }
                }
            });
            
            container.Add(new CuiButton
            {
                RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" },
                Button = { Color = "0 0 0 0", Command = "CloseUI" },
                Text = { Text = "" }
            }, "container");
            
            container.Add(new CuiLabel
            {
                RectTransform = { AnchorMin = "0.3842712 0.8139536", AnchorMax = "0.6459364 0.9689922" },
                Text = { Text = $"ПРИЦЕЛЫ", Color = HexToRustFormat("#CAD5DF"), Align = TextAnchor.UpperCenter, FontSize = 28, Font = "robotocondensed-bold.ttf" }
            },  "container");
            
            container.Add(new CuiLabel
            {
                RectTransform = { AnchorMin = "0.3741207 0.7937984", AnchorMax = "0.665997 0.9100775" },
                Text = { Text = $"Здесь вы можете выбрать прицел", Color = HexToRustFormat("#8E8E8E"), Align = TextAnchor.UpperCenter, FontSize = 13, Font = "robotocondensed-regular.ttf" }
            },  "container");

            /*
            container.Add(new CuiButton
            {
                RectTransform = { AnchorMin = $"0 0", AnchorMax = $"1 1", OffsetMax = "0 0" },
                Button = { Color = "0 0 0 0", Close = Layer },
                Text = { Text = "" }
            }, Layer);

            container.Add(new CuiButton
            {
                RectTransform = { AnchorMin = "0 0.54", AnchorMax = "1 0.61", OffsetMax = "0 0" },
                Button = { Color = "0 0 0 0" },
                Text = { Text = $"<size=20>ПРИЦЕЛЫ</size>\nЗдесь, вы можете выбрать прицел!", Color = "1 1 1 0.5", Align = TextAnchor.MiddleCenter, Font = "robotocondensed-regular.ttf", FontSize = 12 }
            }, Layer);
            */

            CuiHelper.AddUi(player, container);
            InterfaceUI(player);
        }

        void InterfaceUI(BasePlayer player)
        {
            CuiHelper.DestroyUi(player, "Hairs");
            var container = new CuiElementContainer();

            container.Add(new CuiPanel
            {
                RectTransform = { AnchorMin = $"0.08029229 0.6031013", AnchorMax = $"0.9637408 0.9736441", OffsetMax = "0 0" },
                Image = { Color = "0 0 0 0" }
            }, "container", "Hairs");

            float width = 0.1666f, height = 0.62f, startxBox = 0f, startyBox = 0.68f - height, xmin = startxBox, ymin = startyBox;
            int z = 0;
            foreach(var check in Hair)
            {
                container.Add(new CuiButton
                {
                    RectTransform = { AnchorMin = xmin + " " + ymin, AnchorMax = (xmin + width) + " " + (ymin + height * 1), OffsetMin = "3 0", OffsetMax = "-3 0" },
                    Button = { Color = "1 1 1 0.1", Command = $"hair {z}" },
                    Text = { Text = "" }
                }, "Hairs", "Image");

                container.Add(new CuiElement
                {
                    Parent = "Image",
                    Components =
                    {
                        new CuiRawImageComponent { Png = (string) ImageLibrary.Call("GetImage", Hair.ElementAt(z)), Color = "1 1 1 0.3" },
                        new CuiRectTransformComponent { AnchorMin = "0 0", AnchorMax = "1 1", OffsetMin = "20 20", OffsetMax = "-20 -20" }
                    }
                });

                var color = DB[player.userID] == check ? "0.71 0.24 0.24 1" : "0.28 0.28 0.28 1";
                container.Add(new CuiPanel
                {
                    RectTransform = { AnchorMin = "0 0", AnchorMax = "1 0.03", OffsetMax = "0 0" },
                    Image = { Color = color }
                }, "Image");

                xmin += width;
                if (xmin + width >= 1)
                {
                    xmin = startxBox;
                    ymin -= height;
                }
                z++;
            }

            CuiHelper.AddUi(player, container);
        }

        void HairUI(BasePlayer player)
        {
            CuiHelper.DestroyUi(player, "Hair");
            var container = new CuiElementContainer();

            container.Add(new CuiPanel
            {
                CursorEnabled = false,
                RectTransform = { AnchorMin = "0.5 0.5", AnchorMax = "0.5 0.5", OffsetMax = "0 0" },
                Image = { Color = "0 0 0 0" }
            }, "Hud", "Hair");

            container.Add(new CuiElement
            {
                Parent = "Hair",
                Components =
                {
                    new CuiRawImageComponent { Png = (string) ImageLibrary.Call("GetImage", DB[player.userID]), Color = "1 1 1 0.8" },
                    new CuiRectTransformComponent { AnchorMin = "0 0", AnchorMax = "1 1", OffsetMin = "-10 -10", OffsetMax = "10 10" }
                }
            });

            CuiHelper.AddUi(player, container);
        }
        #endregion
        
        private static string HexToRustFormat(string hex)
        { 
            Color color;
            ColorUtility.TryParseHtmlString(hex, out color);
            return string.Format("{0:F2} {1:F2} {2:F2} {3:F2}", color.r, color.g, color.b, color.a);
        }
        
    }
}

// --- End of file: SightsSystem.cs ---
// --- Next file ---

// --- GitHub Source URL: https://github.com/RustyyTown/plugins/blob/main/NeonSkins.cs ---
// --- Original Local Path: NeonSkins.cs ---

using System;
using System.Collections.Generic;
using System.Linq;
using Oxide.Core;
using Oxide.Core.Configuration;
using UnityEngine;
using Network;
using Oxide.Game.Rust.Cui;

namespace Oxide.Plugins
{
    [Info("NeonSkins", "Colon Blow", "1.0.11")]
    class NeonSkins : RustPlugin
    {

        // Added option to change sign refresh rate (tickrate)
        // added fixes to prevent entities not removing from saved sign data list when entity dies

        #region Load and Data Save

        BaseEntity newNeon;
        private bool initialized;

        void Loaded()
        {
            LoadVariables();
            lang.RegisterMessages(Messages, this);
            permission.RegisterPermission("neonskins.add", this);
            permission.RegisterPermission("neonskins.skin", this);
            permission.RegisterPermission("neonskins.wings", this);
            permission.RegisterPermission("neonskins.attire", this);
            permission.RegisterPermission("neonskins.nolimit", this);
            permission.RegisterPermission("neonskins.viplimit", this);
            timer.In(5, RestoreNeonSkins);
        }

        private void OnServerInitialized()
        {
            LoadDataFile();
            initialized = true;
            timer.In(3, RestoreNeonSkins);
        }

        bool isAllowed(BasePlayer player, string perm) => permission.UserHasPermission(player.UserIDString, perm);

        private void RestoreNeonSkins()
        {
            if (storedData.saveSkinData.Count > 0)
            {
                BaseEntity[] objects = BaseEntity.saveList.Where(x => x is BaseEntity).ToArray();
                if (objects != null)
                {
                    foreach (var obj in objects)
                    {
                        if (storedData.saveSkinData.ContainsKey(obj.net.ID))
                        {
                            var getent = obj.GetComponent<BaseEntity>();
                            if (getent) getent.Invoke("KillMessage", 0.1f);

                            var signownerid = storedData.saveSkinData[obj.net.ID].ownerid;
                            var signpos = StringToVector3(storedData.saveSkinData[obj.net.ID].pos);
                            var signrot = StringToQuaternion(storedData.saveSkinData[obj.net.ID].rot);
                            var signangle = StringToVector3(storedData.saveSkinData[obj.net.ID].eangles);
                            var signskin1 = storedData.saveSkinData[obj.net.ID].skin1;
                            var signskin2 = storedData.saveSkinData[obj.net.ID].skin2;
                            var signskin3 = storedData.saveSkinData[obj.net.ID].skin3;
                            var signtickrate = storedData.saveSkinData[obj.net.ID].tickrate;
                            SpawnSign(signownerid, signpos, signrot, signangle, signskin1, signskin2, signskin3, signtickrate);

                            RemovePlayerID(signownerid);
                            storedData.saveSkinData.Remove(obj.net.ID);
                            SaveData();

                            AddPlayerID(signownerid);
                        }
                    }
                }
            }
        }

        #endregion

        #region Configuration

        bool Changed;
        bool BlockSignDamage = true;

        bool UseMaxSignChecks = true;
        public int maxsigns = 2;
        public int maxvipsigns = 10;

        static ulong sign1skin1 = 1315739526;
        static ulong sign1skin2 = 1315738576;
        static ulong sign1skin3 = 1315736914;

        static ulong sign2skin1 = 1315783052;
        static ulong sign2skin2 = 1315783411;
        static ulong sign2skin3 = 1315783777;

        static ulong sign3skin1 = 1316693925;
        static ulong sign3skin2 = 1316694367;
        static ulong sign3skin3 = 1316694805;

        static ulong sign4skin1 = 1321558935;
        static ulong sign4skin2 = 1321560877;
        static ulong sign4skin3 = 1318568592;

        static ulong sign5skin1 = 1327047573;
        static ulong sign5skin2 = 1327050402;
        static ulong sign5skin3 = 1327051288;

        //neon skin
        static ulong sign6skin1 = 1328477513;
        static ulong sign6skin2 = 1328482753;
        static ulong sign6skin3 = 1328482753;

        //Coffee
        static ulong sign7skin1 = 1328494655;
        static ulong sign7skin2 = 1328496689;
        static ulong sign7skin3 = 1328496689;

        //IceCream
        static ulong sign8skin1 = 1328562541;
        static ulong sign8skin2 = 1328563646;
        static ulong sign8skin3 = 1328563646;

        //Live Music
        static ulong sign9skin1 = 1328565602;
        static ulong sign9skin2 = 1328566647;
        static ulong sign9skin3 = 1328566647;

        //24HR Open
        static ulong sign10skin1 = 1328523019;
        static ulong sign10skin2 = 1328525057;
        static ulong sign10skin3 = 1328526730;

        //Wifi
        static ulong sign11skin1 = 1328530331;
        static ulong sign11skin2 = 1328532600;
        static ulong sign11skin3 = 1328532600;

        //24HR
        static ulong sign12skin1 = 1328657360;
        static ulong sign12skin2 = 1328658142;
        static ulong sign12skin3 = 1328658903;

        //Bar
        static ulong sign13skin1 = 1328660615;
        static ulong sign13skin2 = 1328661436;
        static ulong sign13skin3 = 1328662136;

        //Coffee Bar
        static ulong sign14skin1 = 1328663741;
        static ulong sign14skin2 = 1328664598;
        static ulong sign14skin3 = 1328665457;

        //Food
        static ulong sign15skin1 = 1328666723;
        static ulong sign15skin2 = 1328667715;
        static ulong sign15skin3 = 1328668631;

        //Motel
        static ulong sign16skin1 = 1328669415;
        static ulong sign16skin2 = 1328670130;
        static ulong sign16skin3 = 1328670791;

        //Open Arrow
        static ulong sign17skin1 = 1328671976;
        static ulong sign17skin2 = 1328671976;
        static ulong sign17skin3 = 1328672694;

        static ulong leftwingangel = 1322833102;
        static ulong leftwingfairy = 1322813799;
        static ulong leftwingblack = 1314069609;

        static ulong rightwingangel = 1322833810;
        static ulong rightwingfairy = 1322814164;
        static ulong rightwingblack = 1314070395;

        private void LoadVariables()
        {
            LoadConfigVariables();
            SaveConfig();
        }

        void LoadDefaultConfig()
        {
            Puts("Creating a new config file");
            Config.Clear();
            LoadVariables();
        }

        private void LoadConfigVariables()
        {

            CheckCfg("Max Neon Signs : Normal Authenicated User : ", ref maxsigns);
            CheckCfg("Max Neon Signs : VIP Authenticated User : ", ref maxvipsigns);

            CheckCfg("Block Damage to Signs : ", ref BlockSignDamage);

            CheckCfg("Sign 1 - SkinID for frame 1 : ", ref sign1skin1);
            CheckCfg("Sign 1 - SkinID for frame 2 : ", ref sign1skin2);
            CheckCfg("Sign 1 - SkinID for frame 3 : ", ref sign1skin3);

            CheckCfg("Sign 2 - SkinID for frame 1 : ", ref sign2skin1);
            CheckCfg("Sign 2 - SkinID for frame 2 : ", ref sign2skin2);
            CheckCfg("Sign 2 - SkinID for frame 3 : ", ref sign2skin3);

            CheckCfg("Sign 3 - SkinID for frame 1 : ", ref sign3skin1);
            CheckCfg("Sign 3 - SkinID for frame 2 : ", ref sign3skin2);
            CheckCfg("Sign 3 - SkinID for frame 3 : ", ref sign3skin3);

            CheckCfg("Sign 4 - SkinID for frame 1 : ", ref sign4skin1);
            CheckCfg("Sign 4 - SkinID for frame 2 : ", ref sign4skin2);
            CheckCfg("Sign 4 - SkinID for frame 3 : ", ref sign4skin3);

            CheckCfg("Sign 5 - SkinID for frame 1 : ", ref sign5skin1);
            CheckCfg("Sign 5 - SkinID for frame 2 : ", ref sign5skin2);
            CheckCfg("Sign 5 - SkinID for frame 3 : ", ref sign5skin3);

            CheckCfg("Wings - Angel Wings Skin Left : ", ref leftwingangel);
            CheckCfg("Wings - Angel Wings Skin Right : ", ref rightwingangel);

            CheckCfg("Wings - Fairy Wings Skin Left : ", ref leftwingfairy);
            CheckCfg("Wings - Fairy Wings Skin Right : ", ref rightwingfairy);

            CheckCfg("Wings - Black Wings Skin Left : ", ref leftwingblack);
            CheckCfg("Wings - Black Wings Skin Right : ", ref rightwingblack);
        }

        private void CheckCfg<T>(string Key, ref T var)
        {
            if (Config[Key] is T)
                var = (T)Config[Key];
            else
                Config[Key] = var;
        }

        private void CheckCfgFloat(string Key, ref float var)
        {

            if (Config[Key] != null)
                var = Convert.ToSingle(Config[Key]);
            else
                Config[Key] = var;
        }

        object GetConfig(string menu, string datavalue, object defaultValue)
        {
            var data = Config[menu] as Dictionary<string, object>;
            if (data == null)
            {
                data = new Dictionary<string, object>();
                Config[menu] = data;
                Changed = true;
            }
            object value;
            if (!data.TryGetValue(datavalue, out value))
            {
                value = defaultValue;
                data[datavalue] = value;
                Changed = true;
            }
            return value;
        }

        #endregion

        #region Localization

        string msg(string key, string playerId = null) => lang.GetMessage(key, this, playerId);

        Dictionary<string, string> Messages = new Dictionary<string, string>
        {
            ["notasign"] = "You need to be looking at a sign to use that !! ",
            ["notflying"] = "You need to be flying to use Wings !! ",
            ["tryagain"] = "Something went wrong, please try again !! ",
            ["togglesign"] = "You have toggled the sign !! ",
            ["maxsigns"] = "You have reached your Maximum Neon Sign build limit !!",
            ["notowner"] = "You need to be owner of sign to use that !! ",
            ["notallowed"] = "You are not authorized to use that command !!"
        };

        #endregion

        #region Data 

        static Dictionary<ulong, PlayerSignData> loadplayer = new Dictionary<ulong, PlayerSignData>();

        public class PlayerSignData
        {
            public BasePlayer player;
            public int signcount;
        }

        static StoredData storedData = new StoredData();
        DynamicConfigFile dataFile;

        public class StoredData
        {
            public Dictionary<uint, StoredSkinsData> saveSkinData = new Dictionary<uint, StoredSkinsData>();
            public StoredData() { }
        }

        public class StoredSkinsData
        {
            public ulong ownerid;
            public string pos;
            public string eangles;
            public string rot;
            public ulong skin1;
            public ulong skin2;
            public ulong skin3;
            public int tickrate;
        }

        void LoadDataFile()
        {
            dataFile = Interface.Oxide.DataFileSystem.GetFile(Title);

            try
            {
                storedData = dataFile.ReadObject<StoredData>();
            }
            catch { }

            if (storedData == null)
                storedData = new StoredData();
        }

        void AddData(uint entnetid, ulong sownerid, string spos, string seangles, string srot, ulong skinid1, ulong skinid2, ulong skinid3, int signtickrate)
        {
            if (storedData.saveSkinData.ContainsKey(entnetid)) storedData.saveSkinData.Remove(entnetid);

            storedData.saveSkinData.Add(entnetid, new StoredSkinsData
            {
                ownerid = sownerid,
                pos = spos,
                eangles = seangles,
                rot = srot,
                skin1 = skinid1,
                skin2 = skinid2,
                skin3 = skinid3,
                tickrate = signtickrate,
            });
            SaveData();
        }

        void RemoveData(uint entnetid)
        {
            if (storedData.saveSkinData.ContainsKey(entnetid)) storedData.saveSkinData.Remove(entnetid);
        }

        void SaveData()
        {
            if (dataFile != null && storedData != null)
            {
                dataFile.WriteObject(storedData);
            }
        }

        public static Vector3 StringToVector3(string sVector)
        {
            if (sVector.StartsWith("(") && sVector.EndsWith(")"))
            {
                sVector = sVector.Substring(1, sVector.Length - 2);
            }
            string[] sArray = sVector.Split(',');
            Vector3 result = new Vector3(
                float.Parse(sArray[0]),
                float.Parse(sArray[1]),
             float.Parse(sArray[2]));
            return result;
        }

        public static Quaternion StringToQuaternion(string sVector)
        {
            if (sVector.StartsWith("(") && sVector.EndsWith(")"))
            {
                sVector = sVector.Substring(1, sVector.Length - 2);
            }
            string[] sArray = sVector.Split(',');
            Quaternion result = new Quaternion(
                float.Parse(sArray[0]),
                float.Parse(sArray[1]),
                float.Parse(sArray[2]),
             float.Parse(sArray[3]));
            return result;
        }


        #endregion

        #region Commands

        [ChatCommand("neon")]
        void cmdChatNeonGUI(BasePlayer player, string command, string[] args)
        {
            if (isAllowed(player, "neonskins.skin") || isAllowed(player, "neonskins.add"))
            {
                var hasgui = player.GetComponent<SignGUI>();
                if (hasgui) { hasgui.OnDestroy(); return; }
                player.gameObject.AddComponent<SignGUI>();
            }
            else SendReply(player, msg("notallowed", player.UserIDString));
        }

        [ChatCommand("neon.add")]
        void cmdChatNeonAdd(BasePlayer player, string command, string[] args)
        {
            if (isAllowed(player, "neonskins.add"))
            {
                if (SignLimitReached(player)) { SendReply(player, msg("maxsigns", player.UserIDString)); return; }
                RaycastHit hit;
                if (Physics.Raycast(player.eyes.HeadRay(), out hit, 10f)) newNeon = hit.GetTransform().gameObject.ToBaseEntity();
                if (newNeon == null) return;
                if (newNeon.OwnerID != player.userID) { SendReply(player, msg("notowner", player.UserIDString)); return; }
                if (newNeon is Signage)
                {
                    if (args != null && args.Length > 0)
                    {
                        var getstring = args[0].ToLower();
                        Vector3 wide = newNeon.transform.eulerAngles;
                        Vector3 tall = newNeon.transform.eulerAngles + new Vector3(90, 0, 0);
                        Vector3 tall2 = newNeon.transform.eulerAngles + new Vector3(270, 0, 0);
                        Vector3 pos = newNeon.transform.position;
                        Quaternion rot = newNeon.transform.rotation;

                        BaseEntity.saveList.Remove(newNeon);
                        newNeon.Kill(BaseNetworkable.DestroyMode.None);

                        if (getstring == "1") timer.Once(1f, () => SpawnSign(player.userID, pos, rot, wide, sign1skin1, sign1skin2, sign1skin3, 10));
                        if (getstring == "2") timer.Once(1f, () => SpawnSign(player.userID, pos, rot, wide, sign2skin1, sign2skin2, sign2skin3, 10));
                        if (getstring == "3") timer.Once(1f, () => SpawnSign(player.userID, pos, rot, wide, sign3skin1, sign3skin2, sign3skin3, 10));
                        if (getstring == "4") timer.Once(1f, () => SpawnSign(player.userID, pos, rot, wide, sign4skin1, sign4skin2, sign4skin3, 10));
                        if (getstring == "5") timer.Once(1f, () => SpawnSign(player.userID, pos, rot, wide, sign5skin1, sign5skin2, sign5skin3, 10));
                        if (getstring == "6") timer.Once(1f, () => SpawnSign(player.userID, pos, rot, wide, sign6skin1, sign6skin2, sign6skin3, 10));
                        if (getstring == "7") timer.Once(1f, () => SpawnSign(player.userID, pos, rot, wide, sign7skin1, sign7skin2, sign7skin3, 10));
                        if (getstring == "8") timer.Once(1f, () => SpawnSign(player.userID, pos, rot, tall2, sign8skin1, sign8skin2, sign8skin3, 10));
                        if (getstring == "9") timer.Once(1f, () => SpawnSign(player.userID, pos, rot, tall2, sign9skin1, sign9skin2, sign9skin3, 10));
                        if (getstring == "10") timer.Once(1f, () => SpawnSign(player.userID, pos, rot, wide, sign10skin1, sign10skin2, sign10skin3, 10));
                        if (getstring == "11") timer.Once(1f, () => SpawnSign(player.userID, pos, rot, wide, sign11skin1, sign11skin2, sign11skin3, 10));
                        if (getstring == "12") timer.Once(1f, () => SpawnSign(player.userID, pos, rot, wide, sign12skin1, sign12skin2, sign12skin3, 10));
                        if (getstring == "13") timer.Once(1f, () => SpawnSign(player.userID, pos, rot, wide, sign13skin1, sign13skin2, sign13skin3, 10));
                        if (getstring == "14") timer.Once(1f, () => SpawnSign(player.userID, pos, rot, tall, sign14skin1, sign14skin2, sign14skin3, 10));
                        if (getstring == "15") timer.Once(1f, () => SpawnSign(player.userID, pos, rot, tall, sign15skin1, sign15skin2, sign15skin3, 10));
                        if (getstring == "16") timer.Once(1f, () => SpawnSign(player.userID, pos, rot, tall, sign16skin1, sign16skin2, sign16skin3, 10));
                        if (getstring == "17") timer.Once(1f, () => SpawnSign(player.userID, pos, rot, wide, sign17skin1, sign17skin2, sign17skin3, 10));
                        return;
                    }
                    else SendReply(player, msg("tryagain", player.UserIDString));
                }
                else SendReply(player, msg("tryagain", player.UserIDString));
            }
            else SendReply(player, msg("notallowed", player.UserIDString));
        }

        [ChatCommand("neon.skinwide")]
        void cmdChatNeonSkinWide(BasePlayer player, string command, string[] args)
        {
            if (isAllowed(player, "neonskins.skin"))
            {
                if (SignLimitReached(player)) { SendReply(player, msg("maxsigns", player.UserIDString)); return; }
                RaycastHit hit;
                if (Physics.Raycast(player.eyes.HeadRay(), out hit, 10f)) newNeon = hit.GetTransform().gameObject.ToBaseEntity();
                if (newNeon == null) return;
                if (newNeon.OwnerID != player.userID) { SendReply(player, msg("notowner", player.UserIDString)); return; }
                if (newNeon is Signage)
                {
                    PrepNeon(player, newNeon, args, true, false);
                }
                else SendReply(player, msg("tryagain", player.UserIDString));
            }
            else SendReply(player, msg("notallowed", player.UserIDString));
        }

        [ChatCommand("neon.skintall")]
        void cmdChatNeonSkinTall(BasePlayer player, string command, string[] args)
        {
            if (isAllowed(player, "neonskins.skin"))
            {
                if (SignLimitReached(player)) { SendReply(player, msg("maxsigns", player.UserIDString)); return; }
                RaycastHit hit;
                if (Physics.Raycast(player.eyes.HeadRay(), out hit, 10f)) newNeon = hit.GetTransform().gameObject.ToBaseEntity();
                if (newNeon == null) return;
                if (newNeon.OwnerID != player.userID) { SendReply(player, msg("notowner", player.UserIDString)); return; }
                if (newNeon is Signage)
                {
                    PrepNeon(player, newNeon, args, false, false);
                }
                else SendReply(player, msg("tryagain", player.UserIDString));
            }
            else SendReply(player, msg("notallowed", player.UserIDString));
        }

        [ChatCommand("neon.skinattire")]
        void cmdNeonSkinAttire(BasePlayer player, string command, string[] args)
        {
            if (!isAllowed(player, "neonskins.attire")) { SendReply(player, msg("notallowed", player.UserIDString)); return; }
            int iAmount = 1;

            string str1 = "";
            ulong skinid1 = 0;
            ulong skinid2 = 0;
            ulong skinid3 = 0;
            if (args != null && args.Length > 0)
            {
                str1 = args[0].ToLower();
            }
            if (args != null && args.Length > 1)
            {
                var getstring1 = args[1]?.ToLower();
                if (UInt64.TryParse(getstring1, out skinid1)) ;
            }
            if (args != null && args.Length > 2)
            {
                var getstring2 = args[2]?.ToLower();
                if (UInt64.TryParse(getstring2, out skinid2)) ;
            }
            if (args != null && args.Length > 3)
            {
                var getstring3 = args[3]?.ToLower();
                if (UInt64.TryParse(getstring3, out skinid3)) ;
            }

            Item num = ItemManager.CreateByPartialName(str1, 1);

            if (num == null)

            {
                SendReply(player, "Invalid Item!");
                return;
            }

            int itemID = num.info.itemid;

            var getitem = player.inventory.containerWear.FindItemByItemID(itemID);
            if (getitem != null)
            {
                getitem.skin = skinid1;
                getitem.MarkDirty();
                var addchanger = player.gameObject.AddComponent<AttireChanger>();
                addchanger.skin1 = skinid1;
                addchanger.skin2 = skinid2;
                addchanger.skin3 = skinid3;
                addchanger.GetItem(itemID);
            }
            return;

        }

        [ChatCommand("neon.skinrug")]
        void cmdChatNeonSkinRug(BasePlayer player, string command, string[] args)
        {
            if (isAllowed(player, "neonskins.skin"))
            {
                if (SignLimitReached(player)) { SendReply(player, msg("maxsigns", player.UserIDString)); return; }
                RaycastHit hit;
                if (Physics.Raycast(player.eyes.HeadRay(), out hit, 10f)) newNeon = hit.GetTransform().gameObject.ToBaseEntity();
                if (newNeon == null) return;
                if (newNeon.OwnerID != player.userID) { SendReply(player, msg("notowner", player.UserIDString)); return; }
                if (newNeon.name.Contains("rug/rug"))
                {
                    PrepNeon(player, newNeon, args, true, true);
                }
                else SendReply(player, msg("tryagain", player.UserIDString));
            }
            else SendReply(player, msg("notallowed", player.UserIDString));
        }

        [ChatCommand("neon.toggle")]
        void cmdChatPimpToggle(BasePlayer player, string command, string[] args)
        {
            if (isAllowed(player, "neonskins.skin") || isAllowed(player, "neonskins.add"))
            {
                RaycastHit hit;
                if (Physics.Raycast(player.eyes.HeadRay(), out hit, 10f)) newNeon = hit.GetTransform().gameObject.ToBaseEntity();
                if (newNeon == null) return;
                if (newNeon.OwnerID != player.userID) { SendReply(player, msg("notowner", player.UserIDString)); return; }
                if (IsPimpedOut(newNeon)) { ToggleSignState(newNeon); SendReply(player, msg("togglesign", player.UserIDString)); }
                else SendReply(player, msg("tryagain", player.UserIDString));
            }
            else SendReply(player, msg("notallowed", player.UserIDString));
        }

        [ChatCommand("neon.cleardatabase")]
        void cmdChatNeonClearDataBase(BasePlayer player, string command, string[] args)
        {
            if (player.net?.connection?.authLevel > 1)
            {
                storedData.saveSkinData.Clear();
                SaveData();
            }
            return;
        }

        [ChatCommand("neon.tickrate")]
        void cmdChatNeonTickRate(BasePlayer player, string command, string[] args)
        {
            if (isAllowed(player, "neonskins.skin") || isAllowed(player, "neonskins.add"))
            {
                RaycastHit hit;
                if (Physics.Raycast(player.eyes.HeadRay(), out hit, 10f)) newNeon = hit.GetTransform().gameObject.ToBaseEntity();
                if (newNeon == null) return;
                if (newNeon.OwnerID != player.userID) { SendReply(player, msg("notowner", player.UserIDString)); return; }
                if (IsPimpedOut(newNeon))
                {
                    int tickrate = 10;
                    if (args != null && args.Length > 0)
                    {
                        var getstring1 = args[0]?.ToLower();
                        if (int.TryParse(getstring1, out tickrate)) ;
                    }
                    if (tickrate < 5) tickrate = 5;
                    ToggleSignTickRate(newNeon, tickrate);
                    SendReply(player, msg("togglesign", player.UserIDString));
                }
                else SendReply(player, msg("tryagain", player.UserIDString));
            }
            else SendReply(player, msg("notallowed", player.UserIDString));
        }

        [ChatCommand("neon.wings")]
        void cmdChatToggleWings(BasePlayer player, string command, string[] args)
        {
            var argstring = "angel";
            if (isAllowed(player, "neonskins.wings"))
            {
                var haswings = player.GetComponent<WingEntity>();
                if (!haswings)
                {
                    if (!player.IsFlying) { SendReply(player, msg("notflying", player.UserIDString)); return; }
                    haswings = player.gameObject.AddComponent<WingEntity>();
                    if (args != null && args.Length > 0)
                    {
                        var getstring = args[0].ToLower();
                        if (getstring == "black") { haswings.isblack = true; haswings.isangel = false; haswings.isfairy = false; haswings.AddWings(); return; }
                        if (getstring == "fairy") { haswings.isblack = false; haswings.isangel = false; haswings.isfairy = true; haswings.AddWings(); return; }
                        if (getstring == "angel") { haswings.isblack = false; haswings.isangel = true; haswings.isfairy = false; haswings.AddWings(); return; }
                    }
                    haswings.isblack = false; haswings.isangel = true; haswings.isfairy = false; haswings.AddWings(); return;
                    return;
                }
                if (haswings) { GameObject.Destroy(haswings); return; }
            }
            SendReply(player, "You are not authorized to use that command");
            return;
        }

        [ChatCommand("neon.count")]
        void cmdChatNeonCount(BasePlayer player, string command, string[] args)
        {
            if (!loadplayer.ContainsKey(player.userID))
            {
                SendReply(player, "You have no Neon Signs !!");
                return;
            }
            SendReply(player, "Current Neon Signs : " + (loadplayer[player.userID].signcount));
        }

        #endregion

        #region Hooks

        bool IsPimpedOut(BaseEntity entity)
        {
            if (entity.GetComponent<SkinChanger>()) return true;
            return false;
        }

        void ToggleSignState(BaseEntity entity)
        {
            var isSign = entity.GetComponent<SkinChanger>();
            if (isSign && isSign.isanimated == true) { isSign.isanimated = false; return; }
            if (isSign && isSign.isanimated == false) { isSign.isanimated = true; return; }
            if (!isSign) entity.gameObject.AddComponent<SkinChanger>();
        }

        void ToggleSignTickRate(BaseEntity entity, int signtickrate)
        {
            var isSign = entity.GetComponent<SkinChanger>() ?? null;
            if (isSign != null)
            {
                entity.Invoke("KillMessage", 0.1f);

                var signownerid = storedData.saveSkinData[entity.net.ID].ownerid;
                var signpos = StringToVector3(storedData.saveSkinData[entity.net.ID].pos);
                var signrot = StringToQuaternion(storedData.saveSkinData[entity.net.ID].rot);
                var signangle = StringToVector3(storedData.saveSkinData[entity.net.ID].eangles);
                var signskin1 = storedData.saveSkinData[entity.net.ID].skin1;
                var signskin2 = storedData.saveSkinData[entity.net.ID].skin2;
                var signskin3 = storedData.saveSkinData[entity.net.ID].skin3;
                SpawnSign(signownerid, signpos, signrot, signangle, signskin1, signskin2, signskin3, signtickrate);

                RemovePlayerID(signownerid);
                storedData.saveSkinData.Remove(entity.net.ID);
                SaveData();

                AddPlayerID(signownerid);
            }
            return;
        }

        void OnEntityDeath(BaseCombatEntity entity, HitInfo info)
        {
	    if (entity == null) return;
            if (storedData.saveSkinData.ContainsKey(entity.net.ID))
            {
                storedData.saveSkinData.Remove(entity.net.ID);
                SaveData();
            }
        }

        void OnEntityTakeDamage(BaseCombatEntity entity, HitInfo hitInfo)
        {
            if (!BlockSignDamage) return;
            if (entity == null || hitInfo == null) return;
            var isneonsign = entity.GetComponentInParent<SkinChanger>() ?? null;
            if (isneonsign != null) hitInfo.damageTypes.ScaleAll(0);
            return;
        }

        private object CanPickupEntity(BaseCombatEntity entity, BasePlayer player)
        {
            if (entity == null || player == null) return null;
            if (entity.GetComponent<SkinChanger>() && entity.OwnerID == player.userID) return null;
            if (entity.GetComponent<SkinChanger>()) return false;
            return null;
        }

        bool SignLimitReached(BasePlayer player)
        {
            if (UseMaxSignChecks)
            {
                if (isAllowed(player, "neonskins.nolimit")) return false;
                if (loadplayer.ContainsKey(player.userID))
                {
                    var currentcount = loadplayer[player.userID].signcount;
                    var maxallowed = maxsigns;
                    if (isAllowed(player, "neonskins.viplimit")) maxallowed = maxvipsigns;
                    if (currentcount >= maxallowed) return true;
                }
            }
            return false;
        }

        void AddPlayerID(ulong ownerid)
        {
            if (!loadplayer.ContainsKey(ownerid))
            {
                loadplayer.Add(ownerid, new PlayerSignData
                {
                    signcount = 1
                });
                return;
            }
            loadplayer[ownerid].signcount = loadplayer[ownerid].signcount + 1;
        }

        void RemovePlayerID(ulong ownerid)
        {
            if (loadplayer.ContainsKey(ownerid)) loadplayer[ownerid].signcount = loadplayer[ownerid].signcount - 1;
            return;
        }

        void PrepNeon(BasePlayer player, BaseEntity newNeon, string[] args, bool iswide, bool isrug)
        {
            var modifier = new Vector3();
            if (iswide) modifier = new Vector3(0, 0, 0);
            if (!iswide) modifier = new Vector3(90, 0, 0);
            Vector3 pos = newNeon.transform.position;
            Vector3 ang = newNeon.transform.eulerAngles + modifier;
            Quaternion rot = newNeon.transform.rotation;

            ulong skinid1 = 0;
            ulong skinid2 = 0;
            ulong skinid3 = 0;

            if (args != null && args.Length > 0)
            {
                var getstring1 = args[0]?.ToLower();
                if (UInt64.TryParse(getstring1, out skinid1)) ;
            }
            if (args != null && args.Length > 1)
            {
                var getstring2 = args[1]?.ToLower();
                if (UInt64.TryParse(getstring2, out skinid2)) ;
            }
            if (args != null && args.Length > 2)
            {
                var getstring3 = args[2]?.ToLower();
                if (UInt64.TryParse(getstring3, out skinid3)) ;
            }
            if (isrug) { SkinRug(newNeon, skinid1, skinid2, skinid3); return; }
            BaseEntity.saveList.Remove(newNeon);
            newNeon.Kill(BaseNetworkable.DestroyMode.None);

            timer.Once(1f, () => SpawnSign(player.userID, pos, rot, ang, skinid1, skinid2, skinid3, 10));
        }

        void SpawnSign(ulong ownerid, Vector3 pos, Quaternion rot, Vector3 angle, ulong skinid1, ulong skinid2, ulong skinid3, int signtickrate)
        {
            string prefabnewNeon = "assets/prefabs/deployable/rug/rug.deployed.prefab";
            var sign = GameManager.server.CreateEntity(prefabnewNeon, pos, rot, true);

            sign.transform.eulerAngles = angle + new Vector3(0, 90, 90);
            sign.transform.position = sign.transform.position + new Vector3(0f, 0.5f, 0f);
            sign.skinID = skinid1;
            sign?.Spawn();
            sign.OwnerID = ownerid;

            var pimpedout = sign.gameObject.AddComponent<SkinChanger>();
            pimpedout.skin1 = skinid1;
            pimpedout.skin2 = skinid2;
            pimpedout.skin3 = skinid3;
            pimpedout.tickrate = signtickrate;

            AddData(sign.net.ID, ownerid, pos.ToString(), angle.ToString(), rot.ToString(), skinid1, skinid2, skinid3, signtickrate);
            AddPlayerID(ownerid);
        }

        void SkinRug(BaseEntity entity, ulong skinid1, ulong skinid2, ulong skinid3)
        {
            var pimpedout = entity.gameObject.AddComponent<SkinChanger>();
            pimpedout.skin1 = skinid1;
            pimpedout.skin2 = skinid2;
            pimpedout.skin3 = skinid3;
        }

        void OnPlayerDisconnected(BasePlayer player, string reason)
        {
            var haswings = player.GetComponent<WingEntity>();
            if (haswings != null) { GameObject.Destroy(haswings); }
            var hasgui = player.GetComponent<SignGUI>();
            if (hasgui) hasgui.OnDestroy();
            return;
        }

        void OnPlayerRespawned(BasePlayer player)
        {
            var haswings = player.GetComponent<WingEntity>();
            if (haswings != null) { GameObject.Destroy(haswings); }
            var hasgui = player.GetComponent<SignGUI>();
            if (hasgui) hasgui.OnDestroy();
            return;
        }

        void Unload()
        {
            SaveData();
            DestroyAll<WingEntity>();
            DestroyAll<SignGUI>();
        }

        static void DestroyAll<T>()
        {
            var objects = GameObject.FindObjectsOfType(typeof(T));
            if (objects != null)
                foreach (var gameObj in objects)
                    GameObject.Destroy(gameObj);
        }

        #endregion

        #region Attire Changer

        class AttireChanger : MonoBehaviour
        {
            BasePlayer player;
            Item item;
            int counter;
            public bool isanimated;
            public ulong skin1;
            public ulong skin2;
            public ulong skin3;
            public int framecounter;

            void Awake()
            {
                player = GetComponent<BasePlayer>();
                counter = 0;
                isanimated = true;
                framecounter = 4;
            }

            public void GetItem(int itemID)
            {
                item = player.inventory.containerWear.FindItemByItemID(itemID);
            }

            bool SingleSkin()
            {
                if (skin1 == 0 || skin2 == 0 || skin3 == 0) return true;
                return false;
            }

            void FixedUpdate()
            {
                if (SingleSkin()) return;
                if (counter == 10) item.skin = skin2;
                if (counter == 20) item.skin = skin3;
                RefreshAll();
                counter = counter + 1;
                if (counter == 30) { item.skin = skin1; counter = 0; RefreshAll(); }
            }

            public void RefreshAll()
            {
                item.MarkDirty();
            }
        }

        #endregion

        #region Skin Changer

        class SkinChanger : MonoBehaviour
        {
            BaseEntity entity;
            Vector3 entitypos;
            Quaternion entityrot;
            int counter;
            public bool isanimated;
            int skinnum;
            public ulong skin1;
            public ulong skin2;
            public ulong skin3;
            public int tickrate;
            ulong ownerid;
            uint entityid;
            NeonSkins instance;

            void Awake()
            {
                instance = new NeonSkins();
                entity = GetComponentInParent<BaseEntity>();
                entityid = entity.net.ID;
                entitypos = entity.transform.position;
                entityrot = Quaternion.identity;
                ownerid = entity.OwnerID;
                counter = 0;
                isanimated = true;
                tickrate = 10;
            }

            void ClntDstry(BaseNetworkable entity, bool recursive = true)
            {
                if (Net.sv.write.Start())
                {
                    Net.sv.write.PacketID(Message.Type.EntityDestroy);
                    Net.sv.write.UInt32(entity.net.ID);
                    Net.sv.write.UInt8(0);
                    Net.sv.write.Send(new SendInfo(entity.net.group.subscribers));
                }
                if (recursive && entity.children != null) for (int i = 0; i < entity.children.Count; i++) ClntDstry(entity.children[i], false);
            }

            void EnttSnpsht(BaseNetworkable entity, bool recursive = true)
            {
                entity.InvalidateNetworkCache(); List<Connection> subscribers = entity.net.group == null ? Net.sv.connections : entity.net.group.subscribers; if (subscribers != null && subscribers.Count > 0) { for (int i = 0; i < subscribers.Count; i++) { Connection connection = subscribers[i]; BasePlayer basePlayer = connection.player as BasePlayer; if (!(basePlayer == null)) { if (Net.sv.write.Start()) { connection.validate.entityUpdates = connection.validate.entityUpdates + 1u; BaseNetworkable.SaveInfo saveInfo = new BaseNetworkable.SaveInfo { forConnection = connection, forDisk = false }; Net.sv.write.PacketID(Message.Type.Entities); Net.sv.write.UInt32(connection.validate.entityUpdates); entity.ToStreamForNetwork(Net.sv.write, saveInfo); Net.sv.write.Send(new SendInfo(connection)); } } } }
                if (recursive && entity.children != null) for (int i = 0; i < entity.children.Count; i++) EnttSnpsht(entity.children[i], false);
            }

            bool SingleSkin()
            {
                if (skin1 == 0 || skin2 == 0 || skin3 == 0) return true;
                return false;
            }

            void FixedUpdate()
            {
                if (!isanimated || SingleSkin()) return;
                if (counter == tickrate) entity.skinID = skin2;
                if (counter == (tickrate * 2)) entity.skinID = skin3;
                RefreshAll();
                counter = counter + 1;
                if (counter == (tickrate * 3)) { entity.skinID = skin1; counter = 0; RefreshAll(); }
            }

            public void RefreshAll()
            {
                entity.transform.hasChanged = true;
                ClntDstry(entity, true); EnttSnpsht(entity, true);
                entity.SendNetworkUpdateImmediate();
                entity.UpdateNetworkGroup();
            }

            public void OnDestroy()
            {
                if (loadplayer.ContainsKey(ownerid)) loadplayer[ownerid].signcount = loadplayer[ownerid].signcount - 1;
                if (entity != null && !entity.IsDestroyed) { entity.Invoke("KillMessage", 0.1f); }
            }
        }

        #endregion

        #region Wings

        class WingEntity : BaseEntity
        {
            BaseEntity entity;
            Vector3 entitypos;
            Quaternion entityrot;
            BaseEntity wing1;
            BaseEntity wing2;
            bool isback;
            int counter;
            public bool isfairy;
            public bool isangel;
            public bool isblack;

            void Awake()
            {
                entity = GetComponentInParent<BaseEntity>();
                entitypos = entity.transform.position;
                entityrot = Quaternion.identity;
                isback = false;
                isfairy = true;
                isangel = false;
                isblack = false;
                counter = 0;
            }

            public void AddWings()
            {
                string prefabwing = "assets/prefabs/deployable/rug/rug.deployed.prefab";

                wing1 = GameManager.server.CreateEntity(prefabwing, entitypos, entityrot, false);
                wing1.transform.localEulerAngles = new Vector3(0, 270, 90);
                wing1.enableSaving = false;

                if (isangel) wing1.transform.localPosition = new Vector3(-1.6f, 1.3f, -0.02f);
                if (isangel) wing1.skinID = leftwingangel;

                if (isfairy) wing1.transform.localPosition = new Vector3(-1.5f, 1.5f, -0.02f);
                if (isfairy) wing1.skinID = leftwingfairy;

                if (isblack) wing1.transform.localPosition = new Vector3(-1.5f, 1.6f, -0.02f);
                if (isblack) wing1.skinID = leftwingblack;
                wing1?.Spawn();
                wing1.SetParent(entity);


                wing2 = GameManager.server.CreateEntity(prefabwing, entitypos, entityrot, false);
                wing2.transform.localEulerAngles = new Vector3(0, 270, 90);
                wing2.enableSaving = false;

                if (isangel) wing2.transform.localPosition = new Vector3(1.6f, 1.3f, -0.02f);
                if (isangel) wing2.skinID = rightwingangel;

                if (isfairy) wing2.transform.localPosition = new Vector3(1.5f, 1.5f, -0.02f);
                if (isfairy) wing2.skinID = rightwingfairy;

                if (isblack) wing2.transform.localPosition = new Vector3(1.5f, 1.6f, -0.02f);
                if (isblack) wing2.skinID = rightwingblack;
                wing2?.Spawn();
                wing2.SetParent(entity);
            }

            void FixedUpdate()
            {
                if (!isblack) return;
                if (counter == 5)
                {
                    if (isblack) Effect.server.Run("assets/bundled/prefabs/fx/fire/fire_v2.prefab", wing1.GetComponent<BaseEntity>(), 0, new Vector3(), new Vector3(), null, true);
                    if (isblack) Effect.server.Run("assets/bundled/prefabs/fx/fire/fire_v2.prefab", wing2.GetComponent<BaseEntity>(), 0, new Vector3(), new Vector3(), null, true);
                }
                if (counter == 130) { counter = 0; return; }
                counter = counter + 1;
            }

            void RefreshEntities()
            {
                if (wing1 != null) wing1.transform.hasChanged = true;
                if (wing1 != null) wing1.SendNetworkUpdateImmediate();
                if (wing1 != null) wing1.UpdateNetworkGroup();

                if (wing2 != null) wing2.transform.hasChanged = true;
                if (wing2 != null) wing2.SendNetworkUpdateImmediate();
                if (wing2 != null) wing2.UpdateNetworkGroup();
            }

            public void OnDestroy()
            {
                if (wing1 != null) { wing1.Invoke("KillMessage", 0.1f); }
                if (wing2 != null) { wing2.Invoke("KillMessage", 0.1f); }
                GameObject.Destroy(this);
            }
        }

        #endregion

        #region Sign GUI

        class SignGUI : MonoBehaviour
        {
            BasePlayer player;
            NeonSkins neonskins;
            string b1;

            void Awake()
            {
                neonskins = new NeonSkins();
                player = base.GetComponentInParent<BasePlayer>();
                AddSignGUI(player);
            }

            public void AddSignGUI(BasePlayer player)
            {
                DestroyCui(player);

                var elements = new CuiElementContainer();

                elements.Add(new CuiElement
                {
                    Name = "Neongui",
                    Parent = "Overlay",
                    Components =
                    {
                        new CuiRawImageComponent { Color = "1 1 1 1", Url = "http://i.imgur.com/Bgc99p2.png", Sprite = "assets/content/textures/generic/fulltransparent.tga" },
                        new CuiRectTransformComponent { AnchorMin = "0.0 0.2",  AnchorMax = "0.28 0.9" }
                    }
                });

                b1 = elements.Add(new CuiButton
                {
                    Button = { Command = $"chat.say /neon", Color = "0.0 0.0 0.0 0.7" },
                    RectTransform = { AnchorMin = "0.24 0.2", AnchorMax = "0.28 0.23" },
                    Text = { Text = "Exit", FontSize = 12, Color = "1.0 1.0 1.0 1.0", Align = TextAnchor.MiddleCenter }
                }, "Overlay", "b1command");

                CuiHelper.AddUi(player, elements);
            }

            void DestroyCui(BasePlayer player)
            {
                CuiHelper.DestroyUi(player, "Neongui");
                CuiHelper.DestroyUi(player, b1);
            }

            public void OnDestroy()
            {
                DestroyCui(player);
                Destroy(this);
            }
        }

        #endregion

    }
}

// --- End of file: NeonSkins.cs ---
// --- Next file ---

// --- GitHub Source URL: https://github.com/RustyyTown/plugins/blob/main/Oysters.cs ---
// --- Original Local Path: Oysters.cs ---

﻿using Newtonsoft.Json;
using Oxide.Core;
using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;
namespace Oxide.Plugins
{
    [Info("Oysters", "OxideBro", "0.1.1")]
    class Oysters : RustPlugin
    {
        #region Configuration
        private PluginConfig config;

        protected override void LoadDefaultConfig() => config = PluginConfig.DefaultConfig();

        protected override void LoadConfig()
        {
            base.LoadConfig();
            config = Config.ReadObject<PluginConfig>();

            if (config.PluginVersion < Version)
                UpdateConfigValues();

            Config.WriteObject(config, true);
        }

        private void UpdateConfigValues()
        {
            PluginConfig baseConfig = PluginConfig.DefaultConfig();
            if (config.PluginVersion < new VersionNumber(0, 1, 0))
            {
                PrintWarning("Config update detected! Updating config values...");
                PrintWarning("Config update completed!");
            }
            config.PluginVersion = Version;
        }

        public class DefaultItems
        {
            [JsonProperty("Shortname предмета")]
            public string ShortName;
            [JsonProperty("Минимальное количество")]
            public int MinAmount;
            [JsonProperty("Максимальное количество")]
            public int MaxAmount;
            [JsonProperty("SkinID предмета")]
            public ulong SkinID;
            [JsonProperty("Имя предмета при создании (Оставте поле постым чтобы использовать стандартное название итема)")]
            public string Name;
            [JsonProperty("Это чертеж")]
            public bool IsBlueprnt;
        }

        class OysterSetting
        {
            [JsonProperty("SkinID устрицы")]
            public ulong SkinID;
            [JsonProperty("Имя предмета устрицы")]
            public string Name;
            [JsonProperty("Shortname предмета для устрицы")]
            public string ShortName;
            [JsonProperty("Выдаваемое количество")]
            public int Amount;
            [JsonProperty("Шанс что игроку даст данную открытую устрицу")]
            public int Change;
            [JsonProperty("Список предметов какие даёт при открытии")]
            public List<DefaultItems> Items;
        }

        protected override void SaveConfig() => Config.WriteObject(config);

        class PluginConfig
        {
            [JsonProperty("Configuration Version")]
            public VersionNumber PluginVersion = new VersionNumber();

            [JsonProperty("SkinID закрытой устрицы")]
            public ulong SkinID;
            [JsonProperty("Имя предмета закрытой устрицы ")]
            public string Name;
            [JsonProperty("Shortname предмета для закрытой устрицы")]
            public string ShortName;
            [JsonProperty("Выдаваемое количество")]
            public int Amount;
            [JsonProperty("Шанс что игроку даст данную закрытую устрицу")]
            public int Change;

            [JsonProperty("Засчитывать очки фермера друзьям")]
            public bool EnableFriendsFarm;

            [JsonProperty("Настройки открытых устриц")]
            public List<OysterSetting> OytersList;

            public static PluginConfig DefaultConfig()
            {
                return new PluginConfig()
                {
                    PluginVersion = new VersionNumber(),
                    Amount = 1,
                    Change = 10,
                    Name = "Устрица",
                    ShortName = "fish.troutsmall",
                    SkinID = 1916873496,
                    EnableFriendsFarm = false,

                    OytersList = new List<OysterSetting>()
                    {
                        new OysterSetting()
                        {
                            Amount = 1,
                            Change = 5,
                            Items = new List<DefaultItems>(),
                            Name = "Раковина с черной жемчуженой",
                            ShortName = "sticks",
                            SkinID = 1916874386,
                        },
                        new OysterSetting()
                        {
                              Amount = 1,
                              Change = 45,
                              Items = new List<DefaultItems>(),
                              Name = "Раковина с белой жемчуженой",
                              ShortName = "sticks",
                              SkinID = 1916875142,
                        },
                        new OysterSetting()
                        {
                            Amount = 1,
                            Change = 50,
                            Items = new List<DefaultItems>(),
                            Name = "Пустая раковина",
                            ShortName = "sticks",
                            SkinID = 1916875604,
                        },
                    }
                };
            }
        }
        #endregion

        #region Init & Reference        

        void OnEntityBuilt(Planner plan, GameObject go)
        {
            if (plan == null || go == null) return;
            if (go.ToBaseEntity() != null && go.ToBaseEntity()?.GetComponent<WildlifeTrap>() != null)
                SetPreferences(go.ToBaseEntity()?.GetComponent<WildlifeTrap>());
        }

        void SetPreferences(WildlifeTrap trap)
        {
            if (trap == null) return;
            trap.CancelInvoke(trap.TrapThink);
            trap.gameObject.AddComponent<CustomTraps>();
        }

        public static Oysters ins;

        void Init() => LoadData();

        void OnServerSave() => SaveData();

        void OnServerInitialized()
        {
            ins = this;
            var traps = UnityEngine.Object.FindObjectsOfType<WildlifeTrap>();
            if (traps != null)
            {
                foreach (var trap in traps)
                {
                    if (trap.GetComponent<CustomTraps>() == null)
                        trap.gameObject.AddComponent<CustomTraps>();
                }
            }
        }

        void Unload()
        {
            SaveData();
            var traps = UnityEngine.Object.FindObjectsOfType<CustomTraps>();
            if (traps != null)
                foreach (var trap in traps)
                {
                    if (trap.trap != null)
                        trap.trap.SetTrapActive(true);

                    UnityEngine.Object.Destroy(trap);
                }
        }

        private void OnNewSave()
        {
            PlayersList.Clear();
            SaveData();
        }

        object OnItemAction(Item item, string action, BasePlayer player)
        {
            if (item == null || player == null || player.GetComponent<NPCPlayer>() != null) return null;
            if (action == "Gut" && item.skin == config.SkinID)
            {
                if (item.amount > 1)
                {
                    item.amount--;
                    item.MarkDirty();
                }
                else item.RemoveFromContainer();
                var random = UnityEngine.Random.RandomRange(3, 100);
                var oyster = config.OytersList.Find(p => p.Change == Find(random));
                var item1 = ItemManager.CreateByName(oyster.ShortName, oyster.Amount, oyster.SkinID);
                item1.name = oyster.Name;
                GiveItem(player, item1, BaseEntity.GiveItemReason.ResourceHarvested);

                if (!PlayersList.ContainsKey(player.userID)) PlayersList.Add(player.userID, new PlayerInfo());

                switch (oyster.SkinID)
                {
                    case 1916874386:
                        PlayersList[player.userID].Black++;
                        break;
                    case 1916875142:
                        PlayersList[player.userID].Write++;
                        break;
                }
                PlayersList[player.userID].Opened++;

                EffectNetwork.Send(new Effect("assets/bundled/prefabs/fx/gestures/cut_meat.prefab", player, 0, Vector3.up, Vector3.zero)
                {
                    scale = UnityEngine.Random.Range(0f, 1f),
                }
              );
                return true;
            }

            if (action == "Gut" && config.OytersList.Find(p => p.SkinID == item.skin) != null)
                return true;
            return null;
        }

        private int? Find(int x)
        {
            var num = (from number in config.OytersList.Select(p => p.Change)
                       let difference = Math.Abs(number - x)
                       orderby difference, Math.Abs(number), number descending
                       select number)
                .FirstOrDefault();
            return num;
        }

        [ChatCommand("g")]
        void cmdGive(BasePlayer player)
        {
            if (!player.IsAdmin) return;
            var item = ItemManager.CreateByName(ins.config.ShortName, 100);
            item.skin = ins.config.SkinID;
            item.name = ins.config.Name;
            GiveItem(player, item);
        }

        Dictionary<BasePlayer, bool> CreateLoot = new Dictionary<BasePlayer, bool>();

        [ChatCommand("oyloot")]
        void cmdOystersLoot(BasePlayer player, string command, string[] args)
        {
            if (!player.IsAdmin) return;
            if (CreateLoot.ContainsKey(player))
                CreateLoot.Remove(player);
            if (args.Length < 1) return;

            switch (args[0])
            {
                case "write":
                    CreateLoot.Add(player, true);
                    SendReply(player, "Режим создания лута для белой жемчужены включен, ударьте по ящику с лутом чтобы скопировать его содержимое.");
                    break;
                case "black":
                    CreateLoot.Add(player, false);
                    SendReply(player, "Режим создания лута для черной жемчужены  включен, ударьте по ящику с лутом чтобы скопировать его содержимое.");
                    break;
            }
        }

        object OnHammerHit(BasePlayer player, HitInfo info)
        {
            if (!CreateLoot.ContainsKey(player)) return null;
            if (player == null || info == null) return null;

            var container = info.HitEntity.GetComponent<StorageContainer>();
            if (!player.IsAdmin) return null;
            if (container == null) return null;
            if (CreateLoot[player])
            {
                config.OytersList.Find(p => p.Name.Contains("белой")).Items.Clear();
                var items = container.inventory.itemList;
                foreach (var item in items)
                {
                    config.OytersList.Find(p => p.Name.Contains("белой")).Items.Add(new DefaultItems()
                    {
                        IsBlueprnt = item.IsBlueprint(),
                        MaxAmount = item.amount,
                        MinAmount = item.amount == 1 ? item.amount : item.amount / 2,
                        Name = "",
                        ShortName = item.info.shortname,
                        SkinID = item.skin,
                    });
                }
                SendReply(player, $"Лут успешно обновлен. Добавлено новых предметов: {items.Count}");
            }
            else
            {
                config.OytersList.Find(p => p.Name.Contains("черной")).Items.Clear();
                var items = container.inventory.itemList;
                foreach (var item in items)
                {
                    config.OytersList.Find(p => p.Name.Contains("черной")).Items.Add(new DefaultItems()
                    {
                        IsBlueprnt = item.IsBlueprint(),
                        MaxAmount = item.amount,
                        MinAmount = item.amount == 1 ? item.amount : item.amount / 2,
                        Name = "",
                        ShortName = item.info.shortname,
                        SkinID = item.skin,
                    });


                }
                SendReply(player, $"Лут успешно обновлен. Добавлено новых предметов: {items.Count}");
            }

            SaveConfig();
            return null;
        }

        object OnItemSplit(Item item, int split_Amount)
        {
            if (config.OytersList.FirstOrDefault(p => p.SkinID == item.skin) != null)
            {
                Item byItemId = ItemManager.CreateByItemID(item.info.itemid, 1, item.skin);
                item.amount -= split_Amount;
                byItemId.amount = split_Amount;
                byItemId.name = item.name;
                byItemId.text = item.text;
                item.MarkDirty();
                return byItemId;
            }

            if (config.SkinID == item.skin)
            {
                Item byItemId = ItemManager.CreateByItemID(item.info.itemid, 1, item.skin);
                item.amount -= split_Amount;
                byItemId.amount = split_Amount;
                byItemId.name = item.name;
                byItemId.text = item.text;
                item.MarkDirty();
                return byItemId;
            }
            return null;
        }

        object CanCombineDroppedItem(DroppedItem drItem, DroppedItem anotherDrItem)
        {
            if (config.OytersList.FirstOrDefault(p => p.SkinID == drItem.item.skin) == null && config.OytersList.FirstOrDefault(p => p.SkinID == anotherDrItem.item.skin) == null &&
                config.SkinID != drItem.item.skin && config.SkinID != anotherDrItem.item.skin) return null;

            if (drItem.item.skin != anotherDrItem.item.skin || !IsTextEqual(drItem.item.text, anotherDrItem.item.text)) return false;
            return null;
        }

        object CanStackItem(Item item, Item anotherItem)
        {
            if (config.OytersList.FirstOrDefault(p => p.SkinID == item.skin) == null && config.OytersList.FirstOrDefault(p => p.SkinID == anotherItem.skin) == null &&
                config.SkinID != item.skin && config.SkinID != anotherItem.skin) return null;

            if (item.info.itemid == anotherItem.info.itemid && (item.skin != anotherItem.skin || !IsTextEqual(item.text, anotherItem.text))) return false;
            return null;
        }

        private object OnItemRecycle(Item item, Recycler recycler)
        {
            if (recycler == null || item == null) return null;
            if (config.OytersList.Find(p => p.SkinID == item.skin) != null && config.OytersList.Find(p => p.ShortName == item.info.shortname) != null)
            {
                var itemRecycler = config.OytersList.Find(p => p.SkinID == item.skin);
                item.UseItem(1);
                var currentItem = itemRecycler.Items.GetRandom();
                if (currentItem == null) return false;
                Item NewItem = ItemManager.CreateByName(currentItem.ShortName, UnityEngine.Random.Range(currentItem.MinAmount, currentItem.MaxAmount), currentItem.SkinID);
                if (!string.IsNullOrEmpty(currentItem.Name))
                    NewItem.name = currentItem.Name;
                if (NewItem == null)
                {
                    PrintError($"Shortname error: {currentItem.ShortName}");
                    return null;
                }
                recycler.MoveItemToOutput(NewItem);

                return true;
            }
            return null;
        }

        private static bool IsTextEqual(string var1, string var2)
        {
            if (string.IsNullOrEmpty(var1) && string.IsNullOrEmpty(var2))
                return true;

            if (string.IsNullOrEmpty(var1) || string.IsNullOrEmpty(var2))
                return false;

            return var1 == var2;
        }

        private static ulong GetUL(string userID)
        {
            if (string.IsNullOrEmpty(userID))
                return 0;

            ulong result = 0;
            try { result = (ulong)Convert.ToUInt64(userID); } catch { result = 0; }
            return result;
        }

        private class CustomTraps : BaseEntity
        {
            public WildlifeTrap trap;

            private void Awake()
            {
                trap = GetComponent<WildlifeTrap>();
                var time = UnityEngine.Random.Range(240, 300);
                InvokeHandler.InvokeRepeating(this, RandomTrap, time, time); 
            }

            private void OnDestroy() => InvokeHandler.CancelInvoke(this, RandomTrap);

            public virtual void RandomTrap()
            {
                int baitCalories = trap.GetBaitCalories();
                if (baitCalories <= 0)
                    return;
                TrappableWildlife randomWildlife = trap.GetRandomWildlife();
                if (baitCalories >= randomWildlife.caloriesForInterest && UnityEngine.Random.Range(0f, 1f) <= randomWildlife.successRate)
                {
                    UseBaitCalories(randomWildlife.caloriesForInterest);
                    if (UnityEngine.Random.Range(0f, 1f) <= trap.trapSuccessRate)
                        GiveItems(randomWildlife);
                }
            }

            private void UseBaitCalories(int numToUse)
            {
                foreach (Item item in trap.inventory.itemList)
                {
                    var component = item.info.GetComponent<ItemModConsumable>();
                    if (component == null || trap.ignoreBait.Contains(item.info))
                        continue;

                    int itemCalories = trap.GetItemCalories(item);
                    if (itemCalories <= 0) continue;

                    numToUse -= itemCalories;
                    item.UseItem(1);
                    if (numToUse > 0) continue;

                    return;
                }
            }

            public void GiveItems(TrappableWildlife life)
            {
                Item item = ItemManager.Create(life.inventoryObject, UnityEngine.Random.Range(life.minToCatch, life.maxToCatch + 1), 0UL);

                if (!MoveToContainer(item, trap.inventory, -1, true))
                    item.Remove(0f);
                else
                    SetFlag(BaseEntity.Flags.Reserved1, true, false, true);

                TryGetOyster();

                trap.Hurt(trap.StartMaxHealth() * 0.1f, Rust.DamageType.Decay, null, false);
            }

            private void TryGetOyster()
            {
                Item item = null;

                bool random = UnityEngine.Random.Range(0, 100) < ins.config.Change;
                if (random)
                {
                    if (!ins.PlayersList.ContainsKey(trap.OwnerID)) ins.PlayersList.Add(trap.OwnerID, new PlayerInfo());

                    item = ItemManager.CreateByName(ins.config.ShortName, ins.config.Amount);
                    item.skin = ins.config.SkinID;
                    item.name = ins.config.Name;
                    item.text = trap.OwnerID.ToString();
                    ins.PlayersList[trap.OwnerID].Caught++;
                }

                if (item != null)
                {
                    if (!MoveToContainer(item, trap.inventory, -1, true))
                        item.Remove(0f);
                    else
                        SetFlag(BaseEntity.Flags.Reserved1, true, false, true);
                }
            }

            public void PlayerStoppedLooting(global::BasePlayer player)
            {
                trap.CancelInvoke(trap.TrapThink);
                return;
            }
        }
        #endregion

        private static bool MoveToContainer(Item itemBase, ItemContainer newcontainer, int iTargetPos = -1, bool allowStack = true)
        {
            bool container;
            Quaternion quaternion;
            using (TimeWarning timeWarning = TimeWarning.New("MoveToContainer", 0))
            {
                var itemContainer = itemBase.parent;
                if (!itemBase.CanMoveTo(newcontainer, iTargetPos))
                    container = false;
                else
                    if (iTargetPos >= 0 && newcontainer.SlotTaken(itemBase, iTargetPos))
                {
                    Item slot = newcontainer.GetSlot(iTargetPos);

                    if (allowStack)
                    {
                        int num = slot.MaxStackable();
                        if (slot.CanStack(itemBase))
                        {
                            if (slot.amount < num)
                            {
                                slot.amount += itemBase.amount;
                                slot.MarkDirty();
                                itemBase.RemoveFromWorld();
                                itemBase.RemoveFromContainer();
                                itemBase.Remove(0f);
                                int num1 = slot.amount - num;
                                if (num1 > 0)
                                {
                                    Item item = slot.SplitItem(num1);
                                    if (item != null && !MoveToContainer(item, newcontainer, -1, false) && (itemContainer == null || !MoveToContainer(item, itemContainer, -1, true)))
                                    {
                                        Vector3 vector3 = newcontainer.dropPosition;
                                        Vector3 vector31 = newcontainer.dropVelocity;
                                        quaternion = new Quaternion();
                                        item.Drop(vector3, vector31, quaternion);
                                    }
                                    slot.amount = num;
                                }
                                container = true;
                                return container;
                            }
                            else
                            {
                                container = false;
                                return container;
                            }
                        }
                    }

                    if (itemBase.parent == null)
                        container = false;
                    else
                    {
                        ItemContainer itemContainer1 = itemBase.parent;
                        int num2 = itemBase.position;
                        if (slot.CanMoveTo(itemContainer1, num2))
                        {
                            itemBase.RemoveFromContainer();
                            slot.RemoveFromContainer();
                            MoveToContainer(slot, itemContainer1, num2, true);
                            container = MoveToContainer(itemBase, newcontainer, iTargetPos, true);
                        }
                        else
                            container = false;
                    }
                }
                else
                        if (itemBase.parent != newcontainer)
                {
                    if (iTargetPos == -1 & allowStack && itemBase.info.stackable > 1)
                    {
                        var item1 = newcontainer.itemList.Where(x => x != null && x.info.itemid == itemBase.info.itemid && x.skin == itemBase.skin).OrderBy(x => x.amount).FirstOrDefault();

                        if (item1 != null && item1.CanStack(itemBase))
                        {
                            int num3 = item1.MaxStackable();
                            if (item1.amount < num3)
                            {
                                var total = item1.amount + itemBase.amount;
                                if (total <= num3)
                                {
                                    item1.amount += itemBase.amount;
                                    item1.MarkDirty();
                                    itemBase.RemoveFromWorld();
                                    itemBase.RemoveFromContainer();
                                    itemBase.Remove(0f);
                                    container = true;
                                    return container;
                                }
                                else
                                {
                                    item1.amount = item1.MaxStackable();
                                    item1.MarkDirty();
                                    itemBase.amount = total - item1.MaxStackable();
                                    itemBase.MarkDirty();
                                    container = MoveToContainer(itemBase, newcontainer, iTargetPos, allowStack);
                                    return container;
                                }
                            }
                        }
                    }

                    if (newcontainer.maxStackSize > 0 && newcontainer.maxStackSize < itemBase.amount)
                    {
                        Item item2 = itemBase.SplitItem(newcontainer.maxStackSize);
                        if (item2 != null && !MoveToContainer(item2, newcontainer, iTargetPos, false) && (itemContainer == null || !MoveToContainer(item2, itemContainer, -1, true)))
                        {
                            Vector3 vector32 = newcontainer.dropPosition;
                            Vector3 vector33 = newcontainer.dropVelocity;
                            quaternion = new Quaternion();
                            item2.Drop(vector32, vector33, quaternion);
                        }
                        container = true;
                    }
                    else
                        if (newcontainer.CanAccept(itemBase))
                    {
                        itemBase.RemoveFromContainer();
                        itemBase.RemoveFromWorld();
                        itemBase.position = iTargetPos;
                        itemBase.SetParent(newcontainer);
                        container = true;
                    }
                    else
                        container = false;
                }
                else
                            if (iTargetPos < 0 || iTargetPos == itemBase.position || itemBase.parent.SlotTaken(itemBase, iTargetPos))
                    container = false;
                else
                {
                    itemBase.position = iTargetPos;
                    itemBase.MarkDirty();
                    container = true;
                }
            }

            return container;
        }

        private void GiveItem(BasePlayer player, Item item, BaseEntity.GiveItemReason reason = 0)
        {
            if (reason == BaseEntity.GiveItemReason.ResourceHarvested)
                player.stats.Add(string.Format("harvest.{0}", item.info.shortname), item.amount, Stats.Server | Stats.Life);

            int num = item.amount;
            if (!GiveItem(player.inventory, item, null))
            {
                item.Drop(player.inventory.containerMain.dropPosition, player.inventory.containerMain.dropVelocity, new Quaternion());
                return;
            }

            if (string.IsNullOrEmpty(item.name))
            {
                player.Command("note.inv", new object[] { item.info.itemid, num, string.Empty, (int)reason });
                return;
            }

            player.Command("note.inv", new object[] { item.info.itemid, num, item.name, (int)reason });
        }

        private bool GiveItem(PlayerInventory inv, Item item, ItemContainer container = null)
        {
            if (item == null)
                return false;

            int num = -1;
            GetIdealPickupContainer(inv, item, ref container, ref num);
            if (container != null && MoveToContainer(item, container, num, true))
                return true;

            if (MoveToContainer(item, inv.containerMain, -1, true))
                return true;

            if (MoveToContainer(item, inv.containerBelt, -1, true))
                return true;

            return false;
        }

        private void GetIdealPickupContainer(PlayerInventory inv, Item item, ref ItemContainer container, ref int position)
        {
            if (item.info.stackable > 1)
            {
                if (inv.containerBelt != null && inv.containerBelt.FindItemByItemID(item.info.itemid) != null)
                {
                    container = inv.containerBelt;
                    return;
                }

                if (inv.containerMain != null && inv.containerMain.FindItemByItemID(item.info.itemid) != null)
                {
                    container = inv.containerMain;
                    return;
                }
            }

            if (!item.info.isUsable || item.info.HasFlag(ItemDefinition.Flag.NotStraightToBelt))
                return;

            container = inv.containerBelt;
        }

        public class PlayerInfo
        {
            public int Opened;
            public int Caught;
            public int Write;
            public int Black;
        }

        [ChatCommand("oysters")]
        void cmdTopOysters2(BasePlayer player, string command, string[] args)
        {
            if (player == null) return;

            int i = 1;
            var top = PlayersList.Where(x => x.Value != null && covalence.Players.FindPlayerById(x.Key.ToString()) != null).ToList().OrderByDescending(p => p.Value.Opened).
                        Select(p => $"{i++}. <color=#8ABB50>{covalence.Players.FindPlayerById(p.Key.ToString()).Name}</color>: всего {p.Value.Opened}, белых {p.Value.Write}, черных {p.Value.Black}").Take(10);
            SendReply(player, $"<size=15>ТОП Ловцов устриц за текущий вайп:\n{string.Join("\n", top)}</size>");
        }

        public Dictionary<ulong, PlayerInfo> PlayersList = new Dictionary<ulong, PlayerInfo>();

        void LoadData()
        {
            try
            {
                PlayersList = Interface.Oxide.DataFileSystem.ReadObject<Dictionary<ulong, PlayerInfo>>($"{Name}_Players");
            }
            catch
            {
                PlayersList = new Dictionary<ulong, PlayerInfo>();
            }
        }

        void SaveData()
        {
            if (PlayersList != null)
                Interface.Oxide.DataFileSystem.WriteObject($"{Name}_Players", PlayersList);
        }
    }
}

// --- End of file: Oysters.cs ---
// --- Next file ---

// --- GitHub Source URL: https://github.com/RustyyTown/plugins/blob/main/Settings.cs ---
// --- Original Local Path: Settings.cs ---

﻿using Oxide.Core.Plugins;
using Oxide.Game.Rust.Cui;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using UnityEngine;

namespace Oxide.Plugins
{
    [Info("Settings", "VooDoo", "1.0.0")]
    [Description("Settings switch's")]
    public class Settings : RustPlugin
    {
        [PluginReference] Plugin XMenu;

        #region Config
        public Dictionary<ulong, Dictionary<int, UserSettings>> userSettings = new Dictionary<ulong, Dictionary<int, UserSettings>>();
        public class UserSettings
        {
            public bool isOn;
            public Dictionary<int, UserSettings> settings;
        }

        private PluginConfig config;
        private class PluginConfig
        {
            public ColorConfig colorConfig;
            public class ColorConfig
            {
                public string menuContentHighlighting;
                public string menuContentHighlightingalternative;

                public string gradientColor;
            }

            public Dictionary<int, PluginSettings> pluginSettings;
            public class PluginSettings
            {
                public string commandDescription;
                public string command;
                public bool isChecked;
                public bool onlyOne;

                public Dictionary<int, PluginSettings> subSettings;
            }
        }

        private void Init()
        {
            config = Config.ReadObject<PluginConfig>();
        }

        protected override void LoadDefaultConfig()
        {
            Config.WriteObject(GetDefaultConfig(), true);
        }

        private PluginConfig GetDefaultConfig()
        {
            return new PluginConfig
            {
                colorConfig = new PluginConfig.ColorConfig()
                {
                    menuContentHighlighting = "#0000007f",
                    menuContentHighlightingalternative = "#FFFFFF10",

                    gradientColor = "#00000099",
                },

                pluginSettings = new Dictionary<int, PluginConfig.PluginSettings>()
                {
                    [0] = new PluginConfig.PluginSettings
                    {
                        commandDescription = "Описание пункта в меню настроек",
                        command = "chat.say Switch",
                        isChecked = false,
                        onlyOne = true,
                        subSettings = new Dictionary<int, PluginConfig.PluginSettings>()
                        {
                            [0] = new PluginConfig.PluginSettings
                            {
                                commandDescription = "Описание подпункта #1",
                                command = "chat.say SubSwitch1",
                                isChecked = true,
                                subSettings = null,
                                onlyOne = false
                            },
                            [1] = new PluginConfig.PluginSettings
                            {
                                commandDescription = "Описание подпункта #2",
                                command = "chat.say SubSwitch2",
                                isChecked = true,
                                subSettings = null,
                                onlyOne = false
                            },
                            [2] = new PluginConfig.PluginSettings
                            {
                                commandDescription = "Описание подпункта #3",
                                command = "chat.say SubSwitch3",
                                isChecked = true,
                                subSettings = null,
                                onlyOne = false
                            }
                        }
                     },
                    [1] = new PluginConfig.PluginSettings
                    {
                        commandDescription = "Описание пункта в меню настроек",
                        command = "chat.say Switch",
                        isChecked = false,
                        onlyOne = false,
                        subSettings = new Dictionary<int, PluginConfig.PluginSettings>()
                        {
                            [0] = new PluginConfig.PluginSettings
                            {
                                commandDescription = "Описание подпункта #1",
                                command = "chat.say SubSwitch1",
                                isChecked = true,
                                subSettings = null,
                                onlyOne = false
                            },
                            [1] = new PluginConfig.PluginSettings
                            {
                                commandDescription = "Описание подпункта #2",
                                command = "chat.say SubSwitch2",
                                isChecked = true,
                                subSettings = null,
                                onlyOne = false
                            },
                            [2] = new PluginConfig.PluginSettings
                            {
                                commandDescription = "Описание подпункта #3",
                                command = "chat.say SubSwitch3",
                                isChecked = true,
                                subSettings = null,
                                onlyOne = false
                            }
                        }
                    },
                    [2] = new PluginConfig.PluginSettings
                    {
                        commandDescription = "Описание пункта в меню настроек",
                        command = "chat.say Switch",
                        isChecked = false,
                        onlyOne = true,
                        subSettings = new Dictionary<int, PluginConfig.PluginSettings>()
                        {
                            [0] = new PluginConfig.PluginSettings
                            {
                                commandDescription = "Описание подпункта #1",
                                command = "chat.say SubSwitch1",
                                isChecked = true,
                                subSettings = null,
                                onlyOne = false
                            },
                            [1] = new PluginConfig.PluginSettings
                            {
                                commandDescription = "Описание подпункта #2",
                                command = "chat.say SubSwitch2",
                                isChecked = true,
                                subSettings = null,
                                onlyOne = false
                            },
                            [2] = new PluginConfig.PluginSettings
                            {
                                commandDescription = "Описание подпункта #3",
                                command = "chat.say SubSwitch3",
                                isChecked = true,
                                subSettings = null,
                                onlyOne = false
                            }
                        }
                    }
                }
            };
        }
        #endregion

        #region Layers
        public const string MenuLayer = "XMenu";
        public const string MenuItemsLayer = "XMenu.MenuItems";
        public const string MenuSubItemsLayer = "XMenu.MenuSubItems";
        public const string MenuContent = "XMenu.Content";
        #endregion


        Timer TimerInitialize;
        private void OnServerInitialized()
        {
            TimerInitialize = timer.Every(5f, () =>
            {
                if (XMenu.IsLoaded)
                {
                    XMenu.Call("API_RegisterSubMenu", this.Name, "Main", "Настройки", "RenderSettings", null);

                    int SettingsID = (int)XMenu.Call("API_GetSubMenuID", "Main", "Настройки");
                    cmd.AddChatCommand("settings", this, (p, cmd, args) => rust.RunClientCommand(p, $"custommenu true Main {SettingsID}"));

                    TimerInitialize.Destroy();
                }
            });

            foreach (var p in BasePlayer.activePlayerList) { OnPlayerConnected(p); }
        }

        private void OnPlayerConnected(BasePlayer player)
        {
            if (player == null)
                return;

            if (player.IsReceivingSnapshot)
            {
                timer.In(1f, () => OnPlayerConnected(player));
                return;
            }

            if (!userSettings.ContainsKey(player.userID))
            {
                userSettings.Add(player.userID, new Dictionary<int, UserSettings>());

                foreach(var settings in config.pluginSettings)
                {
                    userSettings[player.userID].Add(settings.Key, new UserSettings()
                    {
                            isOn = settings.Value.isChecked,
                            settings = new Dictionary<int, UserSettings>()
                    });

                    foreach(var subSettings in settings.Value.subSettings)
                    {
                        userSettings[player.userID][settings.Key].settings.Add(subSettings.Key, new UserSettings()
                        {
                            isOn = subSettings.Value.isChecked,
                            settings = null
                        });
                    }
                }
            }
            else
            {
                foreach (var settings in config.pluginSettings)
                {
                    if (!userSettings[player.userID].ContainsKey(settings.Key))
                    {
                        userSettings[player.userID].Add(settings.Key, new UserSettings()
                        {
                            isOn = settings.Value.isChecked,
                            settings = new Dictionary<int, UserSettings>()
                        });
                    }

                    foreach (var subSettings in settings.Value.subSettings)
                    {
                        if (!userSettings[player.userID][settings.Key].settings.ContainsKey(subSettings.Key))
                        {
                            userSettings[player.userID][settings.Key].settings.Add(subSettings.Key, new UserSettings()
                            {
                                isOn = subSettings.Value.isChecked,
                                settings = null
                            });
                        }
                    }
                }
            }
        }

        private void RenderSettings(ulong userID, object[] objects)
        {
            CuiElementContainer Container = (CuiElementContainer)objects[0];
            bool FullRender = (bool)objects[1];
            string Name = (string)objects[2];
            int ID = (int)objects[3];
            int Page = (int)objects[4];

            Container.Add(new CuiElement
            {
                Name = MenuContent,
                Parent = MenuLayer,
                Components =
                    {
                        new CuiImageComponent
                        {
                            Color = "0 0 0 0",
                        },
                        new CuiRectTransformComponent
                        {
                            AnchorMin = "0.5 0.5",
                            AnchorMax = "0.5 0.5",
                            OffsetMin = "-215 -230",
                            OffsetMax = "500 270"
                        },
                    }
            });
            Container.Add(new CuiElement
            {
                Name = MenuContent + ".Info",
                Parent = MenuContent,
                Components =
                    {
                        new CuiImageComponent
                        {
                            Color = HexToRustFormat(config.colorConfig.menuContentHighlighting),
                        },
                        new CuiRectTransformComponent
                        {
                            AnchorMin = "0 1",
                            AnchorMax = "0 1",
                            OffsetMin = "80 -460",
                            OffsetMax = "630 -10"
                        }
                    }
            });

            for(int i = 0, x = 0; i < config.pluginSettings.Count; i++)
            {
                string text = $"<color=#FFFFFF66>☐  {config.pluginSettings.ElementAt(i).Value.commandDescription}</color>";
                if(userSettings[userID][config.pluginSettings.ElementAt(i).Key].isOn)
                    text = $"<color=#FFFFFF>☑  {config.pluginSettings.ElementAt(i).Value.commandDescription}</color>";

                Container.Add(new CuiElement
                {
                    Name = MenuContent + ".Info" + $".{i}.-1",
                    Parent = MenuContent + ".Info",
                    Components =
                            {
                                new CuiTextComponent
                                {
                                    Text = text,
                                    Align = TextAnchor.MiddleLeft,
                                    FontSize = 16,
                                    Font = "robotocondensed-regular.ttf",
                                },
                                new CuiRectTransformComponent
                                {
                                    AnchorMin = "0 1",
                                    AnchorMax = "0 1",
                                    OffsetMin = $"30 {-50 - x * 25}",
                                    OffsetMax = $"550 {-25 - x * 25}"
                                }
                            }
                });

                Container.Add(new CuiButton
                {
                    Button = { Color = "1 1 1 0", Command = $"settings.sendcommand {x} {i} -1 {config.pluginSettings.ElementAt(i).Value.command.Replace("%STEAMID%", userID.ToString())}" },
                    RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1", },
                    Text = { Text = "", Align = TextAnchor.MiddleCenter }
                }, MenuContent + ".Info" + $".{i}.-1", MenuContent + ".Info" + $".{i}.Btn");
                x++;

                for(int j = 0; j < config.pluginSettings.ElementAt(i).Value.subSettings.Count; j++)
                {
                    string subText = $"<color=#FFFFFF66>☐  {config.pluginSettings.ElementAt(i).Value.subSettings.ElementAt(j).Value.commandDescription}</color>";
                    if (userSettings[userID][config.pluginSettings.ElementAt(i).Key].settings.ElementAt(j).Value.isOn)
                        subText = $"<color=#FFFFFF>☑  {config.pluginSettings.ElementAt(i).Value.subSettings.ElementAt(j).Value.commandDescription}</color>";

                    Container.Add(new CuiElement
                    {
                        Name = MenuContent + ".Info" + $".{i}.{j}",
                        Parent = MenuContent + ".Info",
                        Components =
                            {
                                new CuiTextComponent
                                {
                                    Text = subText,
                                    Align = TextAnchor.MiddleLeft,
                                    FontSize = 16,
                                    Font = "robotocondensed-regular.ttf",
                                },
                                new CuiRectTransformComponent
                                {
                                    AnchorMin = "0 1",
                                    AnchorMax = "0 1",
                                    OffsetMin = $"60 {-50 - x * 25}",
                                    OffsetMax = $"550 {-25 - x * 25}"
                                }
                            }
                    });
                    Container.Add(new CuiButton
                    {
                        Button = { Color = "1 1 1 0", Command = $"settings.sendcommand {x} {i} {j} {config.pluginSettings.ElementAt(i).Value.subSettings.ElementAt(j).Value.command.Replace("%STEAMID%", userID.ToString())}" },
                        RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1", },
                        Text = { Text = "", Align = TextAnchor.MiddleCenter }
                    }, MenuContent + ".Info" + $".{i}.{j}", MenuContent + ".Info" + $".{i}.{j}.Btn");
                    x++;
                }
            }
        }

        [ConsoleCommand("settings.sendcommand")]
        private void SendCommand(ConsoleSystem.Arg arg)
        {
            if (arg.HasArgs(4))
            {
                int x = int.Parse(arg.Args[0]);
                int i = int.Parse(arg.Args[1]);
                int j = int.Parse(arg.Args[2]);

                string command = string.Join(" ", arg.Args.Skip(3));

                rust.RunClientCommand(arg.Player(), command.Replace("%STEAMID%",arg.Player().UserIDString));

                if (j != -1 && config.pluginSettings[i].onlyOne)
                {
                    x = 0;
                    for(int o = 0; o < config.pluginSettings.Count; o++)
                    {
                        x++;
                        if (o >= i)
                            break;

                        for(int p = 0; p < config.pluginSettings.ElementAt(o).Value.subSettings.Count; p++)
                        {
                            x++;
                        }
                    }
                    for(int k = 0; k < config.pluginSettings[i].subSettings.Count; k++)
                    {
                        CuiHelper.DestroyUi(arg.Player(), MenuContent + ".Info" + $".{i}.{k}");
                        if (k != j)
                            userSettings[arg.Connection.userid][i].settings[k].isOn = false;
                        else
                            userSettings[arg.Connection.userid][i].settings[k].isOn = true;

                        CuiElementContainer Container = new CuiElementContainer();
                        bool isOn =userSettings[arg.Connection.userid][i].settings[k].isOn;
                        string subText = $"{(isOn ? "<color=#FFFFFF>☑" : "<color=#FFFFFF66>☐")}  {config.pluginSettings.ElementAt(i).Value.subSettings.ElementAt(k).Value.commandDescription}</color>";
                        Container.Add(new CuiElement
                        {
                            Name = MenuContent + ".Info" + $".{i}.{k}",
                            Parent = MenuContent + ".Info",
                            Components =
                            {
                                new CuiTextComponent
                                {
                                    Text = subText,
                                    Align = TextAnchor.MiddleLeft,
                                    FontSize = 16,
                                    Font = "robotocondensed-regular.ttf",
                                },
                                new CuiRectTransformComponent
                                {
                                    AnchorMin = "0 1",
                                    AnchorMax = "0 1",
                                    OffsetMin = $"{60} {-50 - x * 25}",
                                    OffsetMax = $"550 {-25 - x * 25}"
                                }
                            }
                        });


                        Container.Add(new CuiButton
                        {
                            Button = { Color = "1 1 1 0", Command = $"settings.sendcommand {x} {i} {k} {config.pluginSettings.ElementAt(i).Value.subSettings.ElementAt(k).Value.command}" },
                            RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1", },
                            Text = { Text = "", Align = TextAnchor.MiddleCenter }
                        }, MenuContent + ".Info" + $".{i}.{k}", MenuContent + ".Info" + $".{i}.{k}.Btn");
                        CuiHelper.AddUi(arg.Player(), Container);
                        x++;
                    }
                    return;
                }
                else
                {
                    CuiHelper.DestroyUi(arg.Player(), MenuContent + ".Info" + $".{i}.{j}");

                    if (j != -1)
                    {
                        userSettings[arg.Connection.userid][i].settings[j].isOn = !userSettings[arg.Connection.userid][i].settings[j].isOn;
                    }
                    else
                    {
                        userSettings[arg.Connection.userid][i].isOn = !userSettings[arg.Connection.userid][i].isOn;
                    }

                    bool isOn = j != -1 ? userSettings[arg.Connection.userid][i].settings[j].isOn : userSettings[arg.Connection.userid][i].isOn;
                    CuiElementContainer Container = new CuiElementContainer();
                    string subText = $"{(isOn ? "<color=#FFFFFF>☑" : "<color=#FFFFFF66>☐")}  {(j != -1 ? config.pluginSettings.ElementAt(i).Value.subSettings.ElementAt(j).Value.commandDescription : config.pluginSettings.ElementAt(i).Value.commandDescription)}</color>";
                    Container.Add(new CuiElement
                    {
                        Name = MenuContent + ".Info" + $".{i}.{j}",
                        Parent = MenuContent + ".Info",
                        Components =
                            {
                                new CuiTextComponent
                                {
                                    Text = subText,
                                    Align = TextAnchor.MiddleLeft,
                                    FontSize = 16,
                                    Font = "robotocondensed-regular.ttf",
                                },
                                new CuiRectTransformComponent
                                {
                                    AnchorMin = "0 1",
                                    AnchorMax = "0 1",
                                    OffsetMin = $"{(j != -1 ? "60" : "30")} {-50 - x * 25}",
                                    OffsetMax = $"550 {-25 - x * 25}"
                                }
                            }
                    });


                    Container.Add(new CuiButton
                    {
                        Button = { Color = "1 1 1 0", Command = $"settings.sendcommand {x} {i} {j} {(j != -1 ? config.pluginSettings.ElementAt(i).Value.subSettings.ElementAt(j).Value.command.Replace("%STEAMID%", arg.Player().userID.ToString()) : config.pluginSettings.ElementAt(i).Value.command.Replace("%STEAMID%", arg.Player().userID.ToString()))}" },
                        RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1", },
                        Text = { Text = "", Align = TextAnchor.MiddleCenter }
                    }, MenuContent + ".Info" + $".{i}.{j}", MenuContent + ".Info" + $".{i}.{j}.Btn");
                    CuiHelper.AddUi(arg.Player(), Container);
                }
            }
        }

        #region Utils
        private static string HexToRustFormat(string hex)
        {
            if (string.IsNullOrEmpty(hex))
            {
                hex = "#FFFFFFFF";
            }

            var str = hex.Trim('#');

            if (str.Length == 6)
                str += "FF";

            if (str.Length != 8)
            {
                throw new Exception(hex);
                throw new InvalidOperationException("Cannot convert a wrong format.");
            }

            var r = byte.Parse(str.Substring(0, 2), NumberStyles.HexNumber);
            var g = byte.Parse(str.Substring(2, 2), NumberStyles.HexNumber);
            var b = byte.Parse(str.Substring(4, 2), NumberStyles.HexNumber);
            var a = byte.Parse(str.Substring(6, 2), NumberStyles.HexNumber);

            Color color = new Color32(r, g, b, a);

            return $"{color.r:F2} {color.g:F2} {color.b:F2} {color.a:F2}";
        }
        #endregion
    }
}


// --- End of file: Settings.cs ---
// --- Next file ---

// --- GitHub Source URL: https://github.com/RustyyTown/plugins/blob/main/SAMSiteAuth.cs ---
// --- Original Local Path: SAMSiteAuth.cs ---

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using ProtoBuf;
using UnityEngine;

namespace Oxide.Plugins
{
    [Info("SAMSiteAuth", "Kektus", "1.0.1")]
    [Description("Makes SAM Sites act in a similar fashion to shotgun traps and flame turrets.")]
    public class SAMSiteAuth : RustPlugin
    {
        private void Init()
        {
            var entities = BaseNetworkable.serverEntities.Where(p => p is SamSite).ToList();
            foreach (var entity in entities)
            {
                var samsite = entity as SamSite;
                if (!samsite.GetBuildingPrivilege().IsValid()) continue;
                entity.gameObject.AddComponent<SamController>();
            }
        }

        private void Unload()
        {
            var objects = UnityEngine.Object.FindObjectsOfType<SamController>();
            if (objects == null) return;
            foreach (var obj in objects)
            {
                UnityEngine.Object.Destroy(obj);
            }
        }

        private void OnEntityBuilt(Planner plan, GameObject go)
        {
            var entity = go.GetComponent<BaseEntity>();
            if (entity is SamSite)
                entity.gameObject.AddComponent<SamController>();
        }

        private static bool IsAuthed(BasePlayer player, BaseEntity entity)
        {
            return entity.GetBuildingPrivilege().authorizedPlayers.Any(x => x.userid == player.userID);
        }

        private static List<BasePlayer> Targets;
    
        public class SamController : MonoBehaviour
        {
            
            public SamSite entity;
            
            private void Awake()
            {
                entity = GetComponent<SamSite>();
            }

            public void FixedUpdate()
            {
                if (entity.currentTarget == null) return;
                Targets = new List<BasePlayer>();
                Vis.Entities(entity.currentTarget.transform.position, 1, Targets);
                foreach (var target in Targets)
                {
                    if (!IsAuthed(target, entity)) continue;
                    entity.currentTarget = null;
                    entity.CancelInvoke(entity.WeaponTick);
                    break;
                }
            }
        }
        
        /*var player = entity.currentTarget.GetComponentsInChildren<BaseMountable>()[1]._mounted;

                if (!IsAuthed(player, entity)) return;
                
                entity.currentTarget = null;
                entity.CancelInvoke(entity.WeaponTick);*/
    }
}

// --- End of file: SAMSiteAuth.cs ---
// --- Next file ---

// --- GitHub Source URL: https://github.com/RustyyTown/plugins/blob/main/MyMiniUI.cs ---
// --- Original Local Path: MyMiniUI.cs ---

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using Facepunch;
using Newtonsoft.Json;
using Oxide.Core;
using Oxide.Core.Libraries.Covalence;
using Oxide.Core.Plugins;
using Oxide.Game.Rust.Cui;
using UnityEngine;
using System.IO;
using System.Collections;


namespace Oxide.Plugins
{

  [Info("MyMiniUI","GAGA","1.0.0")]
  public class MyMiniUI : RustPlugin
   {
[PluginReference] Plugin ImageLibrary;

private void Unload()
		{
			foreach (var player in BasePlayer.activePlayerList) 
                CuiHelper.DestroyUi(player, Layer);
		}


private string Layer = "UI_DrawInterface"; 

void OnServerInitialized()
        {
ImageLibrary?.Call("AddImage", "https://i.postimg.cc/zXCmCgVY/helicopter-1.png", "GAGU");
            
      
            foreach (var player in BasePlayer.activePlayerList)
			{
				OnPlayerConnected(player);
			}
        }




 private void OnPlayerConnected(BasePlayer player)
		{
			if (player.IsReceivingSnapshot)
			{
				NextTick(() => OnPlayerConnected(player));
				return;
			}

			UI_DrawInterface(player );
		}











        private void UI_DrawInterface(BasePlayer player)
        {
            var elements = new CuiElementContainer();
            CuiElementContainer container = new CuiElementContainer();

            container.Add(new CuiPanel
            {
                CursorEnabled = false,
                RectTransform = {AnchorMin = "0.5 0", AnchorMax = "0.5 0", OffsetMin = "447 48", OffsetMax = "447 48" },
                Image = { Color = "0 0 0 0", Sprite = "Assets/Content/UI/UI.Background.Tile.psd", Material = "assets/content/ui/uibackgroundblur.mat"  }
            }, "Overlay", Layer);

                
            
           // container.Add(new CuiButton
           // {
           //     RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1", OffsetMin = "-335 -30", OffsetMax = "-275 30" },
           //     Button = {Command = $"chat.say /nomini", Color = "1.00 0.00 0.00 1.00" },
            //    Text = { Text = $"", FontSize = 15, Align = TextAnchor.MiddleCenter, Color = "1 1 1 1", Font = "robotocondensed-regular.ttf" }
           // }, Layer );
          container.Add(new CuiElement
                {
                    Parent = Layer,
                    Components =
                    {
                        new CuiRawImageComponent() { Png = (string)ImageLibrary?.Call("GetImage", "GAGU"), Color = "1.00 1.00 1.00 1" },
                        new CuiRectTransformComponent(){  AnchorMin = "0 0", AnchorMax = "1 1", OffsetMin = "-264 -30", OffsetMax = "-204 30" },
                    }
                });

elements.Add(new CuiButton
                    {
                        Button = { Command = $"chat.say /switchmini", Color = "1 0.96 0.88 0.15"},
                        RectTransform = {  AnchorMin = "0 0", AnchorMax = "1 1", OffsetMin = "-264 -30", OffsetMax = "-204 30" },
                        Text = { Text = "", Align = TextAnchor.MiddleCenter, FontSize = 12 }
                    }, Layer);

           
          //  container.Add(new CuiButton
           // {
           //     RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1", OffsetMin = "-264 -30", OffsetMax = "-204 30" },
           //     Button = {Command = $"chat.say /mymini", Color = "0.00 0.65 0.00 1.00" },
           //     Text = { Text = $"/mymini", FontSize = 15, Align = TextAnchor.MiddleCenter, Color = "1 1 1 1", Font = "robotocondensed-regular.ttf" }
           // }, Layer ); 

CuiHelper.DestroyUi(player, Layer);
            CuiHelper.AddUi(player, container);
            CuiHelper.AddUi(player, elements);
        }
















   







   }


}

// --- End of file: MyMiniUI.cs ---
// --- Next file ---

// --- GitHub Source URL: https://github.com/RustyyTown/plugins/blob/main/TimedNotifications.cs ---
// --- Original Local Path: TimedNotifications.cs ---

using Oxide.Core;
using Oxide.Core.Plugins;
using System.Collections.Generic;
using System;
using UnityEngine;
using Oxide.Game.Rust.Libraries;


namespace Oxide.Plugins
{
    [Info("Timed Notifications", "Hirsty", "0.0.4", ResourceId = 1277)]
    [Description("Depending on Preset Times, this plugin will display a popup with a notification.")]
    class TimedNotifications : RustPlugin
    {
        public static string version = "0.0.4";
        public bool PopUpNotifier = true;
        public string[] days;
        public string TZ;
        public int hour;
        public DateTime setDate;
        public int min;
        char sep = '/';
        char sep2 = ':';

[PluginReference]
        Plugin PopupNotifications;
        class StoredData
        {
            public HashSet<EventData> Events = new HashSet<EventData>();

            public StoredData()
            {
            }
        }
        class EventData
        {
            public DateTime EventDate;
            public string EventInfo;
            public string CommandLine;
            public bool broadcast;
            public string Schedule;
            public EventData()
            {

            }
            public EventData(DateTime Date, string info, string EventType = null)
            {
                this.EventDate = Date;
                this.broadcast = false;
                switch (EventType.ToLower())
                {
                    case "add":
                        this.EventInfo = info;
                        this.CommandLine = "";
                        this.Schedule = "none";
                        break;
                    case "cmd":
                        this.EventInfo = "";
                        this.CommandLine = info;
                        this.Schedule = "none";
                        break;
                    case "hourly":
                        this.EventInfo = info;
                        this.CommandLine = "";
                        this.Schedule = "hourly";
                        break;
                    case "daily":
                        this.EventInfo = info;
                        this.CommandLine = "";
                        this.Schedule = "daily";
                        break;
                    case "weekly":
                        this.EventInfo = info;
                        this.CommandLine = "";
                        this.Schedule = "weekly";
                        break;
                    case "monthly":
                        this.EventInfo = info;
                        this.CommandLine = "";
                        this.Schedule = "monthly";
                        break;
                    case "yearly":
                        this.EventInfo = info;
                        this.CommandLine = "";
                        this.Schedule = "yearly";
                        break;
                    case "hourlycmd":
                        this.EventInfo = "";
                        this.CommandLine = info;
                        this.Schedule = "hourly";
                        break;
                    case "dailycmd":
                        this.EventInfo = "";
                        this.CommandLine = info;
                        this.Schedule = "daily";
                        break;
                    case "weeklycmd":
                        this.EventInfo = "";
                        this.CommandLine = info;
                        this.Schedule = "weekly"; 
                        break;
                    case "monthlycmd":
                        this.EventInfo = "";
                        this.CommandLine = info;
                        this.Schedule = "monthly";
                        break;
                    case "yearlycmd":
                        this.EventInfo = "";
                        this.CommandLine = info;
                        this.Schedule = "yearly";
                        break;
                }
            }      
        }
        StoredData storedData;
        protected override void LoadDefaultConfig() {
            PrintWarning("Whoops! No config file, lets create a new one!"); // Runs when no configuration file has been found
            Config.Clear();
            Config["Plugin","Version"] = version;
            //Config["Events", "TimeZone"] = "GMT";
            Config["Events", "AllowedDays"] = "Mon,Tue,Wed,Thu,Fri,Sat,Sun";
            Config["Plugin", "PopUpTime"] = 20;
            Config["Plugin", "TimeCheck"] = 10;
            Config["Plugin", "EnablePopUps"]=true;
            SaveConfig();
        }
        private void Loaded() => LoadData(); // What to do when plugin loaded

        bool hasPermission(BasePlayer player, string permname)
        {
            if (player.net.connection.authLevel > 1)
                return true;
            return permission.UserHasPermission(player.userID.ToString(), permname);
        }
        private void LoadData()
        {
            storedData = Interface.GetMod().DataFileSystem.ReadObject<StoredData>("MyEvents");
            if (Convert.ToString(Config["Plugin", "Version"]) != version)
            {
                Puts("Uh oh! Not up to date! No Worries, lets update you!");
                switch(version)
                {
                    case "0.0.1":
                        Config["Plugin", "Version"] = version;
                        break;
                    case "0.0.2":
                        Config["Plugin", "Version"] = version;
                        Puts("Updating your Data File! Hang On!");
                        foreach (var storedEvent in storedData.Events)
                        {

                            if (storedEvent.CommandLine == null)
                            {
                                storedEvent.CommandLine = "";
                            }
                        }
                        Interface.GetMod().DataFileSystem.WriteObject("MyEvents", storedData);
                        break;
                    case "0.0.3":
                        Config["Plugin", "Version"] = version;
                        Puts("Updating your Data File! Hang On!");
                        foreach (var storedEvent in storedData.Events)
                        {

                            if (storedEvent.Schedule == null)
                            {
                                storedEvent.Schedule = "none";
                            }
                        }
                        Interface.GetMod().DataFileSystem.WriteObject("MyEvents", storedData);
                        break;
                    default:
                        Config["Plugin", "Version"] = version;
                        break;
                }
                SaveConfig();

            }
            permission.RegisterPermission("canplanevent", this);
            // Load Imformation from a Config file
            if (!PopupNotifications)
            {
                Puts("PopupNotifications not found! Using text based notifications!");
                PopUpNotifier = false;
            } else
            {
                
                if (Convert.ToBoolean(Config["Plugin", "EnablePopUps"]).ToString() != null)
                {
                    PopUpNotifier = Convert.ToBoolean(Config["Plugin", "EnablePopUps"]);
                }
            }
            string[] seperator = new string[] { "," };
            // Build array of events
            int tick;
            if (Convert.ToInt16(Config["Plugin", "TimeCheck"]) > 0)
            {
                tick = Convert.ToInt16(Config["Plugin", "TimeCheck"]);
            } else
            {
                tick = 10;
            }
            string daystring = Convert.ToString(Config["Events", "AllowedDays"]);
            days = daystring.Split(seperator, StringSplitOptions.RemoveEmptyEntries);
            timer.Repeat(tick, 0, () => EventCheck());
        }

        [ChatCommand("notification")] // Whatever cammand you want the player to type
        private void notification(BasePlayer player, string command, string[] args)
        {
            if(!hasPermission(player, "canplanevent")) { SendChatMessage(player, "Timed Notifications", "You don't have access to this command"); return; }
            switch (args.Length)
            {
                case 0:
                    SendHelp(player);
                    break;
                case 1:
                    switch (args[0])
                    {
                        case "list":
                            // List Notifications
                            int count = 0;
                            foreach (var storedEvent in storedData.Events)
                            {
                                if (!storedEvent.broadcast)
                                {
                                    count++;
                                    SendChatMessage(player, "", "ID: " +count + " - (D: " + storedEvent.EventDate.Day + "/" + storedEvent.EventDate.Month + "/" + storedEvent.EventDate.Year + " T: " + storedEvent.EventDate.Hour + ":" + storedEvent.EventDate.Minute + ") " + storedEvent.EventInfo);
                                }
                            }
                            if(count == 0)
                            {
                                SendChatMessage(player, "Timed Notifications", "No notifications planned! Time for some Planning!");
                            }
                                break;
                        case "reset":
                            // Remove all notifications
                            storedData.Events.Clear();
                            Interface.GetMod().DataFileSystem.WriteObject("MyEvents", storedData);
                            SendChatMessage(player, "Timed Notifications", "Events have been removed!");
                            break;
                        default:
                            SendHelp(player);
                            break;
                    }
                    break;
                case 2:
                case 3:
                case 4:
                    switch (args[0].ToLower())
                    {
                        case "add":
                        case "hourly":
                        case "daily":
                        case "weekly":
                        case "monthly":
                        case "yearly":
                        case "addcmd":
                        case "hourlycmd":
                        case "dailycmd":
                        case "weeklycmd":
                        case "monthlycmd":
                        case "yearlycmd":
                            string[] datepart2 = args[1].Split(sep);
                            string[] timepart2 = args[2].Split(sep2);
                            try
                            {
                                setDate = new DateTime(datepart2[2].ToInt(), datepart2[1].ToInt(), datepart2[0].ToInt(), timepart2[0].ToInt(), timepart2[1].ToInt(), 0);
                            }
                            catch
                            {
                                SendHelp(player);
                            }

                            string cmdinfo = args[3];
                            EventData infocmd = new EventData(setDate, cmdinfo, args[0]);
                            storedData.Events.Add(infocmd);
                            SendChatMessage(player, "Timed Notifications", "Event Saved");
                            Interface.GetMod().DataFileSystem.WriteObject("MyEvents", storedData);
                            break;
                        case "remove":

// List Notifications
                            int count = 0;
                            foreach (EventData storedEvent in storedData.Events)
                            {
                                if (!storedEvent.broadcast)
                                {
                                    count++;
                                    if(count.ToString() == args[1])
                                    {
                                        storedEvent.broadcast = true;
                                        Interface.GetMod().DataFileSystem.WriteObject("MyEvents", storedData);
                                    }
                                }
                            }
                            SendChatMessage(player, "Timed Notifications", "Event Removed");
                            break;
                        default:
                            SendHelp(player);
                            break;
                    }
                    break;
                default:
                    SendHelp(player);
                    break;
            }
            // Function for the chat command
        }
        void EventCheck()
        {
            if (!days.Contains(DateTime.Now.ToUniversalTime().ToString("ddd")))
            {
                return;
            } else {
                foreach(var storedEvent in storedData.Events)
                {
                    if(storedEvent.EventDate.Date <= DateTime.UtcNow && !storedEvent.broadcast)
                    {
                        Puts(storedEvent.EventDate.Date.ToString() + " <= " + DateTime.UtcNow.ToString());
                        if (storedEvent.CommandLine == "")
                        {
                            SendNotification(storedEvent.EventInfo, Convert.ToInt16(Config["Plugin", "PopUpTime"]));
                        } else
                        {
                            var rust = new Oxide.Game.Rust.Libraries.Rust();
                            
                            string args = storedEvent.CommandLine.Remove(0,storedEvent.CommandLine.IndexOf(" ") +1);

                            string command = storedEvent.CommandLine.Substring(0, storedEvent.CommandLine.IndexOf(" "));
                            rust.RunServerCommand(command, args);
                        }
                        switch (storedEvent.Schedule.ToLower())
                        {
                            case "hourly":
                                while (storedEvent.EventDate.Date <= DateTime.UtcNow)
                                {
                                    storedEvent.EventDate = storedEvent.EventDate.AddHours(1);
                                }
                                break;
                            case "daily":
                                while (storedEvent.EventDate.Date <= DateTime.UtcNow)
                                {
                                    storedEvent.EventDate = storedEvent.EventDate.AddDays(1);
                                }
                                break;
                            case "weekly":
                                while (storedEvent.EventDate.Date <= DateTime.UtcNow)
                                {
                                    storedEvent.EventDate = storedEvent.EventDate.AddDays(7);
                                }
                                break;
                            case "monthly":
                                while (storedEvent.EventDate.Date <= DateTime.UtcNow)
                                {
                                    storedEvent.EventDate = storedEvent.EventDate.AddMonths(1);
                                }
                                break;
                            case "yearly":
                                while (storedEvent.EventDate.Date <= DateTime.UtcNow)
                                {
                                    storedEvent.EventDate = storedEvent.EventDate.AddYears(1);
                                }
                                break;
                            default:
                                storedEvent.broadcast = true;
                                break;
                        }
                        Interface.GetMod().DataFileSystem.WriteObject("MyEvents", storedData);
                    }
                }
                // Check for Events on that day
                Interface.GetMod().DataFileSystem.WriteObject("MyEvents", storedData);

            }
        }
        void SendHelp(BasePlayer player)
        {
            SendChatMessage(player, "", "/notification (add|hourly|daily|weekly|monthly|yearly) <DD/MM/YY> <HH:MM> \"<MESSAGE>\" - To schedule a notification for the specified time");
            SendChatMessage(player, "", "/notification (addcmd|hourlycmd|dailycmd|weeklycmd|monthlycmd|yearlycmd) <DD/MM/YY> <HH:MM> \"<COMMAND>\" - To schedule a console command for the specified time");
            SendChatMessage(player, "", "/notification list - List Future Events");
            SendChatMessage(player, "", "/notification reset - Remove Current and Past Events");
            SendChatMessage(player, "", "/notification remove <ID> - Removes specified event - IDs will alter on removal");
        }
        //---------------------------->   Chat Sending   <----------------------------//
        void SendNotification(string message, int delay=5,BasePlayer player=null)
        {
            if (PopUpNotifier && PopupNotifications)
            {
                
                PopupNotifications.Call("CreatePopupNotification", "<color=orange>Notification:</color> " + message, player, delay);
               
            }
            else
            {
                if (player != null)
                {
                    SendChatMessage(player, "Notification", message);
                } else
                {
                    BroadcastChat("Notification", message);
                }
            }
        }
        void BroadcastChat(string prefix, string msg)
        {
            PrintToChat("<color=orange>" + prefix + "</color>: " + msg);
        }
        void SendChatMessage(BasePlayer player, string prefix, string msg)
        {
            if (prefix != "")
            {
                prefix = "<color=orange>" + prefix + "</color>: ";
            } else
            {
                prefix = "";
            }
            SendReply(player, prefix + msg);
        }
        //---------------------------------------------------------------------------//
    }
}


// --- End of file: TimedNotifications.cs ---
// --- Next file ---

// --- GitHub Source URL: https://github.com/RustyyTown/plugins/blob/main/AAlertRaid.cs ---
// --- Original Local Path: AAlertRaid.cs ---

﻿using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using Newtonsoft.Json;
using Oxide.Core;
using Oxide.Core.Plugins;
using UnityEngine;
using CompanionServer;
using Oxide.Ext.Discord;
using Oxide.Ext.Discord.Attributes;
using Oxide.Ext.Discord.Entities.Messages;
using Oxide.Ext.Discord.Entities.Channels;
using Oxide.Ext.Discord.Entities.Guilds;
using Oxide.Ext.Discord.Entities.Gatway;
using Oxide.Ext.Discord.Entities.Gatway.Events;
using Oxide.Ext.Discord.Entities.Messages.Embeds;
using Oxide.Ext.Discord.Entities.Permissions;
using Oxide.Ext.Discord.Entities;
using System.Text.RegularExpressions;
using Oxide.Ext.Discord.Builders.MessageComponents;
using Oxide.Ext.Discord.Entities.Interactions.MessageComponents;
using Oxide.Ext.Discord.Entities.Interactions;
using Oxide.Ext.Discord.Entities.Users;
using Oxide.Core.Libraries.Covalence;
using ru = Oxide.Game.Rust;
using ConVar;

namespace Oxide.Plugins
{
    [Info("AAlertRaid", "fermens", "0.0.72")]
    public class AAlertRaid : RustPlugin
    {
        #region CONFIG
        const bool fermensEN = false;

        private static PluginConfig config;

        protected override void LoadDefaultConfig()
        {
            config = PluginConfig.DefaultConfig();
        }

        protected override void LoadConfig()
        {
            base.LoadConfig();
            config = Config.ReadObject<PluginConfig>();
        }

        protected override void SaveConfig()
        {
            Config.WriteObject(config);
        }


        class VK
        {
            [JsonProperty(fermensEN ? "Enable?" : "Включить?")]
            public bool enable;

            [JsonProperty(fermensEN ? "API" : "API от группы")]
            public string api;

            [JsonProperty(fermensEN ? "Link to the group" : "Ссылка на группу")]
            public string link;

            [JsonProperty(fermensEN ? "Cooldown for sending" : "Кд на отправку")]
            public float cooldown;
        }
        class RUSTPLUS
        {
            [JsonProperty(fermensEN ? "Enable?" : "Включить?")]
            public bool enable;

            [JsonProperty(fermensEN ? "Cooldown for sending" : "Кд на отправку")]
            public float cooldown;
        }
        class INGAME
        {
            [JsonProperty(fermensEN ? "Enable?" : "Включить?")]
            public bool enable;

            [JsonProperty(fermensEN ? "Cooldown for sending" : "Кд на отправку")]
            public float cooldown;

            [JsonProperty(fermensEN ? "Send game effect when notification are received" : "Эффект при получении уведомления")]
            public string effect;

            [JsonProperty(fermensEN ? "Time after the UI is destroyed" : "Время, через которое пропадает UI [секунды]")]
            public float destroy;

            [JsonProperty("UI")]
            public string UI;
        }

        class DISCORD
        {
            [JsonProperty(fermensEN ? "Enable?" : "Включить?")]
            public bool enable;

            [JsonProperty(fermensEN ? "Cooldown for sending" : "Кд на отправку")]
            public float cooldown;

            [JsonProperty(fermensEN ? "Invitation link" : "Приглашение в группу")]
            public string link;

            [JsonProperty(fermensEN ? "Token (https://discordapp.com/developers/applications)" : "Токен бота (https://discordapp.com/developers/applications)")]
            public string token;

            [JsonProperty(fermensEN ? "Channel ID, where the player will take the code to confirm the profile" : "ID канала, гле игрок будет брать код, для подтверджения профиля")]
            public string channel;

            [JsonProperty(fermensEN ? "Info text" : "Дискорд канал с получением кода - текст")]
            public string channeltext;

            [JsonProperty(fermensEN ? "Info text - line color on the left" : "Дискорд канал с получением кода - цвет линии слева (https://gist.github.com/thomasbnt/b6f455e2c7d743b796917fa3c205f812#file-code_colors_discordjs-md)")]
            public uint channelcolor;

            [JsonProperty(fermensEN ? "Text on button" : "Дискорд канал с получением кода - кнопка")]
            public string channelbutton;

            [JsonProperty(fermensEN ? "Reply after button click" : "Дискорд канал с получением кода - ответ")]
            public string channelex;

            [JsonProperty(fermensEN ? "Don't touch this field" : "Дискорд канал с получением кода - ID сообщения (не трогаем! сам заполнится!)")]
            public string channelmessageid;
        }

        class TELEGRAM
        {
            [JsonProperty(fermensEN ? "Enable?" : "Включить?")]
            public bool enable;

            [JsonProperty(fermensEN ? "Cooldown for sending" : "Кд на отправку")]
            public float cooldown;

            [JsonProperty(fermensEN ? "Bot tag" : "Тэг бота")]
            public string bottag;

            [JsonProperty(fermensEN ? "Token" : "Токен")]
            public string token;
        }

        class UIMenu
        {
            [JsonProperty(fermensEN ? "Background color" : "Цвет фона")]
            public string background;

            [JsonProperty(fermensEN ? "Strip color" : "Цвет полоски")]
            public string stripcolor;

            [JsonProperty(fermensEN ? "Rectangular container background color" : "Цвет фона прямоугольного контейнера")]
            public string rectangularcolor;

            [JsonProperty(fermensEN ? "Button text color" : "Цвет текста в кнопке")]
            public string buttoncolortext;

            [JsonProperty(fermensEN ? "Text color" : "Цвет текста")]
            public string textcolor;

            [JsonProperty(fermensEN ? "Green button color" : "Цвет зелёной кнопки")]
            public string greenbuttoncolor;

            [JsonProperty(fermensEN ? "Red button color" : "Цвет красной кнопки")]
            public string redbuttoncolor;

            [JsonProperty(fermensEN ? "Gray button color" : "Цвет серой кнопки")]
            public string graybuttoncolor;

            [JsonProperty(fermensEN ? "Header text color" : "Цвет текста заголовка")]
            public string headertextcolor;

            [JsonProperty(fermensEN ? "Error text color" : "Цвет текста ошибки")]
            public string errortextcolor;

            [JsonProperty(fermensEN ? "Text color of <exit> and <back> buttons" : "Цвет текста кнопок <выход> и <назад>")]
            public string colortextexit;

            [JsonProperty(fermensEN ? "Rectangular container text color" : "Цвет текст прямоугольного контейнера")]
            public string rectangulartextcolor;

            [JsonProperty(fermensEN ? "The color of the text with hints at the bottom of the screen" : "Цвет текста с подсказками внизу экрана")]
            public string hintstextcolor;

            [JsonProperty(fermensEN ? "Abbreviations and their colors" : "Аббревиатуры и их цвета")]
            public UIMainMenu uIMainMenu;
        }

        class UIMainMenu
        {
            [JsonProperty(fermensEN ? "Abbreviation for telegram" : "Аббревиатура для телеграма")]
            public string abr_telegram;

            [JsonProperty(fermensEN ? "Telegram icon color" : "Цвет иконки телеграма")]
            public string color_telegram;

            [JsonProperty(fermensEN ? "Abbreviation for vk.com" : "Аббревиатура для вконтакте")]
            public string abr_vk;

            [JsonProperty(fermensEN ? "Vk.com icon color" : "Цвет иконки вконтакте")]
            public string color_vk;

            [JsonProperty(fermensEN ? "Abbreviation for rust+" : "Аббревиатура для rust+")]
            public string abr_rustplus;

            [JsonProperty(fermensEN ? "Rust+ icon color" : "Цвет иконки rust+")]
            public string color_rustplus;

            [JsonProperty(fermensEN ? "Abbreviation for discord" : "Аббревиатура для дискорда")]
            public string abr_discord;

            [JsonProperty(fermensEN ? "Discord icon color" : "Цвет иконки дискорда")]
            public string color_discord;

            [JsonProperty(fermensEN ? "Abbreviation for in game" : "Аббревиатура для графическое отображение в игре")]
            public string abr_ui;

            [JsonProperty(fermensEN ? "In game icon color" : "Цвет иконки графическое отображение в игре")]
            public string color_ui;
        }

        private class PluginConfig
        {
            [JsonProperty(fermensEN ? "Server name, will using for alerts" : "Название сервера - для оповещений")]
            public string servername;

            [JsonProperty(fermensEN ? "Raid alert works only for those who have permission" : "Оповещение о рейде работает только для тех, у кого есть разрешение")]
            public bool needpermission;

            [JsonProperty(fermensEN ? "VK.com" : "Оповещание о рейде в ВК")]
            public VK vk;

            [JsonProperty(fermensEN ? "Rust+" : "Оповещание о рейде в Rust+")]
            public RUSTPLUS rustplus;

            [JsonProperty(fermensEN ? "In game" : "Оповещание о рейде в игре")]
            public INGAME ingame;

            [JsonProperty(fermensEN ? "Discord" : "Оповещание о рейде в дискорд")]
            public DISCORD discord;

            [JsonProperty(fermensEN ? "Telegram" : "Оповещание о рейде в телеграм")]
            public TELEGRAM telegram { get; set; } = new TELEGRAM
            {
                token = "",
                cooldown = 1200f,
                enable = true,
                bottag = "@haxlite_bot"
            };

            [JsonProperty(fermensEN ? "Menu UI" : "Настройка UI")]
            public UIMenu ui { get; set; } = new UIMenu
            {
                background = "0.07843138 0.06666667 0.1098039 0.9490196",
                stripcolor = "0.8784314 0.9843137 1 0.5686275",
                rectangularcolor = "0.8901961 0.8901961 0.8901961 0.4156863",
                graybuttoncolor = "0.8901961 0.8901961 0.8901961 0.4156863",
                buttoncolortext = "1 1 1 0.9056942",
                rectangulartextcolor = "1 1 1 0.7843137",
                textcolor = "1 1 1 1",
                headertextcolor = "1 1 1 1",
                hintstextcolor = "1 1 1 0.6699298",
                greenbuttoncolor = "0.5450981 1 0.6941177 0.509804",
                errortextcolor = "1 0.5429931 0.5429931 0.787812",
                colortextexit = "0.5938045 0.5789595 0.5789595 1",
                redbuttoncolor = "1 0.5450981 0.5450981 0.509804",
                uIMainMenu = new UIMainMenu
                {
                    abr_discord = "DS",
                    abr_rustplus = "R+",
                    abr_telegram = "TG",
                    abr_ui = "UI",
                    abr_vk = "VK",
                    color_discord = "0.6313726 0.5764706 1 0.4156863",
                    color_rustplus = "1 0.5803921 0.6013725 0.4156863",
                    color_vk = "0.5803922 0.6627451 1 0.4156863",
                    color_ui = "1 0.7843137 0.5764706 0.4156863",
                    color_telegram = "0.5479987 0.9459876 1 0.4156863"
                }
            };


            [JsonProperty(fermensEN ? "Additional list" : "Дополнительный список предметов, которые учитывать")]
            public string[] spisok;

            [JsonProperty(fermensEN ? "Notification when usual items are destroyed" : "Оповещение при уничтожении обычных предметов")]
            public bool extralist;

            public static PluginConfig DefaultConfig()
            {
                return new PluginConfig()
                {
                    servername = "HaxLite X10",
                    vk = new VK
                    {
                        api = "",
                        cooldown = 1200f,
                        enable = true,
                    },
                    rustplus = new RUSTPLUS
                    {
                        cooldown = 600f,
                        enable = true
                    },
                    ingame = new INGAME
                    {
                        cooldown = 60f,
                        enable = true,
                        effect = "assets/prefabs/weapons/toolgun/effects/repairerror.prefab",
                        destroy = 4f,
                        UI = "[{\"name\":\"UIA\",\"parent\":\"Overlay\",\"components\":[{\"type\":\"UnityEngine.UI.RawImage\",\"material\":\"assets/content/ui/uibackgroundblur.mat\", \"sprite\":\"assets/content/ui/ui.background.transparent.linearltr.tga\",\"color\":\"0 0 0 0.6279221\"},{\"type\":\"RectTransform\",\"anchormin\":\"1 0.5\",\"anchormax\":\"1 0.5\",\"offsetmin\":\"-250 -30\",\"offsetmax\":\"0 30\"}]},{\"name\":\"D\",\"parent\":\"UIA\",\"components\":[{\"type\":\"UnityEngine.UI.Image\",\"color\":\"1 0 0 0.392904\"},{\"type\":\"RectTransform\",\"anchormin\":\"0 0\",\"anchormax\":\"1 0\",\"offsetmin\":\"0 0\",\"offsetmax\":\"0 5\"}]},{\"name\":\"T\",\"parent\":\"UIA\",\"components\":[{\"type\":\"UnityEngine.UI.Text\",\"text\":\"{text}\",\"fontSize\":12,\"align\":\"MiddleLeft\",\"color\":\"1 1 1 0.8644356\"},{\"type\":\"RectTransform\",\"anchormin\":\"0 0\",\"anchormax\":\"1 1\",\"offsetmin\":\"5 0\",\"offsetmax\":\"-5 0\"}]},{\"name\":\"U\",\"parent\":\"UIA\",\"components\":[{\"type\":\"UnityEngine.UI.Image\",\"color\":\"1 0 0 0.3921569\"},{\"type\":\"RectTransform\",\"anchormin\":\"0 1\",\"anchormax\":\"1 1\",\"offsetmin\":\"0 -5\",\"offsetmax\":\"0 0\"}]}]"
                    },
                    discord = new DISCORD
                    {
                        cooldown = 600f,
                        enable = true,
                        token = "",
                        channel = "",
                        channelbutton = fermensEN ? "Get code" : "Получить код",
                        channelex = fermensEN ? "Your code: {code}" : "Ваш код: {code}",
                        channelmessageid = "",
                        channeltext = fermensEN ? "Enter the received code in the integration menu for raid alerts.\nChat command /raid\nEnter it in the game itself, not in the discord!" : "Введите полученый код в меню интеграции дискорда с игровым профилем.\nЧат команда /raid\nВводить в самой игре, а не в дискорде!",
                        channelcolor = 14177041
                    },
                    spisok = _spisok
                };
            }
        }
        private static string[] _spisok = new string[] { "wall.external.high", "wall.external.high.stone", "gates.external.high.wood", "gates.external.high.stone", "wall.window.bars.metal", "wall.window.bars.toptier", "wall.window.glass.reinforced", "wall.window.bars.wood" };

        #endregion

        #region DISCORD
        private readonly DiscordSettings _discordSettings = new DiscordSettings();
        private DiscordGuild _guild;
        [DiscordClient] DiscordClient Client;
        private void CreateClient()
        {
            _discordSettings.ApiToken = config.discord.token;
            _discordSettings.Intents = GatewayIntents.GuildMessages | GatewayIntents.DirectMessages | GatewayIntents.Guilds | GatewayIntents.GuildMembers;
            _discordSettings.LogLevel = Ext.Discord.Logging.DiscordLogLevel.Error;
            Client.Connect(_discordSettings);

            timer.Once(5f, () =>
            {
                if (Client == null)
                {
                    CreateClient();
                    Debug.Log("Discord reconnecting in 5 sec...");
                }
                else
                {
                    DiscordChannel channel;
                    if (!_guild.Channels.TryGetValue(new Snowflake(config.discord.channel), out channel))
                    {
                        Debug.Log(fermensEN ? $"CHANNEL NOT FOUND! ({_guild.Channels.Count})" : $"КАНАЛ НЕ СУЩЕСТВУЕТ! ({_guild.Channels.Count})");
                        return;
                    }

                    var embeds = new List<DiscordEmbed> { new DiscordEmbed { Color = new DiscordColor(config.discord.channelcolor), Description = config.discord.channeltext } };
                    var components = CreateComponents(config.discord.channelbutton);
                    if (!string.IsNullOrEmpty(config.discord.channelmessageid))
                    {
                        channel.GetChannelMessage(Client, new Snowflake(config.discord.channelmessageid), message =>
                        {
                            message.Embeds = embeds;
                            message.Components.Clear();
                            message.Components = components;
                            message.EditMessage(Client);
                        },
                        error =>
                        {
                            if (error.HttpStatusCode == 404)
                            {
                                Debug.Log("all ok");
                                channel?.CreateMessage(Client, new MessageCreate { Embeds = embeds, Components = components }, message =>
                                {
                                    config.discord.channelmessageid = message.Id;
                                    SaveConfig();
                                });
                            }
                        });
                    }
                    else
                    {
                        channel?.CreateMessage(Client, new MessageCreate { Embeds = embeds, Components = components },
                         message =>
                         {
                             config.discord.channelmessageid = message.Id;
                             SaveConfig();
                         });
                    }
                }
            });
        }

        private void OnDiscordInteractionCreated(DiscordInteraction interaction)
        {
            if (interaction.Type != InteractionType.MessageComponent)
            {
                return;
            }

            if (!interaction.Data.ComponentType.HasValue || interaction.Data.ComponentType.Value != MessageComponentType.Button || interaction.Data.CustomId != $"{Name}_{ConVar.Server.ip}_{ConVar.Server.port}")
            {
                return;
            }

            DiscordUser user = interaction.User ?? interaction.Member?.User;
            HandleAcceptLinkButton(interaction, user);

        }
        private void HandleAcceptLinkButton(DiscordInteraction interaction, DiscordUser user)
        {
            string num;
            if (!DISCORDCODES.TryGetValue(user.Id.Id, out num))
            {
                num = DISCORDCODES[user.Id.Id] = RANDOMNUM();
            }
            string linkMessage = Formatter.ToPlaintext(config.discord.channelex.Replace("{code}", num));
            interaction.CreateInteractionResponse(Client, new InteractionResponse
            {
                Type = InteractionResponseType.ChannelMessageWithSource,
                Data = new InteractionCallbackData
                {
                    Content = linkMessage,
                    Flags = MessageFlags.Ephemeral
                }
            });
        }

        private void OnDiscordGatewayReady(GatewayReadyEvent ready)
        {
            _guild = ready.Guilds.FirstOrDefault().Value;
            Debug.Log(fermensEN ? $"DISCORD BOT CONNECTED TO ID{_guild.Id}." : $"DISCORD БОТ АВТОРИЗОВАН НА СЕРВЕРЕ ID{_guild.Id}.");
        }

        private void CloseClient()
        {
            if (Client != null) Client.Disconnect();
        }

        private void CREATECHANNEL(string dsid, string text)
        {
            Snowflake ss = new Snowflake(dsid);
            if (!_guild.Members.Any(x => x.Value.User.Id == ss)) return;
            _guild.Members.First(x => x.Value.User.Id == ss).Value.User.SendDirectMessage(Client, new MessageCreate { Content = text });
        }

        private void SENDMESSAGE(string dsid, string text)
        {
            DiscordChannel channel = _guild.GetChannel(dsid);

            if (channel != null)
            {
                channel?.CreateMessage(Client, text);
            }
            else
            {
                CREATECHANNEL(dsid, text);
            }
        }

        public List<ActionRowComponent> CreateComponents(string button)
        {
            MessageComponentBuilder builder = new MessageComponentBuilder();
            builder.AddActionButton(ButtonStyle.Success, button, $"{Name}_{ConVar.Server.ip}_{ConVar.Server.port}", false);

            return builder.Build();
        }

        private readonly List<Regex> _regexTags = new List<Regex>
        {
            new Regex("<color=.+?>", RegexOptions.Compiled),
            new Regex("<size=.+?>", RegexOptions.Compiled)
        };

        private readonly List<string> _tags = new List<string>
        {
            "</color>",
            "`",
            "</size>",
            "<i>",
            "</i>",
            "<b>",
            "</b>"
        };

        private string STRIP(string original)
        {
            if (string.IsNullOrEmpty(original))
            {
                return string.Empty;
            }

            foreach (string tag in _tags)
            {
                original = original.Replace(tag, "");
            }

            foreach (Regex regexTag in _regexTags)
            {
                original = regexTag.Replace(original, "");
            }

            return original;
        }

        private DiscordChannel GetChannel(string id)
        {
            return _guild.Channels.FirstOrDefault(x => x.Key.ToString() == id).Value;
        }
        #endregion

        #region STORAGE
        string connect = "14.02.22:1406";

        //{fon}

        string FON = "";
        string MAIN = "";
        string UI = "";
        string IF2 = "";
        string IF2A = "";
        string BTN = "";
        string ER = "";
        string IBLOCK = "";
        string MAINH = "";
        string AG = "";
        string EXIT = "";
        string BACK = "";

        #region Data
        class Storage
        {
            public string vk;
            public string telegram;
            public ulong discord;
            public bool rustplus;
            public bool ingamerust { get; set; } = true;
        }

        #region fermens#8767
        #endregion

        private Storage GetStorage(ulong userid)
        {
            Storage storage;
            if (datas.TryGetValue(userid, out storage)) return storage;

            string useridstring = userid.ToString();
            if (!Interface.Oxide.DataFileSystem.ExistsDatafile($"AAlertRaid/{useridstring}"))
            {
                storage = new Storage();
                datas.Add(userid, storage);
                return storage;
            }

            storage = Interface.Oxide.DataFileSystem.ReadObject<Storage>($"AAlertRaid/{useridstring}");
            datas.Add(userid, storage);
            return storage;
        }

        private void SaveStorage(BasePlayer player)
        {
            Storage storage;
            if (datas.TryGetValue(player.userID, out storage))
            {
                ServerMgr.Instance.StartCoroutine(Saving(player.UserIDString, storage));
            }
        }

        private IEnumerator Saving(string userid, Storage storage)
        {
            yield return new WaitForSeconds(1f);
            Interface.Oxide.DataFileSystem.WriteObject($"AAlertRaid/{userid}", storage);
        }

        Dictionary<ulong, Storage> datas = new Dictionary<ulong, Storage>();
        #endregion
        #endregion

        #region API TELEGRAM 
        private void GetRequestTelegram(string reciverID, string msg, BasePlayer player = null, bool accept = false) => webrequest.Enqueue($"https://api.telegram.org/bot" + config.telegram.token + "/sendMessage?chat_id=" + reciverID + "&text=" + Uri.EscapeDataString(msg), null, (code2, response2) => ServerMgr.Instance.StartCoroutine(GetCallbackTelegram(code2, response2, reciverID, player, accept)), this);

        private IEnumerator GetCallbackTelegram(int code, string response, string id, BasePlayer player = null, bool accept = false)
        {
            if (player == null || response == null) yield break;

            if (code == 401)
            {
                Debug.LogError("[AlertRaid] Telegram token not valid!");
            }
            else if (code == 200)
            {
                if (!response.Contains("error_code"))
                {
                    ALERT aLERT;
                    if (alerts.TryGetValue(player.userID, out aLERT))
                    {
                        aLERT.vkcodecooldown = DateTime.Now.AddMinutes(1);
                    }
                    else
                    {
                        alerts.Add(player.userID, new ALERT { telegramcodecooldown = DateTime.Now.AddMinutes(1) });
                    }

                    Storage storage = GetStorage(player.userID);
                    storage.telegram = id;
                    SaveStorage(player);

                    write[player.userID] = "";
                    OpenMenu(player, false);
                }
            }
            else
            {
                SendError(player, "telegramuseridnotfound");
            }
            yield break;
        }
        #endregion

        #region API VK
        const string connects = "001.002.2022:1508";
        class ALERT
        {
            public DateTime gamecooldown;
            public DateTime rustpluscooldown;
            public DateTime vkcooldown;
            public DateTime discordcooldown;
            public DateTime vkcodecooldown;

            public DateTime telegramcooldown;
            public DateTime telegramcodecooldown;
        }

        private static Dictionary<ulong, ALERT> alerts = new Dictionary<ulong, ALERT>();
        class CODE
        {
            public string id;
            public ulong gameid;
        }

        private Dictionary<string, CODE> VKCODES = new Dictionary<string, CODE>();
        private Dictionary<ulong, string> DISCORDCODES = new Dictionary<ulong, string>();

        private void GetRequest(string reciverID, string msg, BasePlayer player = null, string num = null) => webrequest.Enqueue("https://api.vk.com/method/messages.send?domain=" + reciverID + "&message=" + Uri.EscapeDataString(msg) + "&v=5.81&access_token=" + config.vk.api, null, (code2, response2) => ServerMgr.Instance.StartCoroutine(GetCallbackVK(code2, response2, reciverID, player, num)), this);

        private void SendError(BasePlayer player, string key)
        {
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "DestroyUI", "ER");
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", ER.Replace("{e0}", GetMessage(key, player.UserIDString)));
        }
        private IEnumerator GetCallbackVK(int code, string response, string id, BasePlayer player = null, string num = null)
        {
            if (player == null) yield break;
            if (response == null || code != 200)
            {
                ALERT alert;
                if (alerts.TryGetValue(player.userID, out alert)) alert.vkcooldown = DateTime.Now;
                Debug.Log("НЕ ПОЛУЧИЛОСЬ ОТПРАВИТЬ СООБЩЕНИЕ В ВК! => обнулили кд на отправку");
                yield break;
            }
            yield return new WaitForEndOfFrame();
            if (!response.Contains("error"))
            {
                ALERT aLERT;
                if (alerts.TryGetValue(player.userID, out aLERT))
                {
                    aLERT.vkcodecooldown = DateTime.Now.AddMinutes(1);
                }
                else
                {
                    alerts.Add(player.userID, new ALERT { vkcodecooldown = DateTime.Now.AddMinutes(1) });
                }
                if (VKCODES.ContainsKey(num)) VKCODES.Remove(num);
                VKCODES.Add(num, new CODE { gameid = player.userID, id = id });
                write[player.userID] = "";
                CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "DestroyUI", "ER");
                CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "DestroyUI", "BTN");
                CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", IBLOCK);
                CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", BTN.Replace("{text1}", GetMessage("{text1}", player.UserIDString)).Replace("{color}", "1 1 1 0.509804"));
                CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", IF2.Replace("{t3}", GetMessage("{t4}", player.UserIDString)).Replace("{coma}", "").Replace("{text2}", GetMessage("{text2}", player.UserIDString)));
            }
            else if (response.Contains("PrivateMessage"))
            {
                SendError(player, "rnprivate");
            }
            else if (response.Contains("ErrorSend"))
            {
                SendError(player, "rnerror");
            }
            else if (response.Contains("BlackList"))
            {
                SendError(player, "rnblack");
            }
            else
            {
                SendError(player, "rnerror2");
            }
            yield break;
        }
        #endregion

        #region COMMANDS
        private string perm = "discord fermens#8767";
        [PluginReference] Plugin BMenu;

        private void callcommandrn(BasePlayer player, string command, string[] arg)
        {
            OpenMenu(player);
        }

        private bool HasAcces(string id)
        {
            if (!config.needpermission) return true;
            return permission.UserHasPermission(id, perm);
        }

        private void OpenMenu(BasePlayer player, bool first = true)
        {
            if (!HasAcces(player.UserIDString))
            {
                player.ChatMessage(GetMessage("permission", player.UserIDString));
                return;
            }

            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "DestroyUI", "SubContent_UI");
            if (first)
            {
                CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "DestroyUI", "Main_UI");
                CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", FON);
                if (BMenu != null)
                {
                    BMenu.Call("DestroyProfileLayers", player);
                    BMenu.Call("SetPage", player.userID, "raid");
                    BMenu.Call("SetActivePButton", player, "raid");
                }
            }
            //0.5450981 1 0.6941177 0.509804
            //{\"name\":\"Main_UI\",\"parent\":\"Overlay\",\"components\":[{\"type\":\"UnityEngine.UI.Image\",\"color\":\"0.07843138 0.06666667 0.1098039 0.9490196\",\"material\":\"assets/content/ui/uibackgroundblur.mat\"},{\"type\":\"RectTransform\",\"anchormin\":\"0 0\",\"anchormax\":\"1 1\",\"offsetmin\":\"0 0\",\"offsetmax\":\"0 0\"}]},
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", MAIN);
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "DestroyUI", "E");
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", EXIT.Replace("{t7}", GetMessage("{t7}", player.UserIDString)));
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", MAINH.Replace("{a0}", GetMessage("{amain}", player.UserIDString)));
            int num = 0;
            Storage storage = GetStorage(player.userID);
            #region VK
            if (config.vk.enable && !string.IsNullOrEmpty(config.vk.api))
            {
                if (!string.IsNullOrEmpty(storage.vk)) AddElementUI(player, GetMessage("{element_vk}", player.UserIDString), config.ui.graybuttoncolor, GetMessage("{element_disable}", player.UserIDString), "raid.vkdelete", config.ui.uIMainMenu.abr_vk, config.ui.uIMainMenu.color_vk, num);
                else AddElementUI(player, GetMessage("{element_vk}", player.UserIDString), config.ui.greenbuttoncolor, GetMessage("{element_setup}", player.UserIDString), "raid.vkadd", config.ui.uIMainMenu.abr_vk, config.ui.uIMainMenu.color_vk, num);
                num++;
            }
            #endregion

            #region Telegram
            if (config.telegram.enable && !string.IsNullOrEmpty(config.telegram.token))
            {
                if (!string.IsNullOrEmpty(storage.telegram)) AddElementUI(player, GetMessage("{element_telegram}", player.UserIDString), config.ui.graybuttoncolor, GetMessage("{element_disable}", player.UserIDString), "raid.tgdelete", config.ui.uIMainMenu.abr_telegram, config.ui.uIMainMenu.color_telegram, num);
                else AddElementUI(player, GetMessage("{element_telegram}", player.UserIDString), config.ui.greenbuttoncolor, GetMessage("{element_setup}", player.UserIDString), "raid.tgadd", config.ui.uIMainMenu.abr_telegram, config.ui.uIMainMenu.color_telegram, num);
                num++;
            }
            #endregion

            #region Rust+
            if (config.rustplus.enable && !string.IsNullOrEmpty(App.serverid) && App.port > 0 && App.notifications)
            {
                if (!storage.rustplus) AddElementUI(player, GetMessage("{element_rustplus}", player.UserIDString), config.ui.greenbuttoncolor, GetMessage("{element_enable}", player.UserIDString), "raid.rustplus", config.ui.uIMainMenu.abr_rustplus, config.ui.uIMainMenu.color_rustplus, num);
                else AddElementUI(player, GetMessage("{element_rustplus}", player.UserIDString), config.ui.graybuttoncolor, GetMessage("{element_disable}", player.UserIDString), "raid.rustplus", config.ui.uIMainMenu.abr_rustplus, config.ui.uIMainMenu.color_rustplus, num);
                num++;
            }
            #endregion

            #region InGame
            if (config.ingame.enable)
            {
                if (!storage.ingamerust) AddElementUI(player, GetMessage("{element_ingame}", player.UserIDString), config.ui.greenbuttoncolor, GetMessage("{element_enable}", player.UserIDString), "raid.ingame", config.ui.uIMainMenu.abr_ui, config.ui.uIMainMenu.color_ui, num);
                else AddElementUI(player, GetMessage("{element_ingame}", player.UserIDString), config.ui.graybuttoncolor, GetMessage("{element_disable}", player.UserIDString), "raid.ingame", config.ui.uIMainMenu.abr_ui, config.ui.uIMainMenu.color_ui, num);
                num++;
            }
            #endregion

            #region Discord
            if (config.discord.enable && !string.IsNullOrEmpty(config.discord.token))
            {
                if (storage.discord == 0UL) AddElementUI(player, GetMessage("{element_discord}", player.UserIDString), config.ui.greenbuttoncolor, GetMessage("{element_setup}", player.UserIDString), "raid.discordadd", config.ui.uIMainMenu.abr_discord, config.ui.uIMainMenu.color_discord, num);
                else
                {
                    AddElementUI(player, GetMessage("{element_discord}", player.UserIDString), config.ui.graybuttoncolor, GetMessage("{element_disable}", player.UserIDString), "raid.discorddelete", config.ui.uIMainMenu.abr_discord, config.ui.uIMainMenu.color_discord, num);
                }
                num++;
            }
            #endregion
        }

        class C
        {
            public string min;
            public string max;
        }

        Dictionary<int, C> _caddele = new Dictionary<int, C>();

        private void AddElementUI(BasePlayer player, string name, string color, string button, string command, string ico, string icocolor, int num)
        {
            C ce;
            if (!_caddele.TryGetValue(num, out ce))
            {
                ce = new C();
                float start = 60f;
                float e = 30f;
                float p = 35f;
                float max = start - (num * p);
                ce.min = (max - e).ToString();
                ce.max = max.ToString();
                _caddele.Add(num, ce);
            }

            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", AG.Replace("{num}", num.ToString()).Replace("{id}", name).Replace("{coma}", command).Replace("{ico}", ico).Replace("{icocolor}", icocolor).Replace("{color}", color).Replace("{text1}", button).Replace("{min}", ce.min).Replace("{max}", ce.max));
        }

        Dictionary<ulong, string> write = new Dictionary<ulong, string>();

        [ConsoleCommand("raid.input")]
        void ccmdopeinput(ConsoleSystem.Arg arg)
        {
            BasePlayer player = arg.Player();
            if (player == null) return;
            string text = arg.HasArgs() ? string.Join(" ", arg.Args) : null;
            write[player.userID] = text;
        }

        private void SendError2(BasePlayer player, string key)
        {
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "DestroyUI", "BTN2");
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", IF2A.Replace("{text2}", GetMessage(key, player.UserIDString)).Replace("{coma}", "").Replace("{color}", config.ui.redbuttoncolor));
            timer.Once(1f, () =>
            {
                if (!player.IsConnected) return;
                CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "DestroyUI", "BTN2");
                CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", IF2A.Replace("{text2}", GetMessage("{text2}", player.UserIDString)).Replace("{coma}", "raid.accept").Replace("{color}", config.ui.greenbuttoncolor));
            });
        }

        #region InGame Comand
        [ConsoleCommand("raid.ingame")]
        void raplsgame(ConsoleSystem.Arg arg)
        {
            BasePlayer player = arg.Player();
            if (player == null) return;
            Storage storage = GetStorage(player.userID);
            storage.ingamerust = !storage.ingamerust;
            SaveStorage(player);
            OpenMenu(player, false);
        }
        #endregion


        #region Rust+ Comand
        [ConsoleCommand("raid.rustplus")]
        void rapls(ConsoleSystem.Arg arg)
        {
            BasePlayer player = arg.Player();
            if (player == null) return;
            Storage storage = GetStorage(player.userID);
            storage.rustplus = !storage.rustplus;
            SaveStorage(player);
            OpenMenu(player, false);
        }
        #endregion

        #region Discord command
        [ConsoleCommand("raid.discordadd")]
        void ccmdadiscoradd(ConsoleSystem.Arg arg)
        {
            BasePlayer player = arg.Player();
            if (player == null) return;
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "DestroyUI", "SubContent_UI");
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "DestroyUI", "E");
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", MAIN);
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", BACK.Replace("{t7}", GetMessage("{back}", player.UserIDString)));
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", UI.Replace("{t7}", GetMessage("{d7}", player.UserIDString)).Replace("{t6}", GetMessage("{d6}", player.UserIDString)).Replace("{t5}", GetMessage("{d5}", player.UserIDString)).Replace("{t4}", GetMessage("{d3}", player.UserIDString)).Replace("{t2}", config.discord.link).Replace("{t1}", GetMessage("{d1}", player.UserIDString)).Replace("{t0}", GetMessage("{d0}", player.UserIDString))); ;
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", BTN.Replace("{text1}", GetMessage("{text2}", player.UserIDString)).Replace("{coma}", "raid.acceptds").Replace("{color}", config.ui.greenbuttoncolor));
        }

        [ConsoleCommand("raid.acceptds")]
        void raidacceptds(ConsoleSystem.Arg arg)
        {
            BasePlayer player = arg.Player();
            if (player == null) return;
            //0.8901961 0.8901961 0.8901961 0.4156863
            //1 0.5450981 0.5450981 0.509804
            // raid.accept
            string text;
            if (!write.TryGetValue(player.userID, out text) || string.IsNullOrEmpty(text))
            {
                SendError(player, "rnnocode");
                return;
            }


            ulong user = DISCORDCODES.FirstOrDefault(x => x.Value == text).Key;
            if (user != 0UL)
            {
                Storage storage = GetStorage(player.userID);
                storage.discord = user;
                SaveStorage(player);
                DISCORDCODES.Remove(user);
                OpenMenu(player, false);
            }
            else
            {
                SendError(player, "rncancel");
            }
        }

        [ConsoleCommand("raid.discorddelete")]
        void vdiscorddelete(ConsoleSystem.Arg arg)
        {
            BasePlayer player = arg.Player();
            if (player == null) return;
            Storage storage = GetStorage(player.userID);
            storage.discord = 0;
            SaveStorage(player);
            OpenMenu(player, false);
        }
        #endregion

        #region Telegram COmand
        [ConsoleCommand("raid.tgdelete")]
        void rgdelete(ConsoleSystem.Arg arg)
        {
            BasePlayer player = arg.Player();
            if (player == null) return;
            Storage storage = GetStorage(player.userID);
            storage.telegram = null;
            SaveStorage(player);
            OpenMenu(player, false);
        }

        [ConsoleCommand("raid.tgadd")]
        void ccmdtgadd(ConsoleSystem.Arg arg)
        {
            BasePlayer player = arg.Player();
            if (player == null) return;
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "DestroyUI", "SubContent_UI");
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "DestroyUI", "E");
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", MAIN);
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", BACK.Replace("{t7}", GetMessage("{back}", player.UserIDString)));
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", UI.Replace("{t7}", GetMessage("{teleg7}", player.UserIDString)).Replace("{t6}", GetMessage("{teleg6}", player.UserIDString)).Replace("{t5}", GetMessage("{teleg5}", player.UserIDString)).Replace("{t4}", GetMessage("{teleg3}", player.UserIDString)).Replace("{t2}", GetMessage("{teleg2}", player.UserIDString).Replace("{tag}", config.telegram.bottag)).Replace("{t1}", GetMessage("{teleg1}", player.UserIDString).Replace("{tag}", config.telegram.bottag)).Replace("{t0}", GetMessage("{teleg0}", player.UserIDString)));
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", BTN.Replace("{text1}", GetMessage("{text2}", player.UserIDString)).Replace("{coma}", "raid.accepttg").Replace("{color}", config.ui.greenbuttoncolor));
        }

        [ConsoleCommand("raid.accepttg")]
        void ccmdaccepttg(ConsoleSystem.Arg arg)
        {
            BasePlayer player = arg.Player();
            if (player == null) return;

            ALERT aLERT;
            if (alerts.TryGetValue(player.userID, out aLERT) && aLERT.telegramcodecooldown > DateTime.Now)
            {
                SendError(player, "rnaddcooldown");
                return;
            }

            string text;
            if (!write.TryGetValue(player.userID, out text) || string.IsNullOrEmpty(text))
            {
                SendError(player, "telegid");
                return;
            }

            GetRequestTelegram(text, GetMessage("telegramadd", player.UserIDString), player, true);
        }
        #endregion

        #region Vk COmand
        [ConsoleCommand("raid.vkdelete")]
        void vkdelete(ConsoleSystem.Arg arg)
        {
            BasePlayer player = arg.Player();
            if (player == null) return;
            Storage storage = GetStorage(player.userID);
            storage.vk = null;
            SaveStorage(player);
            OpenMenu(player, false);
        }

        [ConsoleCommand("raid.vkadd")]
        void ccmdavkadd(ConsoleSystem.Arg arg)
        {
            BasePlayer player = arg.Player();
            if (player == null) return;
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "DestroyUI", "SubContent_UI");
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "DestroyUI", "E");
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", MAIN);
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", BACK.Replace("{t7}", GetMessage("{back}", player.UserIDString)));
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", UI.Replace("{t7}", GetMessage("{t7}", player.UserIDString)).Replace("{t6}", GetMessage("{t6}", player.UserIDString)).Replace("{t5}", GetMessage("{t5}", player.UserIDString)).Replace("{t4}", GetMessage("{t3}", player.UserIDString)).Replace("{t2}", config.vk.link).Replace("{t1}", GetMessage("{t1}", player.UserIDString)).Replace("{t0}", GetMessage("{t0}", player.UserIDString)));
            CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", BTN.Replace("{text1}", GetMessage("{text1}", player.UserIDString)).Replace("{coma}", "raid.send").Replace("{color}", config.ui.greenbuttoncolor));
        }

        [ConsoleCommand("raid.accept")]
        void ccmdaccept(ConsoleSystem.Arg arg)
        {
            BasePlayer player = arg.Player();
            if (player == null) return;
            //0.8901961 0.8901961 0.8901961 0.4156863
            //1 0.5450981 0.5450981 0.509804
            // raid.accept
            string text;
            if (!write.TryGetValue(player.userID, out text) || string.IsNullOrEmpty(text))
            {
                SendError2(player, "rnnocode");
                return;
            }

            CODE cODE;
            if (VKCODES.TryGetValue(text, out cODE) && cODE.gameid == player.userID)
            {
                Storage storage = GetStorage(player.userID);
                storage.vk = cODE.id;
                SaveStorage(player);
                VKCODES.Remove(text);
                OpenMenu(player, false);
            }
            else
            {
                SendError2(player, "rncancel");
            }
        }

        [ConsoleCommand("raid.send")]
        void ccmdopesendt(ConsoleSystem.Arg arg)
        {
            BasePlayer player = arg.Player();
            if (player == null) return;
            ALERT aLERT;
            if (alerts.TryGetValue(player.userID, out aLERT) && aLERT.vkcodecooldown > DateTime.Now)
            {
                SendError(player, "rnaddcooldown");
                return;
            }

            string text;
            if (!write.TryGetValue(player.userID, out text) || string.IsNullOrEmpty(text))
            {
                SendError(player, "null");
                return;
            }

            string vkid = text.ToLower().Replace("vk.com/", "").Replace("https://", "").Replace("http://", "");
            string num = RANDOMNUM();
            GetRequest(vkid, GetMessage("code", player.UserIDString).Replace("{code}", num), player, num);
        }
        #endregion

        private string RANDOMNUM() => UnityEngine.Random.Range(1000, 99999).ToString();
        #endregion

        #region OXIDE HOOKS
        private void Unload()
        {
            CloseClient();
            //CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connections = Network.Net.sv.connections }, null, "DestroyUI", "Main_UI");
        }

        private void OnServerInitialized()
        {
            LoadData();
            string token = "040620222246fermens";
            string namer = "AlertRaid";
            //webrequest.Enqueue($"https://fermens.haxlite.top/api.php", $"token={token}&name={namer}", (code, response) => ServerMgr.Instance.StartCoroutine(GetCallback(code, response)), this, Core.Libraries.RequestMethod.POST);
        }

        #region WEBCONFIG
        class FERMENS
        {
            public string fon;
            public string main;
            public string ui;
            public string if2;
            public string if2a;
            public string btn;
            public string er;
            public string iblock;
            public string mainh;
            public string exit;
            public string back;
            public string ag;
            public Dictionary<string, string> messagesEN;
            public Dictionary<string, string> messagesRU;
        }

        void LoadData()
        {
            SaveConfig();

            FERMENS json = Interface.GetMod().DataFileSystem.ReadObject<FERMENS>("AAlertRaid/FERMENSData");
            lang.RegisterMessages(json.messagesEN, this, "en");
            lang.RegisterMessages(json.messagesRU, this, "ru");
            perm = Name + ".use";
            permission.RegisterPermission(perm, this);

            FON = json.fon.Replace("{color}", config.ui.background);
            MAIN = json.main;
            UI = json.ui.Replace("{colorline}", config.ui.stripcolor).Replace("{rectangularcolor}", config.ui.rectangularcolor).Replace("{colordesctext}", config.ui.hintstextcolor).Replace("{colortext}", config.ui.textcolor).Replace("{colorcontainertext}", config.ui.rectangulartextcolor).Replace("{colorheader}", config.ui.headertextcolor).Replace("{colordesctext}", config.ui.hintstextcolor);
            IF2 = json.if2.Replace("{rectangularcolor}", config.ui.rectangularcolor).Replace("{colorline}", config.ui.stripcolor).Replace("{colorcontainertext}", config.ui.rectangulartextcolor).Replace("{colortext}", config.ui.textcolor).Replace("{greenbuttoncolor}", config.ui.greenbuttoncolor).Replace("{buttoncolortext}", config.ui.buttoncolortext);
            IF2A = json.if2a.Replace("{buttoncolortext}", config.ui.buttoncolortext);
            BTN = json.btn.Replace("{buttoncolortext}", config.ui.buttoncolortext);
            ER = json.er.Replace("{errortextcolor}", config.ui.errortextcolor);
            MAINH = json.mainh;
            IBLOCK = json.iblock;
            BACK = json.back.Replace("{colortextexit}", config.ui.colortextexit);
            EXIT = json.exit.Replace("{colortextexit}", config.ui.colortextexit);
            AG = json.ag.Replace("{colorline}", config.ui.stripcolor).Replace("{rectangularcolor}", config.ui.rectangularcolor).Replace("{colorcontainertext}", config.ui.rectangulartextcolor).Replace("{buttoncolortext}", config.ui.buttoncolortext);

            if (!string.IsNullOrEmpty(config.discord.token)) CreateClient();
            else Debug.LogError(fermensEN ? "AALERTRAID - TOKEN FOR DISCORD BOT IS NULL!" : "AALERTRAID - Не указан токен для Discord бота!");

            connect = ConVar.Server.ip + ":" + ConVar.Server.port;
            CreateSpawnGrid();

            Interface.Oxide.GetLibrary<ru.Libraries.Command>(null).AddChatCommand("raid", this, "callcommandrn");

            Debug.Log(">>AlertRaid<< OK!");
        }

        IEnumerator GetCallback(int code, string response)
        {
            if (response == null) yield break;
            if (code == 200)
            {
                FERMENS json = JsonConvert.DeserializeObject<FERMENS>(response);
                if (json == null)
                {
                    Debug.LogError("UPDATE PLUGIN! [discord fermens#8767]");
                    yield break;
                }
                if (config.discord.link == null)
                {
                    config.discord.link = GetMessage("{t2}", "0");
                    if (config.vk.link == "{t2}") config.vk.link = "VK.COM/YOURLINK";
                }

                if (config.vk.link == null)
                {
                    config.vk.link = GetMessage("{d2}", "0");
                    if (config.vk.link == "{d2}") config.vk.link = "DISCORD.GG/YOURLINK";
                }
                SaveConfig();

                lang.RegisterMessages(json.messagesEN, this, "en");
                lang.RegisterMessages(json.messagesRU, this, "ru");
                perm = Name + ".use";
                permission.RegisterPermission(perm, this);

                FON = json.fon.Replace("{color}", config.ui.background);
                MAIN = json.main;
                UI = json.ui.Replace("{colorline}", config.ui.stripcolor).Replace("{rectangularcolor}", config.ui.rectangularcolor).Replace("{colordesctext}", config.ui.hintstextcolor).Replace("{colortext}", config.ui.textcolor).Replace("{colorcontainertext}", config.ui.rectangulartextcolor).Replace("{colorheader}", config.ui.headertextcolor).Replace("{colordesctext}", config.ui.hintstextcolor);
                IF2 = json.if2.Replace("{rectangularcolor}", config.ui.rectangularcolor).Replace("{colorline}", config.ui.stripcolor).Replace("{colorcontainertext}", config.ui.rectangulartextcolor).Replace("{colortext}", config.ui.textcolor).Replace("{greenbuttoncolor}", config.ui.greenbuttoncolor).Replace("{buttoncolortext}", config.ui.buttoncolortext);
                IF2A = json.if2a.Replace("{buttoncolortext}", config.ui.buttoncolortext);
                BTN = json.btn.Replace("{buttoncolortext}", config.ui.buttoncolortext);
                ER = json.er.Replace("{errortextcolor}", config.ui.errortextcolor);
                MAINH = json.mainh;
                IBLOCK = json.iblock;
                BACK = json.back.Replace("{colortextexit}", config.ui.colortextexit);
                EXIT = json.exit.Replace("{colortextexit}", config.ui.colortextexit);
                AG = json.ag.Replace("{colorline}", config.ui.stripcolor).Replace("{rectangularcolor}", config.ui.rectangularcolor).Replace("{colorcontainertext}", config.ui.rectangulartextcolor).Replace("{buttoncolortext}", config.ui.buttoncolortext);

                if (!string.IsNullOrEmpty(config.discord.token)) CreateClient();
                else Debug.LogError(fermensEN ? "AALERTRAID - TOKEN FOR DISCORD BOT IS NULL!" : "AALERTRAID - Не указан токен для Discord бота!");

                connect = ConVar.Server.ip + ":" + ConVar.Server.port;
                CreateSpawnGrid();

                Interface.Oxide.GetLibrary<ru.Libraries.Command>(null).AddChatCommand("raid", this, "callcommandrn");

                Debug.Log(">>AlertRaid<< OK!");
            }

            yield break;
        }
        #endregion

        private void OnEntityDeath(BaseCombatEntity entity, HitInfo info)
        {
            if (info == null || entity == null) return;
            BasePlayer player = info.InitiatorPlayer;
            if (player == null) return;
            if (entity is BuildingBlock)
            {
                int tt = (int)(entity as BuildingBlock).grade;
                if (tt <= 0) return;
                ServerMgr.Instance.StartCoroutine(Alerting(entity, player, tt));
            }
            else if (config.extralist && (entity is DecayEntity || entity is IOEntity) || entity is AnimatedBuildingBlock || entity is SamSite || entity is AutoTurret || config.spisok.Contains(entity.ShortPrefabName))
            {
                ServerMgr.Instance.StartCoroutine(Alerting(entity, player));
            }
        }
        #endregion

        #region FUNCTIONS

        private IEnumerator Alerting(BaseCombatEntity entity, BasePlayer player, int tt = 0)
        {
            Vector3 position = entity.transform.position;
            string dname = entity.ShortPrefabName;

            if (tt == 1) dname += " Wood";
            else if (tt == 2) dname += " Stone";
            else if (tt == 3) dname += " Metal";
            else if (tt == 4) dname += " TopTier";

            BuildingPrivlidge buildingPrivlidge = entity is BuildingPrivlidge ? entity as BuildingPrivlidge : entity.GetBuildingPrivilege(entity.WorldSpaceBounds());
            if (buildingPrivlidge == null) yield break;
            if (!buildingPrivlidge.AnyAuthed()) yield break;

            var list = buildingPrivlidge.authorizedPlayers.ToList();

            yield return CoroutineEx.waitForSeconds(0.5f);

            string name = player.displayName;
            string attackerid = player.UserIDString;
            string quad = GetNameGrid(position);
            string connect = ConVar.Server.ip + ":" + ConVar.Server.port;

            string key = "+" + dname;

            foreach (var z in list)
            {
                string destroy = GetMessage(key, z.userid.ToString());
                if (destroy == key) destroy = entity.ShortPrefabName.Replace(".deployed", "");

                ALERTPLAYER(z.userid, name, quad, connect, destroy, attackerid);

                yield return CoroutineEx.waitForEndOfFrame;
            }
        }

        List<ulong> block = new List<ulong>();
        private void ALERTPLAYER(ulong ID, string name, string quad, string connect, string destroy, string attackerid)
        {
            string IDstring = ID.ToString();

            if (!HasAcces(IDstring)) return;

            ALERT alert;
            if (!alerts.TryGetValue(ID, out alert))
            {
                alerts.Add(ID, new ALERT());
                alert = alerts[ID];
            }
            Storage storage = GetStorage(ID);

            #region ОПОВЕЩЕНИЕ В ВК
            if (config.vk.enable && !string.IsNullOrEmpty(config.vk.api) && alert.vkcooldown < DateTime.Now)
            {
                if (!string.IsNullOrEmpty(storage.vk))
                {
                    GetRequest(storage.vk, GetMessage("alertvk", IDstring).Replace("{ip}", connect).Replace("{steamid}", attackerid).Replace("{name}", name).Replace("{destroy}", destroy).Replace("{quad}", quad).Replace("{servername}", config.servername));
                    alert.vkcooldown = DateTime.Now.AddSeconds(config.vk.cooldown);
                }
            }
            #endregion

            #region ОПОВЕЩЕНИЕ В ТЕЛЕГРАМ
            if (config.telegram.enable && !string.IsNullOrEmpty(config.telegram.token) && alert.telegramcooldown < DateTime.Now)
            {
                if (!string.IsNullOrEmpty(storage.telegram))
                {
                    GetRequestTelegram(storage.telegram, GetMessage("alerttelegram", IDstring).Replace("{ip}", connect).Replace("{steamid}", attackerid).Replace("{name}", name).Replace("{destroy}", destroy).Replace("{quad}", quad).Replace("{servername}", config.servername));
                    alert.telegramcooldown = DateTime.Now.AddSeconds(config.telegram.cooldown);
                }
            }
            #endregion

            #region ОПОВЕЩЕНИЕ В RUST+
            if (!string.IsNullOrEmpty(App.serverid) && App.port > 0 && App.notifications && storage.rustplus && config.rustplus.enable && alert.rustpluscooldown < DateTime.Now)
            {
                NotificationList.SendNotificationTo(ID, NotificationChannel.SmartAlarm, GetMessage("alertrustplus", IDstring).Replace("{steamid}", attackerid).Replace("{ip}", connect).Replace("{name}", name).Replace("{destroy}", destroy).Replace("{quad}", quad).Replace("{servername}", config.servername), config.servername, Util.GetServerPairingData());
                alert.rustpluscooldown = DateTime.Now.AddSeconds(config.rustplus.cooldown);
            }
            #endregion

            #region ОПОВЕЩЕНИЕ В DISCORD
            if (config.discord.enable && !block.Contains(ID) && !string.IsNullOrEmpty(config.discord.token) && alert.discordcooldown < DateTime.Now)
            {
                if (storage.discord != 0UL)
                {
                    Snowflake ss = new Snowflake(storage.discord);
                    if (!_guild.Members.Any(x => x.Value.User.Id == ss)) return;
                    _guild.Members.First(x => x.Value.User.Id == ss).Value.User.SendDirectMessage(Client, new MessageCreate { Content = GetMessage("alertdiscord", IDstring).Replace("{steamid}", attackerid).Replace("{ip}", connect).Replace("{name}", name).Replace("{destroy}", destroy).Replace("{quad}", quad).Replace("{servername}", config.servername) }, error: err =>
                    {
                        if (err.DiscordError.Code == 50007)
                        {
                            block.Add(ID);
                        }
                    });
                    alert.discordcooldown = DateTime.Now.AddSeconds(config.discord.cooldown);
                }
            }
            #endregion

            #region ОПОВЕЩЕНИЕ В ИГРЕ
            if (storage.ingamerust && config.ingame.enable && alert.gamecooldown < DateTime.Now)
            {
                BasePlayer player = BasePlayer.FindByID(ID);
                if (player != null && player.IsConnected)
                {
                    Timer ss;
                    if (timal.TryGetValue(player.userID, out ss))
                    {
                        if (!ss.Destroyed) ss.Destroy();
                    }
                    CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "DestroyUI", "UIA");
                    CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "AddUI", config.ingame.UI.Replace("{text}", GetMessage("alertingame", IDstring).Replace("{steamid}", attackerid).Replace("{ip}", connect).Replace("{name}", name).Replace("{destroy}", destroy).Replace("{quad}", quad).Replace("{servername}", config.servername)));
                    if (!string.IsNullOrEmpty(config.ingame.effect)) EffectNetwork.Send(new Effect(config.ingame.effect, player, 0, Vector3.up, Vector3.zero) { scale = 1f }, player.net.connection);
                    timal[player.userID] = timer.Once(config.ingame.destroy, () => CommunityEntity.ServerInstance.ClientRPCEx(new Network.SendInfo { connection = player.net.connection }, null, "DestroyUI", "UIA"));
                    alert.gamecooldown = DateTime.Now.AddSeconds(config.ingame.cooldown);
                }
            }
            #endregion
        }

        private Dictionary<ulong, Timer> timal = new Dictionary<ulong, Timer>();
        #endregion

        #region Lang
        private string GetMessage(string key, string userId) => lang.GetMessage(key, this, userId);
        #endregion

        #region GRID
        private static Dictionary<string, Vector3> Grids = new Dictionary<string, Vector3>();
        private void CreateSpawnGrid()
        {
            Grids.Clear();
            var worldSize = (ConVar.Server.worldsize);
            float offset = worldSize / 2;
            var gridWidth = (0.0066666666666667f * worldSize);
            float step = worldSize / gridWidth;

            string start = "";

            char letter = 'A';
            int number = 0;

            for (float zz = offset; zz > -offset; zz -= step)
            {
                for (float xx = -offset; xx < offset; xx += step)
                {
                    Grids.Add($"{start}{letter}{number}", new Vector3(xx - 55f, 0, zz + 20f));
                    if (letter.ToString().ToUpper() == "Z")
                    {
                        start = "A";
                        letter = 'A';
                    }
                    else
                    {
                        letter = (char)(((int)letter) + 1);
                    }


                }
                number++;
                start = "";
                letter = 'A';
            }
        }

        private string GetNameGrid(Vector3 pos) => Grids.Where(x => x.Value.x < pos.x && x.Value.x + 150f > pos.x && x.Value.z > pos.z && x.Value.z - 150f < pos.z).FirstOrDefault().Key;
        #endregion
    }
}

// --- End of file: AAlertRaid.cs ---
// --- Next file ---

// --- GitHub Source URL: https://github.com/RustyyTown/plugins/blob/main/PvXselector.cs ---
// --- Original Local Path: PvXselector.cs ---

using Oxide.Core;
//using Oxide.Core.Libraries;
using Oxide.Core.Plugins;
using Oxide.Game.Rust.Cui;
using Rust;
using System;                      //DateTime
using System.Collections.Generic;  //Required for Whilelist
//using System.Data;
//using System.Globalization;
using System.Linq;
//using System.Reflection;
using UnityEngine;
//using System.Collections;
//using ConVar;
//using Facepunch;
//using Network;
//using ProtoBuf;
//using System.Runtime.CompilerServices;
//using Oxide.Core.Libraries.Covalence;
//using System.Text.RegularExpressions;
//using Oxide.Plugins;
using Oxide.Core.Configuration;

namespace Oxide.Plugins
{
    [Info("PvXSelector", "Alphawar", "0.9.5", ResourceId = 1817)]
    [Description("Player vs X Selector: Beta version 14")]
    class PvXselector : RustPlugin
    {

        #region Data/PlayerJoin/ServerInit
        //Loaded goes first
        PlayerDataStorage playerData;
        private DynamicConfigFile PlayerData;
        TicketDataStorage ticketData;
        private DynamicConfigFile TicketData;
        TicketLogStorage ticketLog;
        private DynamicConfigFile TicketLog;

        private List<ulong> selectGuiOpen = new List<ulong>();
        private Hash<ulong, PlayerInfo> InfoCache = new Hash<ulong, PlayerInfo>();
        private List<ulong> SleeperCache = new List<ulong>();
        private List<ulong> UnknownUserCache = new List<ulong>();
        private List<BasePlayer> AdminPlayerMode = new List<BasePlayer>();
        private List<BasePlayer> activeAdmins = new List<BasePlayer>();
        private List<ulong> antiChatSpam = new List<ulong>();
        private Dictionary<ulong, List<string>> OpenUI = new Dictionary<ulong, List<string>>();

        class PlayerDataStorage
        {
            public Hash<ulong, PlayerInfo> Info = new Hash<ulong, PlayerInfo>();
            public List<ulong> sleepers = new List<ulong>();
            public List<ulong> UnknownUser = new List<ulong>();
        }
        class TicketDataStorage
        {
            public Dictionary<int, ulong> Link = new Dictionary<int, ulong>();
            public Dictionary<ulong, Ticket> Info = new Dictionary<ulong, Ticket>();
            public Dictionary<ulong, string> Notification = new Dictionary<ulong, string>();
        }
        class TicketLogStorage
        {
            public Dictionary<int, LogData> Log = new Dictionary<int, LogData>();
        }

        class PlayerInfo
        {
            public string username;
            public string FirstConnection;
            public string LatestConnection;
            public string mode;
            public bool ticket;
        }
        class Ticket
        {
            public int TicketNumber;
            public string Username;
            public string UserId;
            public string requested;
            public string reason;
            public string CreatedTimeStamp;
        }
        class LogData
        {
            public string UserId;
            public string AdminId;
            public string Username;
            public string AdminName;
            public string requested;
            public string reason;
            public bool Accepted;
            public string CreatedTimeStamp;
            public string ClosedTimeStamp;
        }

        void OnServerInitialized()
        {
            LoadData();
            InfoCache = playerData.Info;
            checkPlayersRegistered();
            RegisterGroups();
            foreach (BasePlayer _player in BasePlayer.activePlayerList)
            {
                if (!isNPC(_player))
                {
                    createPvXIndicator(_player);
                    if (isplayerNA(_player))createPvXSelector(_player);
                    if (hasPerm(_player, "admin"))
                    {
                        activeAdmins.Add(_player);
                        createAdminIndicator(_player);
                    }
                    updatePlayerChatTag(_player);
                }
            }
            foreach (ulong _key in playerData.Info.Keys)
            {
                if (playerData.Info[_key].FirstConnection == null) playerData.Info[_key].FirstConnection = DateTimeStamp();
                if (playerData.Info[_key].LatestConnection == null) playerData.Info[_key].LatestConnection = DateTimeStamp();
                if (playerData.Info[_key].FirstConnection == "null") playerData.Info[_key].FirstConnection = DateTimeStamp();
                if (playerData.Info[_key].LatestConnection == "null") playerData.Info[_key].LatestConnection = DateTimeStamp();
            }
        }
        void Loaded()
        {
            PlayerData = Interface.Oxide.DataFileSystem.GetFile("PvX/PlayerData");
            TicketData = Interface.Oxide.DataFileSystem.GetFile("PvX/TicketData");
            TicketLog = Interface.Oxide.DataFileSystem.GetFile("PvX/TicketLog");
            lang.RegisterMessages(messages, this);
            permissionHandle();
            LoadVariables();
        }
        void Unloaded()
        {
            foreach (var _player in BasePlayer.activePlayerList)
            {
                DestroyAllPvXUI(_player);
            }
            SaveAll();
        }

        void saveCacheData()
        {
            playerData.Info = InfoCache;
            playerData.sleepers = SleeperCache;
            playerData.UnknownUser = UnknownUserCache;
            PlayerData.WriteObject(playerData);
        }
        void saveTicketData()
        {
            TicketData.WriteObject(ticketData);
        }
        void saveTicketLog()
        {
            TicketLog.WriteObject(TicketLog);
        }
        void SaveAll()
        {
            playerData.Info = InfoCache;
            playerData.sleepers = SleeperCache;
            playerData.UnknownUser = UnknownUserCache;
            PlayerData.WriteObject(playerData);
            TicketData.WriteObject(ticketData);
            TicketLog.WriteObject(ticketLog);
        }

        void LoadData()
        {
            try
            {
                playerData = PlayerData.ReadObject<PlayerDataStorage>();
            }
            catch
            {
                Puts("Couldn't load player data, creating new datafile");
                playerData = new PlayerDataStorage();
                InfoCache = playerData.Info;
            }
            try
            {
                ticketData = TicketData.ReadObject<TicketDataStorage>();
            }
            catch
            {
                Puts("Couldn't load Ticket data, creating new datafile");
                ticketData = new TicketDataStorage();
            }
            try
            {
                ticketLog = TicketLog.ReadObject<TicketLogStorage>();
            }
            catch
            {
                Puts("Couldn't load Ticket Log, creating new datafile");
                ticketLog = new TicketLogStorage();
            }
        }
        void OnPlayerInit(BasePlayer _player)
        {
            if (_player == null) return;
            if (_player.HasPlayerFlag(BasePlayer.PlayerFlags.ReceivingSnapshot))
            {
                timer.Once(3, () => OnPlayerInit(_player));
                return;
            }
            else PlayerLoaded(_player);
        }
        void PlayerLoaded(BasePlayer _player)
        {
            if (hasPerm(_player, "admin"))
            {
                activeAdmins.Add(_player);
                createAdminIndicator(_player);
            }
            if (playerData.UnknownUser.Contains(_player.userID))
            {
                updatePvXPlayerData(_player);
                playerData.UnknownUser.Remove(_player.userID);
            }
            if (isplayerNA(_player))
            {
                updatePlayerChatTag(_player);
                saveCacheData();
                createPvXIndicator(_player);
                createPvXSelector(_player);
                return;
            }
            InfoCache[_player.userID].LatestConnection = DateTimeStamp();
            updatePlayerChatTag(_player);
            if (SleeperCache.Contains(_player.userID))
            {
                updatePvXPlayerData(_player);
                SleeperCache.Remove(_player.userID);
                saveCacheData();
            }
            if (UnknownUserCache.Contains(_player.userID))
            {
                updatePvXPlayerData(_player);
                saveCacheData();
            }
            SaveAll();
            createPvXIndicator(_player);
            if (InfoCache[_player.userID].mode != "NA") return;
            else if (ticketData.Notification.ContainsKey(_player.userID)) LangMSG(_player, "TickClosLogin", ticketData.Notification[_player.userID]);
            else createPvXSelector(_player);
        }
        void OnPlayerDisconnected(BasePlayer _player)
        {
            selectGuiOpen.Remove(_player.userID);
            if (hasPerm(_player, "admin"))
            {
                activeAdmins.Remove(_player);
            }
        }
        void OnPlayerRespawned(BasePlayer _player)
        {
        }


        void addTicketLog(BasePlayer _admin, int _ticketID, bool _)
        {
            ulong _UserID = ticketData.Link[_ticketID];
            int _logID = NewLogID();
            ticketLog.Log.Add(_logID, new LogData
            {
                Accepted = true,
                ClosedTimeStamp = DateTimeStamp(),
                AdminId = _admin.UserIDString,
                CreatedTimeStamp = ticketData.Info[_UserID].CreatedTimeStamp,
                reason = ticketData.Info[_UserID].reason,
                requested = ticketData.Info[_UserID].requested,
                UserId = ticketData.Info[_UserID].UserId,
                AdminName = _admin.displayName,
                Username = ticketData.Info[_UserID].Username,
            });
        }

        void checkPlayersRegistered()
        {
            foreach (BasePlayer _player in BasePlayer.activePlayerList)
                if (!(InfoCache.ContainsKey(_player.userID)))
                    addPlayer(_player);

            foreach (BasePlayer _player in BasePlayer.sleepingPlayerList)
                if (!(InfoCache.ContainsKey(_player.userID)))
                    addSleeper(_player);
        }
        void addPlayer(BasePlayer _player)
        {
            if (isNPC(_player.userID)) return;
            InfoCache.Add(_player.userID, new PlayerInfo
            {
                username = _player.displayName,
                mode = "NA",
                ticket = false,
                FirstConnection = DateTimeStamp(),
                LatestConnection = DateTimeStamp(),
            });
            createPvXSelector(_player);
            saveCacheData();
        }
        void addSleeper(BasePlayer _player)
        {
            if (isNPC(_player.userID)) return;
            InfoCache.Add(_player.userID, new PlayerInfo
            {
                username = _player.displayName,
                mode = "NA",
                ticket = false,
                FirstConnection = DateTimeStamp(),
                LatestConnection = "Sleeper",
            });
            SleeperCache.Add(_player.userID);
            saveCacheData();
        }
        void addOffline(ulong _userID)
        {
            if (isNPC(_userID)) return;
            InfoCache.Add(_userID, new PlayerInfo
            {
                username = "UNKNOWN",
                mode = "NA",
                ticket = false,
                FirstConnection = DateTimeStamp(),
                LatestConnection = "UNKNOWN",
            });
            UnknownUserCache.Add(_userID);
            saveCacheData();
        }

        static string pvxPlayerSelectorUI = "createPvXModeSelector";
        static string pvxPlayerUI = "pvxPlayerModeUI";
        static string pvxAdminUI = "pvxAdminTicketCountUI";
        string[] GuiList = new string[] { pvxPlayerSelectorUI, pvxPlayerUI, pvxAdminUI};

        #endregion

        #region Config/Permision/Plugin Ref
        //Players
        private bool PvEAttackPvE;
        private bool PvEAttackPvP;
        private bool PvPAttackPvE;
        private bool PvPAttackPvP;
        private bool PvELootPvE;
        private bool PvELootPvP;
        private bool PvPLootPvE;
        private bool PvPLootPvP;
        private bool PvEUsePvPDoor;
        private bool PvPUsePvEDoor;
        private float PvEDamagePvE;
        private float PvEDamagePvP;
        private float PvPDamagePvE;
        private float PvPDamagePvP;
        private float PvEDamagePvEStruct;
        private float PvEDamagePvPStruct;
        private float PvPDamagePvEStruct;
        private float PvPDamagePvPStruct;
        //Metabolism
        private float PvEFoodLossRate;
        private float PvEWaterLossRate;
        private float PvEHealthGainRate;
        private float PvEFoodSpawn;
        private float PvEWaterSpawn;
        private float PvEHealthSpawn;
        private float PvPFoodLossRate;
        private float PvPWaterLossRate;
        private float PvPHealthGainRate;
        private float PvPFoodSpawn;
        private float PvPWaterSpawn;
        private float PvPHealthSpawn;
        //NPC
        private bool NPCAttackPvE;
        private bool NPCAttackPvP;
        private bool PvEAttackNPC;
        private bool PvPAttackNPC;
        private float NPCDamagePvE;
        private float NPCDamagePvP;
        private float PvEDamageNPC;
        private float PvPDamageNPC;
        private bool PvELootNPC;
        private bool PvPLootNPC;
        //Animal
        private float PvEDamageAnimals;
        private float PvPDamageAnimals;
        private float NPCDamageAnimals;
        private float AnimalsDamagePvE;
        private float AnimalsDamagePvP;
        private float AnimalsDamageNPC;
        //Turret
        private bool TurretPvETargetPvE;
        private bool TurretPvETargetPvP;
        private bool TurretPvPTargetPvE;
        private bool TurretPvPTargetPvP;
        private bool TurretPvETargetNPC;
        private bool TurretPvPTargetNPC;
        private bool TurretPvETargetAnimal;
        private bool TurretPvPTargetAnimal;
        private float TurretPvEDamagePvEAmnt;
        private float TurretPvEDamagePvPAmnt;
        private float TurretPvPDamagePvEAmnt;
        private float TurretPvPDamagePvPAmnt;
        private float TurretPvEDamageNPCAmnt;
        private float TurretPvPDamageNPCAmnt;
        private float TurretPvEDamageAnimalAmnt;
        private float TurretPvPDamageAnimalAmnt;
        //Helicopter
        private bool HeliTargetPvE;
        private bool HeliTargetPvP;
        private bool HeliTargetNPC;
        private float HeliDamagePvE;
        private float HeliDamagePvP;
        private float HeliDamageNPC;
        private float HeliDamagePvEStruct;
        private float HeliDamagePvPStruct;
        private float HeliDamageAnimal;
        private float HeliDamageByPvE;
        private float HeliDamageByPvP;
        //Fire
        private float FireDamagePvE;
        private float FireDamagePvP;
        private float FireDamageNPC;
        private float FireDamagePvEStruc;
        private float FireDamagePvPStruc;
        //Others
        public static bool DisableUI_FadeIn;
        private bool DebugMode;
        private bool NamesIncludeSleepers;
        private string ChatPrefixColor;
        private string ChatPrefix;
        private string ChatMessageColor;

        protected override void LoadDefaultConfig()
        {
            Puts("Creating a new configuration file!");
            Config.Clear();
            LoadVariables();
        }
        void LoadVariables() //Stores Default Values, calling GetConfig passing: menu, dataValue, defaultValue
        {
            //Players
            PvEAttackPvE = Convert.ToBoolean(GetConfig("2: Player", "01: PvE v PvE", false));
            PvEAttackPvP = Convert.ToBoolean(GetConfig("2: Player", "02:PvE v PvP", false));
            PvPAttackPvE = Convert.ToBoolean(GetConfig("2: Player", "03:PvP v PvE", false));
            PvPAttackPvP = Convert.ToBoolean(GetConfig("2: Player", "04:PvP v PvP", true));
            PvELootPvE = Convert.ToBoolean(GetConfig("2: Player", "05:PvE Loot PvE", true));
            PvELootPvP = Convert.ToBoolean(GetConfig("2: Player", "06:PvE Loot PvP", false));
            PvPLootPvE = Convert.ToBoolean(GetConfig("2: Player", "07:PvP Loot PvE", false));
            PvPLootPvP = Convert.ToBoolean(GetConfig("2: Player", "08:PvP Loot PvP", true));
            PvEUsePvPDoor = Convert.ToBoolean(GetConfig("2: Player", "09:PvE Use PvPDoor", false));
            PvPUsePvEDoor = Convert.ToBoolean(GetConfig("2: Player", "10:PvP Use PvEDoor", false));
            PvEDamagePvE = Convert.ToSingle(GetConfig("2: Player", "11:PvE Damage PvE", 0.0));
            PvEDamagePvP = Convert.ToSingle(GetConfig("2: Player", "12:PvE Damage PvP", 0.0));
            PvPDamagePvE = Convert.ToSingle(GetConfig("2: Player", "13:PvP Damage PvE", 0.0));
            PvPDamagePvP = Convert.ToSingle(GetConfig("2: Player", "14:PvP Damage PvP", 1.0));
            PvEDamagePvEStruct = Convert.ToSingle(GetConfig("2: Player", "15: PvEDamagePvEStruct", 0.0));
            PvEDamagePvPStruct = Convert.ToSingle(GetConfig("2: Player", "16: PvEDamagePvPStruct", 0.0));
            PvPDamagePvEStruct = Convert.ToSingle(GetConfig("2: Player", "17: PvPDamagePvEStruct", 0.0));
            PvPDamagePvPStruct = Convert.ToSingle(GetConfig("2: Player", "18: PvPDamagePvPStruct", 1.0));
            //Metabolism
            PvEFoodLossRate = Convert.ToSingle(GetConfig("3: Metabolism", "01: PvEFoodLossRate", 0.03));
            PvEWaterLossRate = Convert.ToSingle(GetConfig("3: Metabolism", "02: PvEWaterLossRate", 0.03));
            PvEHealthGainRate = Convert.ToSingle(GetConfig("3: Metabolism", "03: PvEHealthGainRate", 0.03));
            PvEFoodSpawn = Convert.ToSingle(GetConfig("3: Metabolism", "04: PvEFoodSpawn", 100.0));
            PvEWaterSpawn = Convert.ToSingle(GetConfig("3: Metabolism", "05: PvEWaterSpawn", 250.00));
            PvEHealthSpawn = Convert.ToSingle(GetConfig("3: Metabolism", "06: PvEHealthSpawn", 500.00));
            PvPFoodLossRate = Convert.ToSingle(GetConfig("3: Metabolism", "07: PvPFoodLossRate", 0.03));
            PvPWaterLossRate = Convert.ToSingle(GetConfig("3: Metabolism", "08: PvPWaterLossRate", 0.03));
            PvPHealthGainRate = Convert.ToSingle(GetConfig("3: Metabolism", "09: PvPHealthGainRate", 0.03));
            PvPFoodSpawn = Convert.ToSingle(GetConfig("3: Metabolism", "10: PvPFoodSpawn", 100.0));
            PvPWaterSpawn = Convert.ToSingle(GetConfig("3: Metabolism", "11: PvPWaterSpawn", 250.0));
            PvPHealthSpawn = Convert.ToSingle(GetConfig("3: Metabolism", "12: PvPHealthSpawn", 500.0));
            //NPC
            NPCAttackPvE = Convert.ToBoolean(GetConfig("4: NPC", "01: NPC Attack PvE", true));
            NPCAttackPvP = Convert.ToBoolean(GetConfig("4: NPC", "02: NPC Attack PvP", true));
            PvEAttackNPC = Convert.ToBoolean(GetConfig("4: NPC", "03: PvE Attack NPC", true));
            PvPAttackNPC = Convert.ToBoolean(GetConfig("4: NPC", "04: PvP Attack NPC", true));
            NPCDamagePvE = Convert.ToSingle(GetConfig("4: NPC", "05: NPC Damage PvE", 1.0));
            NPCDamagePvP = Convert.ToSingle(GetConfig("4: NPC", "06: NPC Damage PvP", 1.0));
            PvEDamageNPC = Convert.ToSingle(GetConfig("4: NPC", "07: PvE Damage NPC", 1.0));
            PvPDamageNPC = Convert.ToSingle(GetConfig("4: NPC", "08: PvP Damage NPC", 1.0));
            PvELootNPC = Convert.ToBoolean(GetConfig("4: NPC", "09: PvE Loot NPC", true));
            PvPLootNPC = Convert.ToBoolean(GetConfig("4: NPC", "10: PvP Loot NPC", true));
            //Animal
            PvEDamageAnimals = Convert.ToSingle(GetConfig("5: Animals", "1: PvE Damage Animals", 1.0f));
            PvPDamageAnimals = Convert.ToSingle(GetConfig("5: Animals", "2: PvP Damage Animals", 1.0f));
            NPCDamageAnimals = Convert.ToSingle(GetConfig("5: Animals", "3: NPC Damage Animals", 1.0f));
            AnimalsDamagePvE = Convert.ToSingle(GetConfig("5: Animals", "4: Animals Damage PvE", 1.0f));
            AnimalsDamagePvP = Convert.ToSingle(GetConfig("5: Animals", "5: Animals Damage PvP", 1.0f));
            AnimalsDamageNPC = Convert.ToSingle(GetConfig("5: Animals", "6: Animals Damage NPC", 1.0f));
            //Turret
            TurretPvETargetPvE = Convert.ToBoolean(GetConfig("6: Turret", "01: TurretPvETargetPvE", true));
            TurretPvETargetPvP = Convert.ToBoolean(GetConfig("6: Turret", "02: TurretPvETargetPvP", false));
            TurretPvPTargetPvE = Convert.ToBoolean(GetConfig("6: Turret", "03: TurretPvPTargetPvE", false));
            TurretPvPTargetPvP = Convert.ToBoolean(GetConfig("6: Turret", "04: TurretPvPTargetPvP", true));
            TurretPvETargetNPC = Convert.ToBoolean(GetConfig("6: Turret", "05: TurretPvETargetNPC", true));
            TurretPvPTargetNPC = Convert.ToBoolean(GetConfig("6: Turret", "06: TurretPvPTargetNPC", true));
            TurretPvETargetAnimal = Convert.ToBoolean(GetConfig("6: Turret", "07: TurretPvETargetAnimal", true));
            TurretPvPTargetAnimal = Convert.ToBoolean(GetConfig("6: Turret", "08: TurretPvPTargetAnimal", true));
            TurretPvEDamagePvEAmnt = Convert.ToSingle(GetConfig("6: Turret", "09: TurretPvEDamagePvEAmnt", 1.0f));
            TurretPvEDamagePvPAmnt = Convert.ToSingle(GetConfig("6: Turret", "10: TurretPvEDamagePvPAmnt", 0.0f));
            TurretPvPDamagePvEAmnt = Convert.ToSingle(GetConfig("6: Turret", "11: TurretPvPDamagePvEAmnt", 0.0f));
            TurretPvPDamagePvPAmnt = Convert.ToSingle(GetConfig("6: Turret", "12: TurretPvPDamagePvPAmnt", 1.0f));
            TurretPvEDamageNPCAmnt = Convert.ToSingle(GetConfig("6: Turret", "13: TurretPvEDamageNPCAmnt", 1.0f));
            TurretPvPDamageNPCAmnt = Convert.ToSingle(GetConfig("6: Turret", "14: TurretPvPDamageNPCAmnt", 1.0f));
            TurretPvEDamageAnimalAmnt = Convert.ToSingle(GetConfig("6: Turret", "15: TurretPvEDamageAnimal", 1.0f));
            TurretPvPDamageAnimalAmnt = Convert.ToSingle(GetConfig("6: Turret", "16: TurretPvPDamageAnimal", 1.0f));
            //Helicopter
            HeliTargetPvE = Convert.ToBoolean(GetConfig("7: Heli", "01: HeliTargetPvE", false));
            HeliTargetPvP = Convert.ToBoolean(GetConfig("7: Heli", "02: HeliTargetPvP", true));
            HeliTargetNPC = Convert.ToBoolean(GetConfig("7: Heli", "03: HeliTargetNPC", false));
            HeliDamagePvE = Convert.ToSingle(GetConfig("7: Heli", "04: HeliDamagePvE", 0.0));
            HeliDamagePvP = Convert.ToSingle(GetConfig("7: Heli", "05: HeliDamagePvP", 1.0));
            HeliDamageNPC = Convert.ToSingle(GetConfig("7: Heli", "06: HeliDamageNPC", 0.0));
            HeliDamagePvEStruct = Convert.ToSingle(GetConfig("7: Heli", "07: HeliDamagePvEStruct", 0.0));
            HeliDamagePvPStruct = Convert.ToSingle(GetConfig("7: Heli", "08: HeliDamagePvPStruct", 1.0));
            HeliDamageAnimal = Convert.ToSingle(GetConfig("7: Heli", "09: HeliDamageAnimal", 1.0));
            HeliDamageByPvE = Convert.ToSingle(GetConfig("7: Heli", "10: HeliDamageByPvE", 0.0));
            HeliDamageByPvP = Convert.ToSingle(GetConfig("7: Heli", "11: HeliDamageByPvp", 1.0));
            //fire
            FireDamagePvE = Convert.ToSingle(GetConfig("8: Fire", "1: FireDamagePvE", 0.1));
            FireDamagePvP = Convert.ToSingle(GetConfig("8: Fire", "2: FireDamagePvP", 1.0));
            FireDamageNPC = Convert.ToSingle(GetConfig("8: Fire", "3: FireDamageNPC", 1.0));
            FireDamagePvEStruc = Convert.ToSingle(GetConfig("8: Fire", "4: FireDamagePvEStruc", 0.0));
            FireDamagePvPStruc = Convert.ToSingle(GetConfig("8: Fire", "5: FireDamagePvPStruc", 1.0));
            //others
            DisableUI_FadeIn = Convert.ToBoolean(GetConfig("9-1:Settings", "DisableUI Fadein", false));
            DebugMode = Convert.ToBoolean(GetConfig("9-1:Settings", "DebugMode", false));
            ChatPrefix = Convert.ToString(GetConfig("9-1:Settings", "ChatPrefix", "PvX"));
            ChatPrefixColor = Convert.ToString(GetConfig("9-1:Settings", "ChatPrefixColor", "008800"));
            ChatMessageColor = Convert.ToString(GetConfig("9-1:Settings", "ChatMessageColor", "yellow"));
        }

        object GetConfig(string menu, string dataValue, object defaultValue)
        {
            var data = Config[menu] as Dictionary<string, object>;
            if (data == null)
            {
                data = new Dictionary<string, object>();
                Config[menu] = data;
            }
            object value;
            if (!data.TryGetValue(dataValue, out value))
            {
                value = defaultValue;
                data[dataValue] = value;
            }
            return value;
        }
        T GetConfig<T>(params object[] args)
        {
            List<string> stringArgs = (from arg in args select arg.ToString()).ToList();
            stringArgs.RemoveAt(args.Length - 1);

            if (Config.Get(stringArgs.ToArray()) == null)
            {
                Config.Set(args);
            }

            return (T)Convert.ChangeType(Config.Get(stringArgs.ToArray()), typeof(T));
        }

        bool hasPerm(BasePlayer _player, string perm, string reason = null)
        {
            string regPerm = Title.ToLower() + "." + perm; //pvxselector.admin
            if (permission.UserHasPermission(_player.UserIDString, regPerm)) return true;
            if (reason != "null")
                SendReply(_player, reason);
            return false;
        }

        void permissionHandle()
        {
            string[] Permissionarray = { "admin", "wipe" };
            foreach (string i in Permissionarray)
            {
                string regPerm = Title.ToLower() + "." + i;
                Puts("Checking if " + regPerm + " is registered.");
                if (!permission.PermissionExists(regPerm))
                {
                    permission.RegisterPermission(regPerm, this);
                    Puts(regPerm + " is registered.");
                }
                else
                {
                    Puts(regPerm + " is already registered.");
                }
            }
        }
        #endregion

        #region UI Creation
        class QUI
        {
            static public CuiElementContainer CreateElementContainer(string panelName, string color, string aMin, string aMax, bool cursor = false)
            {
                var NewElement = new CuiElementContainer()
            {
                {
                    new CuiPanel
                    {
                        Image = {Color = color},
                        RectTransform = {AnchorMin = aMin, AnchorMax = aMax},
                        CursorEnabled = cursor
                    },
                    new CuiElement().Parent = "Hud",
                    panelName
                }
            };
                return NewElement;
            }
            static public void CreatePanel(ref CuiElementContainer container, string panel, string color, string aMin, string aMax, bool cursor = false)